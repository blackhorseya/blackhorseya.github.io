<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Comparison installable platform serverless</title>
    <url>/posts/Comparison-installable-platform-serverless/</url>
    <content><![CDATA[<div class="note primary"><p>本文將比較 <code>OpenFaas</code>、<code>OpenWhisk</code>、<code>Kubeless</code>、<code>Knative</code>、<code>Fn</code></p>
</div>

<h2 id="概觀"><a href="#概觀" class="headerlink" title="概觀"></a>概觀</h2><p><img src="https://landscape.cncf.io/images/serverless.png" alt="CNCF Serverless Landscape"></p>
<h2 id="Comparison-table"><a href="#Comparison-table" class="headerlink" title="Comparison table"></a>Comparison table</h2><table>
<thead>
<tr>
<th></th>
<th><a href="https://github.com/openfaas/faas">OpenFaas</a></th>
<th><a href="https://github.com/apache/openwhisk">OpenWhisk</a></th>
<th><a href="https://github.com/kubeless/kubeless">Kubeless</a></th>
<th><a href="https://github.com/knative/serving">Knative</a></th>
<th><a href="https://github.com/fnproject/fn">Fn</a></th>
</tr>
</thead>
<tbody><tr>
<td>Support serverless framework</td>
<td>X</td>
<td>O</td>
<td>O</td>
<td>O</td>
<td>O</td>
</tr>
<tr>
<td>Helm</td>
<td>O</td>
<td>O</td>
<td>O</td>
<td>O</td>
<td>O</td>
</tr>
<tr>
<td>cli</td>
<td>O</td>
<td>O</td>
<td>O</td>
<td>O</td>
<td>O</td>
</tr>
<tr>
<td>開發語言</td>
<td>Go</td>
<td>Scale</td>
<td>Go</td>
<td>Go</td>
<td>Go</td>
</tr>
<tr>
<td>Scale to Zero</td>
<td>O</td>
<td>O</td>
<td>X (<a href="https://github.com/kubeless/kubeless/issues/982">Issues-982</a>)</td>
<td>O</td>
<td>O</td>
</tr>
<tr>
<td>缺點</td>
<td>- 不支持 serverless framework</td>
<td>- 太複雜</td>
<td>- serverless 目前沒有支持 Go</td>
<td>- 太胖</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td>- 用 <code>Scale</code> 開發的？？</td>
<td>- 沒辦法 scale to zero</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<div class="note warning"><p>有支持 <code>Serverless framework</code> 不代表有支持各種語言，請<a href="https://github.com/serverless/serverless/tree/master/lib/plugins/create/templates">參考</a></p>
</div>
]]></content>
      <tags>
        <tag>serverless</tag>
      </tags>
  </entry>
  <entry>
    <title>How to attach and mount an EBS volume to EC2</title>
    <url>/posts/how-to-attach-and-mount-an-ebs-volume-to-ec2/</url>
    <content><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>Why I need to attach and mount an <code>EBS</code> volume to <code>EC2</code>? Because sometimes I need to download large file. if only wait for download from blockchain is very slowly.</p>
<h2 id="How-to-use"><a href="#How-to-use" class="headerlink" title="How to use"></a>How to use</h2><h3 id="Attach"><a href="#Attach" class="headerlink" title="Attach"></a>Attach</h3><ol>
<li>Select the volume, right-click and select the <code>attach volume</code> option.</li>
<li>Select the <code>EC2</code> instance from the instance text box as shown below.</li>
<li>Now, login to your <code>EC2</code> instance and list the available disks using the following command.</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">lsblk</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>Check if then volume has any data using the following command.</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo file -s /dev/xvdf</span><br></pre></td></tr></table></figure>

<h3 id="Mount"><a href="#Mount" class="headerlink" title="Mount"></a>Mount</h3><ol>
<li>Create a directory of your choice to mount our new <code>ext4</code> volume.</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo mkdir -p /mnt/data</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>Mount the volume to <code>/mnt/data</code> directory using the following command.</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo mount /dev/xvdf /mnt/data</span><br></pre></td></tr></table></figure>

<ol start="3">
<li><code>cd</code> into <code>/mnt/data</code> directory and check the disk space to validate the volume mount.</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">df -h .</span><br></pre></td></tr></table></figure>

<h3 id="Unmount"><a href="#Unmount" class="headerlink" title="Unmount"></a>Unmount</h3><p>To unmount the volume, use the <code>umount</code> command as shown below.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">umount /dev/xvdf</span><br></pre></td></tr></table></figure>

<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>I think the solution is a wrong way but actually is very efficient.<br>So I have another solution on kubernetes. You can back up the large file like sqlite to <code>s3</code> bucket and then using <code>Init Container Pattern</code> method to download file from <code>s3</code>. It’s a pretty solution. haha.</p>
]]></content>
      <tags>
        <tag>howto</tag>
        <tag>aws</tag>
        <tag>ebs</tag>
        <tag>ec2</tag>
        <tag>kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>How to collect container log using filebeat</title>
    <url>/posts/how-to-collect-container-log-using-filebeat/</url>
    <content><![CDATA[<h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><h3 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h3><h4 id="Pull-image"><a href="#Pull-image" class="headerlink" title="Pull image"></a>Pull image</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull docker.elastic.co/beats/filebeat:7.9.2</span><br></pre></td></tr></table></figure>

<h4 id="Example-configuration-file"><a href="#Example-configuration-file" class="headerlink" title="Example configuration file"></a>Example configuration file</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -L -O https://raw.githubusercontent.com/elastic/beats/7.9/deploy/docker/filebeat.docker.yml</span><br></pre></td></tr></table></figure>

<h4 id="Run-with-docker-compose"><a href="#Run-with-docker-compose" class="headerlink" title="Run with docker-compose"></a>Run with docker-compose</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">filebeat:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">filebeat</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">docker.elastic.co/beats/filebeat:7.9.0</span></span><br><span class="line">    <span class="attr">network_mode:</span> <span class="string">bridge</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">user:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">command:</span> [<span class="string">&quot;--strict.perms=false&quot;</span>]</span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ELASTICSEARCH_HOST=$&#123;ELASTIC_HOST&#125;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ELASTICSEARCH_USERNAME=$&#123;ELASTIC_USERNAME&#125;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ELASTICSEARCH_PASSWORD=$&#123;ELASTIC_PASSWORD&#125;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./filebeat.docker.yml:/usr/share/filebeat/filebeat.yml:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/lib/docker/containers:/var/lib/docker/containers:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/run/docker.sock:/var/run/docker.sock:ro</span></span><br></pre></td></tr></table></figure>

<h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><p>可以參考 <a href="https://raw.githubusercontent.com/elastic/beats/7.9/deploy/docker/filebeat.docker.yml">example configuration file</a></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">filebeat.config:</span></span><br><span class="line">  <span class="attr">modules:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">$&#123;path.config&#125;/modules.d/*.yml</span></span><br><span class="line">    <span class="attr">reload.enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="attr">filebeat.autodiscover:</span></span><br><span class="line">  <span class="attr">providers:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">docker</span></span><br><span class="line">      <span class="attr">hints.enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">processors:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">add_cloud_metadata:</span> <span class="string">~</span></span><br><span class="line"></span><br><span class="line"><span class="attr">output.elasticsearch:</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">&#x27;$&#123;ELASTICSEARCH_HOSTS:elasticsearch:9200&#125;&#x27;</span></span><br><span class="line">  <span class="attr">username:</span> <span class="string">&#x27;$&#123;ELASTICSEARCH_USERNAME:&#125;&#x27;</span></span><br><span class="line">  <span class="attr">password:</span> <span class="string">&#x27;$&#123;ELASTICSEARCH_PASSWORD:&#125;&#x27;</span></span><br></pre></td></tr></table></figure>

<h3 id="Custom-configuration"><a href="#Custom-configuration" class="headerlink" title="Custom configuration"></a>Custom configuration</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">filebeat.config:</span></span><br><span class="line">  <span class="attr">modules:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">$&#123;path.config&#125;/modules.d/*.yml</span></span><br><span class="line">    <span class="comment">## 開啟 auto reload 的功能 (非必要)</span></span><br><span class="line">    <span class="attr">reload.enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 設定 auto discover 可以參考，複雜的設定在此</span></span><br><span class="line"><span class="comment">## https://www.elastic.co/guide/en/beats/filebeat/current/configuration-autodiscover.html</span></span><br><span class="line"><span class="attr">filebeat.autodiscover:</span></span><br><span class="line">  <span class="attr">providers:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">docker</span></span><br><span class="line">      <span class="attr">templates:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">condition:</span></span><br><span class="line">            <span class="comment">## 如果有 filebeat 的 label，filebeat 才會收集 log</span></span><br><span class="line">            <span class="attr">has_fields:</span> [<span class="string">&quot;docker.container.labels.filebeat&quot;</span>]</span><br><span class="line">          <span class="attr">config:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">container</span></span><br><span class="line">              <span class="attr">paths:</span></span><br><span class="line">                <span class="bullet">-</span> <span class="string">/var/lib/docker/containers/$&#123;data.docker.container.id&#125;/*.log</span></span><br><span class="line">              <span class="attr">exclude_lines:</span> [<span class="string">&quot;^\\s+[\\-`(&#x27;.|_]&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以設定自己的 fields</span></span><br><span class="line"><span class="attr">fields:</span></span><br><span class="line">  <span class="attr">env:</span> <span class="string">prod</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 設定 log rotate</span></span><br><span class="line"><span class="attr">setup.template.name:</span> <span class="string">&quot;svc&quot;</span></span><br><span class="line"><span class="attr">setup.template.pattern:</span> <span class="string">&quot;svc-*&quot;</span></span><br><span class="line"><span class="attr">setup.ilm.enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">setup.ilm.policy_name:</span> <span class="string">&quot;rotation-logs&quot;</span></span><br><span class="line"><span class="attr">setup.ilm.rollover_alias:</span> <span class="string">&quot;svc&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">setup.kibana:</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">&#x27;$&#123;KIBANA_HOST&#125;&#x27;</span></span><br><span class="line">  <span class="attr">username:</span> <span class="string">&#x27;$&#123;KIBANA_USERNAME&#125;&#x27;</span></span><br><span class="line">  <span class="attr">password:</span> <span class="string">&#x27;$&#123;KIBANA_PASSWORD&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">processors:</span></span><br><span class="line">  <span class="comment">## 加入 host metadata</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">add_host_metadata:</span> <span class="string">~</span></span><br><span class="line">  <span class="comment">## 加入 cloud metadata</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">add_cloud_metadata:</span> <span class="string">~</span></span><br><span class="line">  <span class="comment">## 設定如何 decode json</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">decode_json_fields:</span></span><br><span class="line">      <span class="attr">fields:</span> [<span class="string">&quot;message&quot;</span>]</span><br><span class="line">      <span class="attr">process_array:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">max_depth:</span> <span class="number">3</span></span><br><span class="line">      <span class="attr">target:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">      <span class="attr">overwrite_keys:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">add_error_key:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">output.elasticsearch:</span></span><br><span class="line">  <span class="attr">hosts:</span> <span class="string">&#x27;$&#123;ELASTICSEARCH_HOSTS:elasticsearch:9200&#125;&#x27;</span></span><br><span class="line">  <span class="attr">username:</span> <span class="string">&#x27;$&#123;ELASTICSEARCH_USERNAME:&#125;&#x27;</span></span><br><span class="line">  <span class="attr">password:</span> <span class="string">&#x27;$&#123;ELASTICSEARCH_PASSWORD:&#125;&#x27;</span></span><br><span class="line">  <span class="attr">index:</span> <span class="string">&quot;svc-<span class="template-variable">%&#123;[agent.version]&#125;</span>-<span class="template-variable">%&#123;+yyyy.MM.dd&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>filebeat</tag>
        <tag>log</tag>
        <tag>container</tag>
      </tags>
  </entry>
  <entry>
    <title>How to create a public Helm chart repository with GitHub pages</title>
    <url>/posts/how-to-create-a-public-helm-chart-repository-with-github-pages/</url>
    <content><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>When you create a Helm chart, you need a repository to store the chart. so you can store Helm chart in GitHub pages.</p>
<h2 id="Guide"><a href="#Guide" class="headerlink" title="Guide"></a>Guide</h2><p>Create a repository called <code>helm-charts</code> and set <code>Public</code> on <code>GitHub</code></p>
<p><img src="new-repo.png" alt="new repo"></p>
<p>Clone source code</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone git@github.com:blackhorseya/helm-charts.git &amp;&amp; cd helm-charts</span><br></pre></td></tr></table></figure>

<p>Write down <code>README.md</code> </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">echo &quot;# Kubernetes Helm Charts&quot; &gt; README.md</span><br></pre></td></tr></table></figure>

<p>Create a branch called <code>gh-pages</code>, this is <strong>important</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git branch -b gh-pages</span><br></pre></td></tr></table></figure>

<p>Update GitHub pages setting, set <code>Source</code> to <code>gh-pages</code> branch.</p>
<p><img src="github-pages-setting.png" alt="github pages setting"></p>
<p>Create GitHub action workflows <code>mkdir -p .github/workflows</code> and <code>touch .github/workflows/release.yml</code></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Release</span> <span class="string">Charts</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">main</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">release:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">fetch-depth:</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Configure</span> <span class="string">Git</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          git config user.name &quot;$GITHUB_ACTOR&quot;</span></span><br><span class="line"><span class="string">          git config user.email &quot;$GITHUB_ACTOR@users.noreply.github.com&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Add</span> <span class="string">dependency</span> <span class="string">chart</span> <span class="string">repos</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          helm repo add bitnami https://charts.bitnami.com/bitnami</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Run</span> <span class="string">chart-releaser</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">helm/chart-releaser-action@v1.4.0</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">          <span class="attr">CR_TOKEN:</span> <span class="string">&quot;$<span class="template-variable">&#123;&#123; secrets.GITHUB_TOKEN &#125;&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure>

<p>Now, you can create your helm chart in <code>charts</code> folder.</p>
<h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><h3 id="Create-a-new-Helm-chart"><a href="#Create-a-new-Helm-chart" class="headerlink" title="Create a new Helm chart"></a>Create a new Helm chart</h3><p>Create <code>sample</code> Helm chart on <code>main</code> branch.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">helm create charts/sample</span><br><span class="line">git add .</span><br><span class="line">git commit -m &#x27;feat: added sample helm chart&#x27;</span><br><span class="line">git push</span><br></pre></td></tr></table></figure>

<h3 id="Add-your-repo"><a href="#Add-your-repo" class="headerlink" title="Add your repo"></a>Add your repo</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">helm repo add blackhorseya https://blackhorseya.github.io/helm-charts</span><br></pre></td></tr></table></figure>

<p>You can then run <code>helm search repo blackhorseya</code> to see the charts.</p>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://helm.sh/docs/howto/chart_releaser_action/">chart releaser action</a></p>
]]></content>
      <tags>
        <tag>howto</tag>
        <tag>github</tag>
        <tag>helm</tag>
      </tags>
  </entry>
  <entry>
    <title>How to create a service account and kubeconfig</title>
    <url>/posts/how-to-create-a-service-account-and-kubeconfig/</url>
    <content><![CDATA[<h2 id="Create-a-service-account"><a href="#Create-a-service-account" class="headerlink" title="Create a service account"></a>Create a service account</h2><h3 id="Command-line"><a href="#Command-line" class="headerlink" title="Command line"></a>Command line</h3><ol>
<li><p>create a <code>service account</code> called <code>dev</code> in <code>app</code> namespace</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl -n app create sa dev</span><br></pre></td></tr></table></figure>
</li>
<li><p>create a <code>cluster role binding</code> bind <code>dev</code> service account and <code>cluster-admin</code> cluster role</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl create clusterrolebinding app-cluster-admin \</span><br><span class="line">  --clusterrole=cluster-admin \</span><br><span class="line">  --serviceaccount=app:dev</span><br></pre></td></tr></table></figure>
</li>
<li><p>get <code>secret</code> of <code>dev</code> service account</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># get token name</span></span><br><span class="line">TOKENNAME=`kubectl -n app get serviceaccount/dev -o jsonpath=<span class="string">&#x27;&#123;.secrets[0].name&#125;&#x27;</span>`</span><br><span class="line"></span><br><span class="line"><span class="comment"># get token</span></span><br><span class="line">TOKEN=`kubectl -n app get secret <span class="variable">$TOKENNAME</span> -o jsonpath=<span class="string">&#x27;&#123;.data.token&#125;&#x27;</span>| base64 --decode`</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h3 id="Yaml"><a href="#Yaml" class="headerlink" title="Yaml"></a>Yaml</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">dev</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>, <span class="string">&quot;extensions&quot;</span>]</span><br><span class="line">  <span class="attr">resources:</span> [<span class="string">&quot;pods&quot;</span>, <span class="string">&quot;configmap&quot;</span>, <span class="string">&quot;services&quot;</span>, <span class="string">&quot;ingresses&quot;</span>]</span><br><span class="line">  <span class="attr">verbs:</span> [<span class="string">&quot;create&quot;</span>,<span class="string">&quot;delete&quot;</span>,<span class="string">&quot;get&quot;</span>,<span class="string">&quot;list&quot;</span>,<span class="string">&quot;patch&quot;</span>,<span class="string">&quot;update&quot;</span>,<span class="string">&quot;watch&quot;</span>]</span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">  <span class="attr">resources:</span> [<span class="string">&quot;pods/exec&quot;</span>]</span><br><span class="line">  <span class="attr">verbs:</span> [<span class="string">&quot;create&quot;</span>,<span class="string">&quot;delete&quot;</span>,<span class="string">&quot;get&quot;</span>,<span class="string">&quot;list&quot;</span>,<span class="string">&quot;patch&quot;</span>,<span class="string">&quot;update&quot;</span>,<span class="string">&quot;watch&quot;</span>]</span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">  <span class="attr">resources:</span> [<span class="string">&quot;pods/log&quot;</span>]</span><br><span class="line">  <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>,<span class="string">&quot;list&quot;</span>,<span class="string">&quot;watch&quot;</span>]</span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">  <span class="attr">resources:</span> [<span class="string">&quot;events&quot;</span>]</span><br><span class="line">  <span class="attr">verbs:</span> [<span class="string">&quot;watch&quot;</span>]</span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">  <span class="attr">resources:</span> [<span class="string">&quot;secrets&quot;</span>]</span><br><span class="line">  <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">RoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">dev</span></span><br></pre></td></tr></table></figure>

<h2 id="Generate-a-kubeconfig-of-service-account"><a href="#Generate-a-kubeconfig-of-service-account" class="headerlink" title="Generate a kubeconfig of service account"></a>Generate a kubeconfig of service account</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># check flag exist</span></span><br><span class="line"><span class="keyword">if</span> [[ -z <span class="string">&quot;<span class="variable">$1</span>&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;usage: <span class="variable">$0</span> &lt;namespace&gt; &lt;sa&gt;&quot;</span></span><br><span class="line">  <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ -z <span class="string">&quot;<span class="variable">$2</span>&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;usage: <span class="variable">$0</span> <span class="variable">$1</span> &lt;sa&gt;&quot;</span></span><br><span class="line">  <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># create temp dir</span></span><br><span class="line">temp_dir=$(mktemp -d)</span><br><span class="line"><span class="built_in">trap</span> <span class="string">&quot;&#123; rm -rf <span class="variable">$temp_dir</span> ; exit 255; &#125;&quot;</span> EXIT</span><br><span class="line"></span><br><span class="line"><span class="comment"># set variables</span></span><br><span class="line"><span class="comment">## set namespace from arguments</span></span><br><span class="line">ns=<span class="variable">$1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## set service account from arguments</span></span><br><span class="line">sa=<span class="variable">$2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## set kubeconfig filename</span></span><br><span class="line">config_path=<span class="string">&quot;<span class="variable">$2</span>.conf&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># get information</span></span><br><span class="line"><span class="comment">## get sa token name</span></span><br><span class="line">sa_token_name=$(kubectl -n <span class="string">&quot;<span class="variable">$ns</span>&quot;</span> get sa <span class="string">&quot;<span class="variable">$sa</span>&quot;</span> -o jsonpath=<span class="string">&#x27;&#123;.secrets[0].name&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">## get sa token value</span></span><br><span class="line">sa_token=$(kubectl get secrets -n <span class="string">&quot;<span class="variable">$ns</span>&quot;</span> <span class="string">&quot;<span class="variable">$sa_token_name</span>&quot;</span> -o jsonpath=<span class="string">&#x27;&#123;.data.token&#125;&#x27;</span> | base64 -d)</span><br><span class="line"></span><br><span class="line"><span class="comment">## get current context ca.crt</span></span><br><span class="line">kubectl get secrets -n <span class="string">&quot;<span class="variable">$ns</span>&quot;</span> <span class="string">&quot;<span class="variable">$sa_token_name</span>&quot;</span> -o jsonpath=<span class="string">&#x27;&#123;.data.ca\.crt&#125;&#x27;</span> | base64 -d &gt;<span class="string">&quot;<span class="variable">$temp_dir</span>&quot;</span>/ca.crt</span><br><span class="line"></span><br><span class="line"><span class="comment">## get cluster name</span></span><br><span class="line">current_context=$(kubectl config current-context)</span><br><span class="line">cluster_name=$(kubectl config get-contexts <span class="string">&quot;<span class="variable">$current_context</span>&quot;</span> | awk <span class="string">&#x27;&#123;print $3&#125;&#x27;</span> | tail -n 1)</span><br><span class="line"></span><br><span class="line"><span class="comment">## get cluster url</span></span><br><span class="line">cluster_url=$(kubectl config view -o jsonpath=<span class="string">&quot;&#123;.clusters[?(@.name == \&quot;<span class="variable">$&#123;cluster_name&#125;</span>\&quot;)].cluster.server&#125;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># creatje kubeconfig</span></span><br><span class="line">kubectl config --kubeconfig=<span class="string">&quot;<span class="variable">$config_path</span>&quot;</span> \</span><br><span class="line">  set-cluster <span class="string">&quot;<span class="variable">$cluster_name</span>&quot;</span> \</span><br><span class="line">  --server=<span class="string">&quot;<span class="variable">$cluster_url</span>&quot;</span> \</span><br><span class="line">  --certificate-authority=<span class="string">&quot;<span class="variable">$temp_dir</span>/ca.crt&quot;</span> \</span><br><span class="line">  --embed-certs=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">kubectl config --kubeconfig=<span class="string">&quot;<span class="variable">$config_path</span>&quot;</span> \</span><br><span class="line">  set-credentials <span class="string">&quot;<span class="variable">$sa</span>&quot;</span> \</span><br><span class="line">  --token=<span class="string">&quot;<span class="variable">$sa_token</span>&quot;</span></span><br><span class="line"></span><br><span class="line">kubectl config --kubeconfig=<span class="string">&quot;<span class="variable">$config_path</span>&quot;</span> \</span><br><span class="line">  --user=<span class="string">&quot;<span class="variable">$sa</span>&quot;</span> \</span><br><span class="line">  --namespace=<span class="string">&quot;<span class="variable">$ns</span>&quot;</span> \</span><br><span class="line">  --cluster=<span class="string">&quot;<span class="variable">$cluster_name</span>&quot;</span> \</span><br><span class="line">  set-context <span class="string">&quot;<span class="variable">$sa</span>-ctx&quot;</span></span><br><span class="line"></span><br><span class="line">kubectl config --kubeconfig=<span class="string">&quot;<span class="variable">$config_path</span>&quot;</span> \</span><br><span class="line">  use-context <span class="string">&quot;<span class="variable">$sa</span>-ctx&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># finish</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;kubeconfig written to <span class="variable">$config_path</span>&quot;</span></span><br></pre></td></tr></table></figure>

<div class="note primary"><p>可以搭配 <a href="https://blog.seancheng.space/posts/how-to-use-kubeconfig/">merge multiple configs</a> 使用</p>
</div>

<h2 id="Test-kubeconfig"><a href="#Test-kubeconfig" class="headerlink" title="Test kubeconfig"></a>Test kubeconfig</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl --kubeconfig=dev.conf cluster-info</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>howto</tag>
        <tag>kubernetes</tag>
        <tag>kubeconfig</tag>
        <tag>service-account</tag>
      </tags>
  </entry>
  <entry>
    <title>How to design a decentralized exchange</title>
    <url>/posts/how-to-design-a-decentralized-exchange/</url>
    <content><![CDATA[<h2 id="What’s-Decentralized-Exchange"><a href="#What’s-Decentralized-Exchange" class="headerlink" title="What’s Decentralized Exchange"></a>What’s Decentralized Exchange</h2><p>A decentralized exchange (better known as a DEX) is a peer-to-peer marketplace where transactions occur directly between crypto traders. DEXs fulfill one of crypto’s core possibilities: fostering financial transactions that aren’t officiated by banks, brokers, payment processors, or any other kind of intermediary.<br>So a Dex will have the following features:</p>
<ul>
<li>Anonymous</li>
<li>Many coin pair</li>
<li>Peer-to-Peer exchange</li>
</ul>
<h2 id="Requirements"><a href="#Requirements" class="headerlink" title="Requirements"></a>Requirements</h2><ol>
<li>User should be able to sell or buy coin pairs.</li>
<li>User should get realtime updates of price changes.</li>
<li>User should be able to see their own order history.</li>
</ol>
<h2 id="Goal-of-the-system-design"><a href="#Goal-of-the-system-design" class="headerlink" title="Goal of the system design"></a>Goal of the system design</h2><ol>
<li>High availability, Scalable</li>
<li>Low latency</li>
</ol>
<h2 id="Design-Overview"><a href="#Design-Overview" class="headerlink" title="Design Overview"></a>Design Overview</h2><p>I prefer to use Domain-Driven Design(DDD) to differentiate each microservice.</p>
<p>Step 1. Roughly distinguish the various components and find the core component.</p>
<pre class="mermaid">graph TD
    subgraph boundary ["Boundary"]
        subgraph trading ["Trading"]
        end

        subgraph user ["User"]
        end

        subgraph product ["Product"]
        end

        subgraph chia ["Chia"]
        end

        subgraph pubsub ["Pubsub"]
        end
    end

    style trading fill:#79c4f2</pre>

<p>Step 2. Write the functions of each component.</p>
<pre class="mermaid">graph TD
    subgraph boundary ["Boundary"]
        subgraph trading ["Trading"]
            order["Order Context"]
            matching["Matching Context"]
        end

        subgraph user ["User"]
            authentication["Authentication Context"]
        end

        subgraph product ["Product"]
            market["Market Context"]
        end

        subgraph chia ["Chia"]
            offer["Offer Context"]
            onchain["Onchain Context"]
        end

        subgraph pubsub ["Pubsub"]
            publish["Publish Context"]
        end
    end

    style trading fill:#79c4f2</pre>

<p>Step 3. Connect the dependencies of each component.</p>
<pre class="mermaid">graph TD
    subgraph boundary ["Boundary"]
        subgraph trading ["Trading"]
            order["Order Context"]
            matching["Matching Context"]
        end

        subgraph user ["User"]
            authentication["Authentication Context"]
        end

        subgraph product ["Product"]
            market["Market Context"]
        end

        subgraph chia ["Chia"]
            offer["Offer Context"]
            onchain["Onchain Context"]
        end

        subgraph pubsub ["Pubsub"]
            publish["Publish Context"]
        end
    end

    authentication-->order
    market-->order

    order-->matching
    order-->offer
    order-->publish

    matching-->publish
    matching-->onchain

    style trading fill:#79c4f2</pre>

<p>Step 4. Define the kind of domain for each component.</p>
<pre class="mermaid">graph TD
    subgraph boundary ["Boundary"]
        subgraph trading ["Trading (core subdobmain)"]
            order["Order Context"]
            matching["Matching Context"]
        end

        subgraph user ["User (support subdobmain)"]
            authentication["Authentication Context"]
        end

        subgraph product ["Product (support subdobmain)"]
            market["Market Context"]
        end

        subgraph chia ["Chia (generic subdobmain)"]
            offer["Offer Context"]
            onchain["Onchain Context"]
        end

        subgraph pubsub ["Pubsub (generic subdobmain)"]
            publish["Publish Context"]
        end
    end

    authentication-->order
    market-->order

    order-->matching
    order-->offer
    order-->publish

    matching-->publish
    matching-->onchain

    style trading fill:#79c4f2</pre>

<p>And then we can get high level system diagram for our system.</p>
<h2 id="System-Overview"><a href="#System-Overview" class="headerlink" title="System Overview"></a>System Overview</h2><pre class="mermaid">graph TD
    subgraph boundary ["Boundary"]
        subgraph user ["User"]
            login(Login)
        end

        subgraph product ["Product"]
            currency(Currency)
            market(Market)
        end

        subgraph trading ["Trading"]
            submit(Submit Order)
            matching(Matching Engine)
        end

        subgraph chia ["Chia"]
            offer(Parse offer)
            onchain(OnChain)
        end

        subgraph pubsub ["Pubsub"]
            publish(publish)
        end
    end

    login-->submit

    currency-->market

    market-->submit

    submit-->matching
    submit-->offer
    submit-->publish

    matching-->onchain
    matching-->publish

    style trading fill:#79c4f2</pre>

<h3 id="Components"><a href="#Components" class="headerlink" title="Components"></a>Components</h3><ul>
<li>User: It’s an anonymous user component which only create an id for user exclude any identify personal information achieve decentralized system.</li>
<li>Product:<ul>
<li>Currency: It’s a <code>Chia Asset Token</code> (CATs) or coin.</li>
<li>Market: It’s a coin pair to exchange different currencies for user.</li>
</ul>
</li>
<li>Trading: It’s a core component in DEX which handle whole transaction.</li>
<li>Chia:<ul>
<li>Offer: We need a service can parse offer file content from Chia lightweight wallet generate offer.</li>
<li>OnChain: We need a service to bundle many offer to Chia blockchain then the trading transaction before you can.</li>
</ul>
</li>
<li>Pubsub: It’s a message queue which publish order or any information to user.</li>
</ul>
]]></content>
      <tags>
        <tag>howto</tag>
        <tag>dex</tag>
        <tag>chia</tag>
      </tags>
  </entry>
  <entry>
    <title>How to dockerize Go application</title>
    <url>/posts/how-to-dockerize-go-application/</url>
    <content><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>When you develop an application then you need to dockerize your application.</p>
<h2 id="Guide"><a href="#Guide" class="headerlink" title="Guide"></a>Guide</h2><p>Create an application, say <code>Hello world</code> under <code>./cmd/test/main.go</code>.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">go mod init test</span><br></pre></td></tr></table></figure>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	fmt.Println(<span class="string">&quot;Hello world&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Create <code>Dockerfile</code> to dockerize application.</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FROM</span> golang:alpine AS builder</span><br><span class="line"></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> /src</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> go.mod go.sum ./</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> go mod download</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> ./cmd ./cmd</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> go build -o app ./cmd/<span class="built_in">test</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">FROM</span> alpine:<span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> /app</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> --from=builder /src/app ./</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="bash"> ./app</span></span><br></pre></td></tr></table></figure>

<p>Build docker image following command.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker build -t test:latest .</span><br></pre></td></tr></table></figure>

<p>Run docker image following command.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -it --rm test:latest</span><br></pre></td></tr></table></figure>

<p>Then should print <code>Hello world</code> on terminal.</p>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>The multiple stage is <strong>important</strong> in <code>Dockerfile</code>. It can optimize size of docker image.</p>
]]></content>
      <tags>
        <tag>howto</tag>
        <tag>docker</tag>
        <tag>golang</tag>
      </tags>
  </entry>
  <entry>
    <title>How to install jenkins on kubernetes</title>
    <url>/posts/how-to-install-jenkins-on-kubernetes/</url>
    <content><![CDATA[<div class="note primary"><ul>
<li>本文基於 <code>Kubernets</code>、<code>Helm 3</code> 安裝 <code>Jenkins</code> 並自動啟動 <code>Slave</code></li>
</ul>
</div>

<h2 id="前置條件"><a href="#前置條件" class="headerlink" title="前置條件"></a>前置條件</h2><ul>
<li>Kubernetes</li>
<li>Helm 3</li>
</ul>
<h2 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h2><p>這裡使用 <a href="https://github.com/helm/charts/tree/master/stable/jenkins">Stable/Jenkins</a> helm chart 安裝</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">helm --namespace jenkins upgrade --install jenkins stable/jenkins</span><br></pre></td></tr></table></figure>

<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="values-yaml"><a href="#values-yaml" class="headerlink" title="values.yaml"></a>values.yaml</h3><p>完整配置<a href="https://github.com/helm/charts/tree/master/stable/jenkins#configuration">參考</a></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">master:</span></span><br><span class="line">  <span class="comment"># admin 的名字</span></span><br><span class="line">  <span class="attr">adminUser:</span> <span class="string">&#x27;admin&#x27;</span></span><br><span class="line">  <span class="comment"># admin 的密碼</span></span><br><span class="line">  <span class="attr">adminPassword:</span> <span class="string">&#x27;admin&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 設定 jenkins master 和 slave 要使用的 namespace</span></span><br><span class="line">  <span class="attr">slaveKubernetesNamespace:</span> <span class="string">&#x27;jenkins&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 預先安裝的 plugins</span></span><br><span class="line">  <span class="attr">installPlugins:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">kubernetes:latest</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">workflow-job:latest</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">workflow-aggregator:latest</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">credentials-binding:latest</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">git:latest</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">pipeline-github:latest</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">slack:latest</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">embeddable-build-status:latest</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ssh-agent:latest</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># configuration as code, 未完待續</span></span><br><span class="line">  <span class="attr">JCasC:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<h3 id="設定"><a href="#設定" class="headerlink" title="設定"></a>設定</h3><h4 id="Github-Server"><a href="#Github-Server" class="headerlink" title="Github Server"></a>Github Server</h4><p>如果有使用 <code>Multibranch pipeline</code> 要設定，這樣才會自動註冊 <code>Webhook</code><br><strong>很重要</strong></p>
<p><img src="github-server-config.png" alt="github-server-config"></p>
<h4 id="Slack-Notify"><a href="#Slack-Notify" class="headerlink" title="Slack Notify"></a>Slack Notify</h4><p>如果要使用 <code>Slack</code> 發送消息</p>
<p><img src="slack-config.png" alt="slack-config"></p>
<h4 id="Shared-Library"><a href="#Shared-Library" class="headerlink" title="Shared Library"></a>Shared Library</h4><p>可以將一些共用的 <code>Method</code>，拉出來變成一個 <code>Library</code>，再導入進來</p>
<p><img src="shared-library-config.png" alt="shared-library-config"></p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="建立-pipeline"><a href="#建立-pipeline" class="headerlink" title="建立 pipeline"></a>建立 pipeline</h3><p><code>Jenkinsfile Declarative</code>, 詳細語法<a href="https://jenkins.io/doc/book/pipeline/syntax/">參考</a></p>
<div class="note danger"><ul>
<li>英文的比較完整</li>
</ul>
</div>

<p><a href="https://github.com/blackhorseya/test-jenkins-pipeline">完整範例</a></p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env groovy</span></span><br><span class="line"></span><br><span class="line">pipeline &#123;</span><br><span class="line">    options &#123;</span><br><span class="line">        buildDiscarder(logRotator(<span class="attr">numToKeepStr:</span> <span class="string">&#x27;5&#x27;</span>))</span><br><span class="line">        preserveStashes(<span class="attr">buildCount:</span> <span class="number">5</span>)</span><br><span class="line">        disableConcurrentBuilds()</span><br><span class="line">        parallelsAlwaysFailFast()</span><br><span class="line">    &#125;</span><br><span class="line">    parameters &#123;</span><br><span class="line">        booleanParam(<span class="attr">name:</span> <span class="string">&#x27;DEBUG_BUILD&#x27;</span>, <span class="attr">defaultValue:</span> <span class="literal">true</span>, <span class="attr">description:</span> <span class="string">&#x27;if true, never create release&#x27;</span>)</span><br><span class="line">        text(<span class="attr">name:</span> <span class="string">&#x27;RELEASE_NOTE&#x27;</span>, <span class="attr">defaultValue:</span> <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">### feature</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">- new feature 1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">### fix</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">- modify config</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span>, <span class="attr">description:</span> <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line">    triggers &#123;</span><br><span class="line">        pollSCM(<span class="string">&#x27;H H(20-21) * * *&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    environment &#123;</span><br><span class="line">        <span class="comment">// application settings</span></span><br><span class="line">        APP_NAME = <span class="string">&quot;test-jenkins-pipeline&quot;</span></span><br><span class="line">        VERSION = <span class="string">&quot;1.0.0&quot;</span></span><br><span class="line">        FULL_VERSION = <span class="string">&quot;$&#123;VERSION&#125;.$&#123;BUILD_ID&#125;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    agent &#123;</span><br><span class="line">        kubernetes &#123;</span><br><span class="line">            yaml <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">apiVersion: v1</span></span><br><span class="line"><span class="string">kind: Pod</span></span><br><span class="line"><span class="string">spec:</span></span><br><span class="line"><span class="string">  containers:</span></span><br><span class="line"><span class="string">  - name: builder</span></span><br><span class="line"><span class="string">    image: blackhorseya/dotnet-builder:3.1-alpine</span></span><br><span class="line"><span class="string">    command: [&#x27;cat&#x27;]</span></span><br><span class="line"><span class="string">    tty: true</span></span><br><span class="line"><span class="string">  - name: docker</span></span><br><span class="line"><span class="string">    image: docker:latest</span></span><br><span class="line"><span class="string">    command: [&#x27;cat&#x27;]</span></span><br><span class="line"><span class="string">    tty: true</span></span><br><span class="line"><span class="string">    volumeMounts:</span></span><br><span class="line"><span class="string">    - name: dockersock</span></span><br><span class="line"><span class="string">      mountPath: /var/run/docker.sock</span></span><br><span class="line"><span class="string">  - name: helm</span></span><br><span class="line"><span class="string">    image: alpine/helm:3.1.0</span></span><br><span class="line"><span class="string">    command: [&#x27;cat&#x27;]</span></span><br><span class="line"><span class="string">    tty: true</span></span><br><span class="line"><span class="string">  volumes:</span></span><br><span class="line"><span class="string">  - name: dockersock</span></span><br><span class="line"><span class="string">    hostPath:</span></span><br><span class="line"><span class="string">      path: /var/run/docker.sock</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    stages &#123;</span><br><span class="line">        stage(<span class="string">&#x27;Prepare&#x27;</span>) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                script &#123;</span><br><span class="line">                    <span class="keyword">def</span> causes = currentBuild.getBuildCauses()</span><br><span class="line">                    echo <span class="string">&quot;causes: $&#123;causes&#125;&quot;</span></span><br><span class="line"></span><br><span class="line">                    <span class="keyword">def</span> commitChangeset = sh(</span><br><span class="line">                            <span class="symbol">label:</span> <span class="string">&quot;get changeset&quot;</span>, </span><br><span class="line">                            <span class="symbol">returnStdout:</span> <span class="literal">true</span>, </span><br><span class="line">                            <span class="symbol">script:</span> <span class="string">&#x27;git diff-tree --no-commit-id --name-status -r HEAD&#x27;</span></span><br><span class="line">                        ).trim()</span><br><span class="line">                    echo <span class="string">&quot;changeset: $&#123;commitChangeset&#125;&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                sh <span class="attr">label:</span> <span class="string">&quot;print all environment variable&quot;</span>, <span class="attr">script:</span> <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">                printenv | sort</span></span><br><span class="line"><span class="string">                &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">                container(<span class="string">&#x27;builder&#x27;</span>) &#123;</span><br><span class="line">                    sh <span class="attr">label:</span> <span class="string">&quot;print dotnet info&quot;</span>, <span class="attr">script:</span> <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">                    dotnet --info</span></span><br><span class="line"><span class="string">                    &quot;&quot;&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                container(<span class="string">&#x27;docker&#x27;</span>) &#123;</span><br><span class="line">                    sh <span class="attr">label:</span> <span class="string">&quot;print docker info and version&quot;</span>, <span class="attr">script:</span> <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">                    docker info</span></span><br><span class="line"><span class="string">                    docker version</span></span><br><span class="line"><span class="string">                    &quot;&quot;&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                container(<span class="string">&#x27;helm&#x27;</span>) &#123;</span><br><span class="line">                    script &#123;</span><br><span class="line">                        sh <span class="attr">label:</span> <span class="string">&quot;print helm info&quot;</span>, <span class="attr">script:</span> <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">                        helm version</span></span><br><span class="line"><span class="string">                        &quot;&quot;&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        stage(<span class="string">&#x27;Build&#x27;</span>) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                container(<span class="string">&#x27;builder&#x27;</span>) &#123;</span><br><span class="line">                    echo <span class="string">&quot;dotnet build&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        stage(<span class="string">&#x27;Test&#x27;</span>) &#123;</span><br><span class="line">            parallel &#123;</span><br><span class="line">                stage(<span class="string">&#x27;Unit Test&#x27;</span>) &#123;</span><br><span class="line">                    steps &#123;</span><br><span class="line">                        container(<span class="string">&#x27;builder&#x27;</span>) &#123;</span><br><span class="line">                            echo <span class="string">&quot;dotnet test&quot;</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                stage(<span class="string">&#x27;Regression Test&#x27;</span>) &#123;</span><br><span class="line">                    when &#123;</span><br><span class="line">                        branch <span class="string">&#x27;release/*&#x27;</span></span><br><span class="line">                        triggeredBy <span class="attr">cause:</span> <span class="string">&quot;UserIdCause&quot;</span></span><br><span class="line">                        expression &#123; <span class="keyword">return</span> !params.DEBUG_BUILD &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    steps &#123;</span><br><span class="line">                        container(<span class="string">&#x27;builder&#x27;</span>) &#123;</span><br><span class="line">                            echo <span class="string">&quot;regression test success&quot;</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        stage(<span class="string">&#x27;Static Code Analysis&#x27;</span>) &#123;</span><br><span class="line">            when &#123;</span><br><span class="line">                anyOf &#123;</span><br><span class="line">                    allOf &#123;</span><br><span class="line">                        branch <span class="string">&#x27;develop&#x27;</span></span><br><span class="line">                        triggeredBy <span class="string">&#x27;SCMTrigger&#x27;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                    allOf &#123;</span><br><span class="line">                        triggeredBy <span class="attr">cause:</span> <span class="string">&quot;UserIdCause&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            steps &#123;</span><br><span class="line">                echo <span class="string">&quot;static code analysis&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        stage(<span class="string">&#x27;Build and push docker image&#x27;</span>) &#123;</span><br><span class="line">            when &#123;</span><br><span class="line">                anyOf &#123;</span><br><span class="line">                    allOf &#123;</span><br><span class="line">                        branch <span class="string">&#x27;develop&#x27;</span></span><br><span class="line">                        triggeredBy <span class="string">&#x27;SCMTrigger&#x27;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                    allOf &#123;</span><br><span class="line">                        triggeredBy <span class="attr">cause:</span> <span class="string">&quot;UserIdCause&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            steps &#123;</span><br><span class="line">                container(<span class="string">&#x27;docker&#x27;</span>) &#123;</span><br><span class="line">                    echo <span class="string">&quot;docker build and push image&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        stage(<span class="string">&quot;Deploy&quot;</span>) &#123;</span><br><span class="line">            when &#123;</span><br><span class="line">                anyOf &#123;</span><br><span class="line">                    allOf &#123;</span><br><span class="line">                        branch <span class="string">&#x27;develop&#x27;</span></span><br><span class="line">                        triggeredBy <span class="string">&#x27;SCMTrigger&#x27;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                    allOf &#123;</span><br><span class="line">                        triggeredBy <span class="attr">cause:</span> <span class="string">&quot;UserIdCause&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            steps &#123;</span><br><span class="line">                container(<span class="string">&#x27;helm&#x27;</span>) &#123;</span><br><span class="line">                    echo <span class="string">&quot;deploy to env&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    post &#123;</span><br><span class="line">        always &#123;</span><br><span class="line">            echo <span class="string">&quot;done&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="結果"><a href="#結果" class="headerlink" title="結果"></a>結果</h3><p><img src="pipeline-flow.png" alt="pipeline-flow"></p>
]]></content>
      <tags>
        <tag>kubernetes</tag>
        <tag>jenkins</tag>
      </tags>
  </entry>
  <entry>
    <title>how to install kubernetes on raspberry</title>
    <url>/posts/how-to-install-kubernetes-on-raspberry/</url>
    <content><![CDATA[<h2 id="Prerequisite"><a href="#Prerequisite" class="headerlink" title="Prerequisite"></a>Prerequisite</h2><h3 id="Static-IP"><a href="#Static-IP" class="headerlink" title="Static IP"></a>Static IP</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># /etc/netplan/50-cloud-init.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">network:</span></span><br><span class="line">  <span class="attr">ethernets:</span></span><br><span class="line">    <span class="attr">ens192:</span></span><br><span class="line">      <span class="attr">addresses:</span> [ <span class="number">192.168</span><span class="number">.0</span><span class="number">.101</span><span class="string">/24</span> ]</span><br><span class="line">      <span class="attr">gateway4:</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">      <span class="attr">nameservers:</span></span><br><span class="line">        <span class="attr">addresses:</span> [ <span class="number">8.8</span><span class="number">.8</span><span class="number">.8</span>,<span class="number">1.1</span><span class="number">.1</span><span class="number">.1</span> ]</span><br><span class="line">      <span class="attr">dhcp4:</span> <span class="literal">no</span></span><br><span class="line">  <span class="attr">version:</span> <span class="number">2</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo netplan apply</span><br></pre></td></tr></table></figure>

<h3 id="Enable-cgroups-limit-support"><a href="#Enable-cgroups-limit-support" class="headerlink" title="Enable cgroups limit support"></a>Enable cgroups limit support</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo sed -i <span class="string">&#x27;$ s/$/ cgroup_enable=cpuset cgroup_enable=memory cgroup_memory=1 swapaccount=1/&#x27;</span> /boot/firmware/cmdline.txt</span><br></pre></td></tr></table></figure>

<h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>using <a href="https://kubespray.io/#/">kubespray</a></p>
<h2 id="Results"><a href="#Results" class="headerlink" title="Results"></a>Results</h2><p><img src="/posts/how-to-install-kubernetes-on-raspberry/cluster-pi.jpeg" alt="cluster-pi"></p>
]]></content>
      <tags>
        <tag>howto</tag>
        <tag>kubernetes</tag>
        <tag>raspberry</tag>
      </tags>
  </entry>
  <entry>
    <title>how to run load testing via grafana k6</title>
    <url>/posts/how-to-run-load-testing-via-grafana-k6/</url>
    <content><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>When we developed a project then we need against the project to run load testing to measurement application loading for later application monitoring. We can use like <code>wrk</code>, <code>jmeter</code>, etc.<br>but I found an open source <a href="https://k6.io/">k6</a> from grafana lab.</p>
<h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>Install <code>k6</code> cli.<br><a href="https://k6.io/docs/getting-started/installation/">k6 installation</a></p>
<h2 id="Test-Types"><a href="#Test-Types" class="headerlink" title="Test Types"></a>Test Types</h2><p><a href="https://k6.io/docs/test-types/introduction/">Introduction</a></p>
<p>It is possible to perform many types of tests using k6, each type serving a different purpose.</p>
<p><img src="/posts/how-to-run-load-testing-via-grafana-k6/load-testing.png" alt="load testing"></p>
<p>Each test type is designed to give you different insights about your system.</p>
<ul>
<li><strong>Smoke Test</strong>: role is to verify that your system can handle minimal load, without any problems.</li>
<li><strong>Load Test</strong>: It’s primarily concerned with assessing the performance of your system in terms of concurrent users or requests per second.: It’s primarily concerned with assessing the performance of your system in terms of concurrent users or requests per second.</li>
<li><strong>Stress Test</strong> and <strong>Spike testing</strong>: are concerned with assessing the limits of your system and stability under extreme conditions.</li>
<li><strong>Soak Test</strong>: tells you about reliability and performance of your system over an extended period of time.</li>
</ul>
<p>The important thing to understand is that each test can be performed with the same test script. You can write one script and perform all the above tests with it. The only thing that changes is the test configuration, the logic stays the same.</p>
<p>Different test types will teach you different things about your system and give you the insight needed to understand or optimize performance.</p>
<h2 id="First-write-smoke-testing"><a href="#First-write-smoke-testing" class="headerlink" title="First write smoke testing"></a>First write smoke testing</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> http <span class="keyword">from</span> <span class="string">&#x27;k6/http&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; check, group, sleep, fail &#125; <span class="keyword">from</span> <span class="string">&#x27;k6&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> options = &#123;</span><br><span class="line">  <span class="attr">vus</span>: <span class="number">1</span>, <span class="comment">// 1 user looping for 1 minute</span></span><br><span class="line">  <span class="attr">duration</span>: <span class="string">&#x27;1m&#x27;</span>,</span><br><span class="line"></span><br><span class="line">  <span class="attr">thresholds</span>: &#123;</span><br><span class="line">    <span class="attr">http_req_duration</span>: [<span class="string">&#x27;p(99)&lt;1500&#x27;</span>], <span class="comment">// 99% of requests must complete below 1.5s</span></span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> BASE_URL = <span class="string">&#x27;https://test-api.k6.io&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> USERNAME = <span class="string">&#x27;TestUser&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> PASSWORD = <span class="string">&#x27;SuperCroc2020&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> () =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> loginRes = http.post(<span class="string">`<span class="subst">$&#123;BASE_URL&#125;</span>/auth/token/login/`</span>, &#123;</span><br><span class="line">    <span class="attr">username</span>: USERNAME,</span><br><span class="line">    <span class="attr">password</span>: PASSWORD,</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  check(loginRes, &#123;</span><br><span class="line">    <span class="string">&#x27;logged in successfully&#x27;</span>: <span class="function">(<span class="params">resp</span>) =&gt;</span> resp.json(<span class="string">&#x27;access&#x27;</span>) !== <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> authHeaders = &#123;</span><br><span class="line">    <span class="attr">headers</span>: &#123;</span><br><span class="line">      <span class="attr">Authorization</span>: <span class="string">`Bearer <span class="subst">$&#123;loginRes.json(<span class="string">&#x27;access&#x27;</span>)&#125;</span>`</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> myObjects = http.get(<span class="string">`<span class="subst">$&#123;BASE_URL&#125;</span>/my/crocodiles/`</span>, authHeaders).json();</span><br><span class="line">  check(myObjects, &#123; <span class="string">&#x27;retrieved crocodiles&#x27;</span>: <span class="function">(<span class="params">obj</span>) =&gt;</span> obj.length &gt; <span class="number">0</span> &#125;);</span><br><span class="line"></span><br><span class="line">  sleep(<span class="number">1</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">k6 run scripts/smoke.js</span><br></pre></td></tr></table></figure>

<p><img src="/posts/how-to-run-load-testing-via-grafana-k6/smoke-testing-result.png" alt="smoke testing result"></p>
]]></content>
      <tags>
        <tag>howto</tag>
        <tag>load testing</tag>
        <tag>k6</tag>
      </tags>
  </entry>
  <entry>
    <title>how to set up EKS via terraform</title>
    <url>/posts/how-to-set-up-EKS-via-terraform/</url>
    <content><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>We can use <code>terraform</code> to set up a lot of infrastructure configuration. So I will set up <code>EKS</code> via <code>terraform</code> today.</p>
<h2 id="Prerequisite"><a href="#Prerequisite" class="headerlink" title="Prerequisite"></a>Prerequisite</h2><p><a href="https://www.terraform.io/">Terraform</a><br><a href="https://aws.amazon.com/">AWS</a></p>
<h2 id="Initialize-project"><a href="#Initialize-project" class="headerlink" title="Initialize project"></a>Initialize project</h2><p>Write <code>main.tf</code> and <code>variables.tf</code> files</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># main.tf</span><br><span class="line">terraform &#123;</span><br><span class="line">  required_providers &#123;</span><br><span class="line">    aws = &#123;</span><br><span class="line">      source = &quot;hashicorp/aws&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">provider &quot;aws&quot; &#123;</span><br><span class="line">  region     = &quot;us-east-2&quot;</span><br><span class="line">  access_key = var.aws_access_key</span><br><span class="line">  secret_key = var.aws_secret_key</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># variables.tf</span><br><span class="line">variable &quot;aws_access_key&quot; &#123;</span><br><span class="line">  type = string</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">variable &quot;aws_secret_key&quot; &#123;</span><br><span class="line">  type = string</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Then you can run <code>terraform init</code> to initialize your project.</p>
<h2 id="Set-up-EKS"><a href="#Set-up-EKS" class="headerlink" title="Set up EKS"></a>Set up EKS</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># eks.tf</span><br><span class="line">resource &quot;aws_iam_role&quot; &quot;eks_cluster&quot; &#123;</span><br><span class="line">  name = &quot;eks-cluster&quot;</span><br><span class="line"></span><br><span class="line">  assume_role_policy = jsondecode(&#123;</span><br><span class="line">    &quot;Version&quot; : &quot;2012-10-17&quot;,</span><br><span class="line">    &quot;Statement&quot; : [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;Effect&quot; : &quot;Allow&quot;,</span><br><span class="line">        &quot;Principal&quot; : &#123;</span><br><span class="line">          &quot;Service&quot; : &quot;eks.amazonaws.com&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;Action&quot; : &quot;sts:AssumeRole&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">resource &quot;aws_iam_role_policy_attachment&quot; &quot;AmazonEKSClusterPolicy&quot; &#123;</span><br><span class="line">  policy_arn = &quot;arn:aws:iam::aws:policy/AmazonEKSClusterPolicy&quot;</span><br><span class="line">  role       = aws_iam_role.eks_cluster.name</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">resource &quot;aws_iam_role_policy_attachment&quot; &quot;AmazonEKSServicePolicy&quot; &#123;</span><br><span class="line">  policy_arn = &quot;arn:aws:iam::aws:policy/AmazonEKSServicePolicy&quot;</span><br><span class="line">  role       = aws_iam_role.eks_cluster.name</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">resource &quot;aws_eks_cluster&quot; &quot;aws_eks&quot; &#123;</span><br><span class="line">  name     = &quot;my-cluster&quot;</span><br><span class="line">  role_arn = aws_iam_role.eks_cluster.arn</span><br><span class="line"></span><br><span class="line">  vpc_config &#123;</span><br><span class="line">    # change this to your subnet ids</span><br><span class="line">    subnet_ids = [&quot;subnet-03425fce64e1d9cc5&quot;, &quot;subnet-01765ab9b3f13dace&quot;]</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  tags = &#123;</span><br><span class="line">    name = &quot;my-cluster&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">resource &quot;aws_iam_role&quot; &quot;eks_nodes&quot; &#123;</span><br><span class="line">  name = &quot;eks-node-group&quot;</span><br><span class="line"></span><br><span class="line">  assume_role_policy = jsondecode(&#123;</span><br><span class="line">    &quot;Version&quot; : &quot;2012-10-17&quot;,</span><br><span class="line">    &quot;Statement&quot; : [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;Effect&quot; : &quot;Allow&quot;,</span><br><span class="line">        &quot;Principal&quot; : &#123;</span><br><span class="line">          &quot;Service&quot; : &quot;ec2.amazonaws.com&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;Action&quot; : &quot;sts:AssumeRole&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">resource &quot;aws_iam_role_policy_attachment&quot; &quot;CloudWatchAgentServerPolicy&quot; &#123;</span><br><span class="line">  policy_arn = &quot;arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy&quot;</span><br><span class="line">  role       = aws_iam_role.eks_nodes.name</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">resource &quot;aws_iam_role_policy_attachment&quot; &quot;AmazonEKSWorkerNodePolicy&quot; &#123;</span><br><span class="line">  policy_arn = &quot;arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy&quot;</span><br><span class="line">  role       = aws_iam_role.eks_nodes.name</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">resource &quot;aws_iam_role_policy_attachment&quot; &quot;AmazonEKS_CNI_Policy&quot; &#123;</span><br><span class="line">  policy_arn = &quot;arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy&quot;</span><br><span class="line">  role       = aws_iam_role.eks_nodes.name</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">resource &quot;aws_iam_role_policy_attachment&quot; &quot;AmazonEC2ContainerRegistryReadOnly&quot; &#123;</span><br><span class="line">  policy_arn = &quot;arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly&quot;</span><br><span class="line">  role       = aws_iam_role.eks_nodes.name</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">resource &quot;aws_eks_node_group&quot; &quot;node&quot; &#123;</span><br><span class="line">  cluster_name    = aws_eks_cluster.aws_eks.name</span><br><span class="line">  node_group_name = &quot;node&quot;</span><br><span class="line">  node_role_arn   = aws_iam_role.eks_nodes.arn</span><br><span class="line">  # change this to your subnet ids</span><br><span class="line">  subnet_ids      = [&quot;subnet-03425fce64e1d9cc5&quot;, &quot;subnet-01765ab9b3f13dace&quot;]</span><br><span class="line">  # you can change this to you want instance type</span><br><span class="line">  instance_types  = [&quot;t3.xlarge&quot;]</span><br><span class="line"></span><br><span class="line">  # you can change desired_size for default node count</span><br><span class="line">  scaling_config &#123;</span><br><span class="line">    desired_size = 3</span><br><span class="line">    max_size     = 5</span><br><span class="line">    min_size     = 1</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  # Ensure that IAM Role permissions are created before and deleted after EKS Node Group handling.</span><br><span class="line">  # Otherwise, EKS will not be able to properly delete EC2 Instances and Elastic Network Interfaces.</span><br><span class="line">  depends_on = [</span><br><span class="line">    aws_iam_role_policy_attachment.CloudWatchAgentServerPolicy,</span><br><span class="line">    aws_iam_role_policy_attachment.AmazonEKSWorkerNodePolicy,</span><br><span class="line">    aws_iam_role_policy_attachment.AmazonEKS_CNI_Policy,</span><br><span class="line">    aws_iam_role_policy_attachment.AmazonEC2ContainerRegistryReadOnly,</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Then you can run <code>terraform plan</code> check something to change.<br>If any change is ok then you can run <code>terraform apply</code> to set up infrastructure.</p>
]]></content>
      <tags>
        <tag>howto</tag>
        <tag>aws</tag>
        <tag>kubernetes</tag>
        <tag>setup</tag>
        <tag>terraform</tag>
        <tag>eks</tag>
      </tags>
  </entry>
  <entry>
    <title>How to set up Phabricator</title>
    <url>/posts/how-to-set-up-Phabricator/</url>
    <content><![CDATA[<h2 id="Installing-on-Kubernetes"><a href="#Installing-on-Kubernetes" class="headerlink" title="Installing on Kubernetes"></a>Installing on Kubernetes</h2><p>使用 <a href="https://github.com/bitnami/charts/tree/master/bitnami/phabricator/">helm chart</a> 安裝 <code>Phabricator</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">NS=cicd</span><br><span class="line">NAME=pha</span><br><span class="line">repo=bitnami/phabricator</span><br><span class="line"></span><br><span class="line">helm --namespace=<span class="variable">$&#123;NS&#125;</span> upgrade --install <span class="variable">$&#123;NAME&#125;</span> <span class="variable">$&#123;repo&#125;</span> -f values.yaml</span><br></pre></td></tr></table></figure>

<h2 id="Configure-values"><a href="#Configure-values" class="headerlink" title="Configure values"></a>Configure values</h2><p>下載 default values</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">helm show values bitnami/phabricator &gt; values.yaml</span><br></pre></td></tr></table></figure>

<p>詳細配置可以參考<a href="https://github.com/bitnami/charts/tree/master/bitnami/phabricator/#parameters">官方文件</a></p>
<h2 id="How-to-use"><a href="#How-to-use" class="headerlink" title="How to use"></a>How to use</h2><h3 id="Authentication"><a href="#Authentication" class="headerlink" title="Authentication"></a>Authentication</h3><h4 id="Manual-verify"><a href="#Manual-verify" class="headerlink" title="Manual verify"></a>Manual verify</h4><p>如果沒有配置 smtp 的話，需要手動認證 mail</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">auth verity <span class="variable">$&#123;target_mail_address&#125;</span></span><br></pre></td></tr></table></figure>

<h4 id="Adding-auth-provider"><a href="#Adding-auth-provider" class="headerlink" title="Adding auth provider"></a>Adding auth provider</h4><p>可以在側邊欄中找到 <code>Auth</code>，點擊 <code>Add Provider</code>，可以新增所需要的 <code>Auth</code>，例如 <code>Github</code>。</p>
<p>如果 <code>Add Provider</code> 呈現灰色表示 <code>Auth</code> 的設定被鎖定了，可以使用 <code>command line</code> 解鎖，編輯完再將它鎖定</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">auth unlock</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>howto</tag>
        <tag>kubernetes</tag>
        <tag>setup</tag>
        <tag>phabricator</tag>
      </tags>
  </entry>
  <entry>
    <title>How to set up a blog using Hexo and Github</title>
    <url>/posts/how-to-set-up-a-blog-using-hexo-and-github/</url>
    <content><![CDATA[<p><a href="https://hexo.io/">Hexo</a></p>
<h2 id="Installation-hexo-cli"><a href="#Installation-hexo-cli" class="headerlink" title="Installation hexo-cli"></a>Installation hexo-cli</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<h2 id="Setup"><a href="#Setup" class="headerlink" title="Setup"></a>Setup</h2><ol>
<li>在 github 上建立一個 private repository，用作儲存 blog 的 source。<a href="https://github.com/new">New Repository</a></li>
<li>再建立一個 public repository 是 github pages 用作 static website</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init blog</span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>

<h3 id="Modify-package-json"><a href="#Modify-package-json" class="headerlink" title="Modify package.json"></a>Modify package.json</h3><p>可以加入 <code>debug</code>，用作 run server 並且顯示 <code>draft</code></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;build&quot;</span>: <span class="string">&quot;hexo generate&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;clean&quot;</span>: <span class="string">&quot;hexo clean&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;deploy&quot;</span>: <span class="string">&quot;hexo clean &amp;&amp; hexo deploy&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;server&quot;</span>: <span class="string">&quot;hexo server&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;debug&quot;</span>: <span class="string">&quot;hexo server -w --draft --open&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h3><p>詳細可以參考<a href="https://hexo.io/docs/configuration">官方文件</a></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Sean&#x27;s</span> <span class="string">blog</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">Senior</span> <span class="string">Engineer</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="attr">keywords:</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">Sean</span> <span class="string">Cheng</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">en</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">&#x27;Asia/Taipei&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as &#x27;http://yoursite.com/child&#x27; and root as &#x27;/child/&#x27;</span></span><br><span class="line"><span class="comment">## The URL of your website, must starts with http:// or https://</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://blog.seancheng.space/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Writing</span></span><br><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">$&#123;YOUR_GITHUB_PAGE_REPO_WITH_SSH&#125;</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure>

<h3 id="CNAME"><a href="#CNAME" class="headerlink" title="CNAME"></a>CNAME</h3><p>建立一個名為 <code>CNAME</code> file，用作定義 <code>Github pages</code> custom domain</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &#x27;blog.seancheng.space&#x27; &gt; ./source/CNAME</span><br></pre></td></tr></table></figure>

<h3 id="Deployment"><a href="#Deployment" class="headerlink" title="Deployment"></a>Deployment</h3><p>使用 <code>Github Action</code> 部署到 <code>Github pages</code></p>
<ol>
<li><p>建立一對 rsa key</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 4096 -f blog-deploy-key -C blog</span><br></pre></td></tr></table></figure>
</li>
<li><p>在 <code>Github pages</code> repository 中的 <code>Settings</code> -&gt; <code>Deploy keys</code> 新增上一步驟產生出來的公鑰，名為 <code>HEXO_DEPLOY_PUB</code>，記得勾選 <code>Allow write access</code></p>
</li>
<li><p>在 blog 的 private repository 中的 <code>Settings</code> -&gt; <code>Secrets</code> 新增私鑰，名為 <code>HEXO_DEPLOY_PRI</code></p>
</li>
<li><p>在 blog 的 private repository 中新增 <code>workflows</code> yaml file</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># .github/workflows/main.yml</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">Deploy</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span> [<span class="string">push</span>]</span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">A</span> <span class="string">job</span> <span class="string">to</span> <span class="string">deploy</span> <span class="string">blog.</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/checkout@v1</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">submodules:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Caching dependencies to speed up workflows. (GitHub will remove any cache entries that have not been accessed in over 7 days.)</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Cache</span> <span class="string">node</span> <span class="string">modules</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/cache@v1</span></span><br><span class="line">      <span class="attr">id:</span> <span class="string">cache</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">node_modules</span></span><br><span class="line">        <span class="attr">key:</span> <span class="string">$&#123;&#123;</span> <span class="string">runner.os</span> <span class="string">&#125;&#125;-node-$&#123;&#123;</span> <span class="string">hashFiles(&#x27;**/package-lock.json&#x27;)</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">restore-keys:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          $&#123;&#123; runner.os &#125;&#125;-node-</span></span><br><span class="line"><span class="string"></span>    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">Dependencies</span></span><br><span class="line">      <span class="attr">if:</span> <span class="string">steps.cache.outputs.cache-hit</span> <span class="type">!=</span> <span class="string">&#x27;true&#x27;</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">npm</span> <span class="string">install</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Deploy hexo blog website.</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span></span><br><span class="line">      <span class="attr">id:</span> <span class="string">deploy</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">sma11black/hexo-action@v1.0.3</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">deploy_key:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.HEXO_DEPLOY_PRI</span> <span class="string">&#125;&#125;</span></span><br></pre></td></tr></table></figure>

</li>
</ol>
<h2 id="How-to-use"><a href="#How-to-use" class="headerlink" title="How to use"></a>How to use</h2><p>以下使用 <code>command line</code></p>
<h3 id="New"><a href="#New" class="headerlink" title="New"></a>New</h3><p><code>draft</code> 也可以改成 <code>post</code> 或是其他的</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new draft <span class="string">&quot;<span class="variable">$&#123;YOUR_POST_TITLE&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="Publish"><a href="#Publish" class="headerlink" title="Publish"></a>Publish</h3><p><code>publish</code> 其實就是將 <code>draft</code> 移動到 <code>post</code> 中</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo publish <span class="string">&quot;<span class="variable">$&#123;YOUR_DRAFT_TITLE&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="Deploy"><a href="#Deploy" class="headerlink" title="Deploy"></a>Deploy</h3><p>設定完 <code>Hexo</code> 的 <code>deploy</code>後，可以直接使用 <code>command line</code> 進行部署</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm run deploy</span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">hexo clean &amp;&amp; hexo deploy</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>howto</tag>
        <tag>setup</tag>
        <tag>blog</tag>
      </tags>
  </entry>
  <entry>
    <title>How to set up docker</title>
    <url>/posts/how-to-set-up-docker/</url>
    <content><![CDATA[<h2 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h2><h3 id="前置作業"><a href="#前置作業" class="headerlink" title="前置作業"></a>前置作業</h3><p>如果需要自動完成功能<strong>必須</strong>安裝<code>bash-completion</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum install -y yum-utils device-mapper-persistent-data lvm2 bash-completion</span><br></pre></td></tr></table></figure>

<h3 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h3><h4 id="安裝-Docker-最新版本"><a href="#安裝-Docker-最新版本" class="headerlink" title="安裝 Docker 最新版本"></a>安裝 Docker 最新版本</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo curl -fsSL https://get.docker.com/ | sh</span><br></pre></td></tr></table></figure>

<div class="note warning"><ul>
<li>此命令直接安裝最新版本的 docker-ce</li>
</ul>
</div>

<h4 id="設定使用權限"><a href="#設定使用權限" class="headerlink" title="設定使用權限"></a>設定使用權限</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo usermod -aG docker <span class="variable">$USER</span></span><br></pre></td></tr></table></figure>

<h4 id="開啟服務"><a href="#開啟服務" class="headerlink" title="開啟服務"></a>開啟服務</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> --now docker</span><br></pre></td></tr></table></figure>

<div class="note danger"><ul>
<li>使用<code>CentOS</code> <strong>必須</strong>執行此命令</li>
</ul>
</div>

<h4 id="Suggest-設定-Log-rotate"><a href="#Suggest-設定-Log-rotate" class="headerlink" title="(Suggest) 設定 Log rotate"></a>(Suggest) 設定 Log rotate</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo cat &lt;&lt; <span class="string">EOF &gt; /etc/docker/daemon.json</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  &quot;log-driver&quot;: &quot;json-file&quot;,</span></span><br><span class="line"><span class="string">  &quot;log-opts&quot;: &#123;</span></span><br><span class="line"><span class="string">    &quot;max-size&quot;: &quot;10m&quot;,</span></span><br><span class="line"><span class="string">    &quot;max-file&quot;: &quot;10&quot;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure>

<h4 id="Optional-自動完成功能"><a href="#Optional-自動完成功能" class="headerlink" title="(Optional) 自動完成功能"></a>(Optional) 自動完成功能</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo curl https://raw.githubusercontent.com/docker/docker-ce/master/components/cli/contrib/completion/bash/docker -o /etc/bash_completion.d/docker.sh</span><br></pre></td></tr></table></figure>

<h3 id="Troubleshooting"><a href="#Troubleshooting" class="headerlink" title="Troubleshooting"></a>Troubleshooting</h3><h4 id="Requires-containerd-io"><a href="#Requires-containerd-io" class="headerlink" title="Requires containerd.io"></a>Requires containerd.io</h4><p>在<code>CentOS 8</code> 上需要另外更新 containerd</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo dnf install https://download.docker.com/linux/centos/7/x86_64/stable/Packages/containerd.io-1.2.6-3.3.el7.x86_64.rpm</span><br></pre></td></tr></table></figure>

<h4 id="Remove-PodMan"><a href="#Remove-PodMan" class="headerlink" title="Remove PodMan"></a>Remove PodMan</h4><p>在<code>CentOS</code>上可能預設安裝了<code>PodMan</code>，必須將它移除</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo dnf remove podman -y</span><br></pre></td></tr></table></figure>

<h2 id="Docker-compose"><a href="#Docker-compose" class="headerlink" title="Docker-compose"></a>Docker-compose</h2><h3 id="安裝-1"><a href="#安裝-1" class="headerlink" title="安裝"></a>安裝</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="built_in">alias</span> docker-compose=<span class="string">&quot;&#x27;&quot;</span><span class="string">&#x27;docker run --rm \</span></span><br><span class="line"><span class="string">    -v /var/run/docker.sock:/var/run/docker.sock \</span></span><br><span class="line"><span class="string">    -v &quot;$PWD:$PWD&quot; \</span></span><br><span class="line"><span class="string">    -w=&quot;$PWD&quot; \</span></span><br><span class="line"><span class="string">    docker/compose:1.24.0&#x27;</span><span class="string">&quot;&#x27;&quot;</span> &gt;&gt; ~/.bashrc</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>docker</tag>
        <tag>docker-compose</tag>
      </tags>
  </entry>
  <entry>
    <title>How to set up external-dns</title>
    <url>/posts/how-to-set-up-external-dns/</url>
    <content><![CDATA[<h2 id="Installing-external-dns-on-Kubernetes"><a href="#Installing-external-dns-on-Kubernetes" class="headerlink" title="Installing external-dns on Kubernetes"></a>Installing external-dns on Kubernetes</h2><p>Install <code>external-dns</code> via <a href="https://github.com/bitnami/charts/tree/master/bitnami/external-dns/#installing-the-chart">helm chart</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">NS=dns</span><br><span class="line">REPO=bitnami/external-dns</span><br><span class="line">NAME=cf</span><br><span class="line"></span><br><span class="line">helm --namespace=<span class="variable">$&#123;NS&#125;</span> upgrade --install <span class="variable">$&#123;NAME&#125;</span> <span class="variable">$&#123;REPO&#125;</span> -f values.yaml</span><br></pre></td></tr></table></figure>

<h2 id="Configure-values"><a href="#Configure-values" class="headerlink" title="Configure values"></a>Configure values</h2><p>詳細可以參考<a href="https://github.com/bitnami/charts/tree/master/bitnami/external-dns/#parameters">官方文件</a></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">## DNS provider where the DNS records will be created. Available providers are:</span></span><br><span class="line"><span class="comment">## - alibabacloud, aws, azure, azure-private-dns, cloudflare, coredns, designate, digitalocean, google, infoblox, rfc2136, transip</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">provider:</span> <span class="string">cloudflare</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Cloudflare configuration to be set via arguments/env. variables</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">cloudflare:</span></span><br><span class="line">  <span class="comment">## `CF_API_TOKEN` to set in the environment</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">apiToken:</span> <span class="string">$&#123;YOUR_TOKEN&#125;</span></span><br><span class="line">  <span class="comment">## `CF_API_KEY` to set in the environment</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">apiKey:</span></span><br><span class="line">  <span class="comment">## Use an existing secret with keys &quot;cloudflare_api_token&quot; or &quot;cloudflare_api_key&quot; defined.</span></span><br><span class="line">  <span class="comment">## This ignores cloudflare.apiToken, and cloudflare.apiKey</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="comment"># secretName:</span></span><br><span class="line">  <span class="comment">## `CF_API_EMAIL` to set in the environment</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">email:</span></span><br><span class="line">  <span class="comment">## Enable the proxy feature of Cloudflare</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">proxied:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Modify how DNS records are sychronized between sources and providers (options: sync, upsert-only)</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">policy:</span> <span class="string">sync</span></span><br></pre></td></tr></table></figure>

<h2 id="How-to-use"><a href="#How-to-use" class="headerlink" title="How to use"></a>How to use</h2><p>在 <code>ingress</code> 中設定 <code>annotation</code></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">annotations:</span></span><br><span class="line">  <span class="attr">kubernetes.io/ingress.class:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="comment"># 設定你想要的 host</span></span><br><span class="line">  <span class="attr">external-dns.alpha.kubernetes.io/hostname:</span> <span class="string">$&#123;YOUR_HOST&#125;</span></span><br><span class="line">  <span class="comment"># 如果有設定 target 的話會自動使用 CNAME</span></span><br><span class="line">  <span class="attr">external-dns.alpha.kubernetes.io/target:</span> <span class="string">$&#123;YOUR_TARGET&#125;</span></span><br></pre></td></tr></table></figure>

<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2>]]></content>
      <tags>
        <tag>howto</tag>
        <tag>kubernetes</tag>
        <tag>setup</tag>
        <tag>external-dns</tag>
      </tags>
  </entry>
  <entry>
    <title>How to set up GKE via terraform</title>
    <url>/posts/how-to-set-up-gke-via-terraform/</url>
    <content><![CDATA[<h2 id="前置條件"><a href="#前置條件" class="headerlink" title="前置條件"></a>前置條件</h2><ul>
<li>terraform</li>
<li>GCP</li>
</ul>
<h2 id="撰寫-terraform"><a href="#撰寫-terraform" class="headerlink" title="撰寫 terraform"></a>撰寫 terraform</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># main.tf</span><br><span class="line"></span><br><span class="line">terraform &#123;</span><br><span class="line">  required_providers &#123;</span><br><span class="line">    google = &#123;</span><br><span class="line">      source = &quot;hashicorp/google&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">provider &quot;google&quot; &#123;</span><br><span class="line">  credentials = file(&quot;sean-side-tf-admin-sa.json&quot;)</span><br><span class="line">  project     = &quot;sean-side&quot;</span><br><span class="line">  region      = &quot;asia-east1&quot;</span><br><span class="line">  zone        = &quot;asia-east1-c&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># gke.tf</span><br><span class="line"></span><br><span class="line">resource &quot;google_service_account&quot; &quot;sean-side-gke-default-sa&quot; &#123;</span><br><span class="line">  account_id   = &quot;sean-side-gke-default-sa&quot;</span><br><span class="line">  display_name = &quot;GKE default service account&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">resource &quot;google_container_cluster&quot; &quot;sean-side-prod-cluster&quot; &#123;</span><br><span class="line">  name                     = &quot;sean-side-prod-cluster&quot;</span><br><span class="line">  location                 = &quot;asia-east1-c&quot;</span><br><span class="line">  remove_default_node_pool = true</span><br><span class="line">  initial_node_count       = 1</span><br><span class="line"></span><br><span class="line">  timeouts &#123;</span><br><span class="line">    create = &quot;30m&quot;</span><br><span class="line">    update = &quot;40m&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">resource &quot;google_container_node_pool&quot; &quot;sean-side-prod-nodes&quot; &#123;</span><br><span class="line">  name       = &quot;sean-side-prod-nodes&quot;</span><br><span class="line">  location   = &quot;asia-east1-c&quot;</span><br><span class="line">  cluster    = google_container_cluster.sean-side-prod-cluster.name</span><br><span class="line">  node_count = 2</span><br><span class="line"></span><br><span class="line">  autoscaling &#123;</span><br><span class="line">    max_node_count = 3</span><br><span class="line">    min_node_count = 1</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  node_config &#123;</span><br><span class="line">    preemptible  = true</span><br><span class="line">    machine_type = &quot;e2-medium&quot;</span><br><span class="line"></span><br><span class="line">    service_account = google_service_account.sean-side-gke-default-sa.email</span><br><span class="line">    oauth_scopes = [</span><br><span class="line">      &quot;https://www.googleapis.com/auth/cloud-platform&quot;</span><br><span class="line">    ]</span><br><span class="line">    labels = &#123;</span><br><span class="line">      env  = &quot;prod&quot;</span><br><span class="line">      proj = &quot;side&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>howto</tag>
        <tag>kubernetes</tag>
        <tag>setup</tag>
        <tag>terraform</tag>
        <tag>GCP</tag>
      </tags>
  </entry>
  <entry>
    <title>How to set up influxdb on kubernetes</title>
    <url>/posts/how-to-set-up-influxdb-on-kubernetes/</url>
    <content><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p><a href="https://www.influxdata.com/">Influxdb</a> is a time series database. you can collect data into <code>influxdb</code> to show on <code>Grafana</code> dashboard. So I will write down I how to set up influxdb (v1, v2) on <code>Kubernetes</code>. But why not use <code>Prometheus</code> because it is a <code>pull based</code> time series database. If you want to collect very real-time data like business metrics clearly not suitable. </p>
<h2 id="Prerequisite"><a href="#Prerequisite" class="headerlink" title="Prerequisite"></a>Prerequisite</h2><ul>
<li><a href="https://helm.sh/">Helm 3</a></li>
<li><a href="https://kubernetes.io/">Kubernetes</a></li>
</ul>
<h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>First, you need to add <code>influxdata</code> repo into helm. </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">helm repo add influxdata https://helm.influxdata.com/</span><br></pre></td></tr></table></figure>

<h3 id="v1"><a href="#v1" class="headerlink" title="v1"></a>v1</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">helm --namespace=$(NS) upgrade --install influxdb influxdata/influxdb -f values.yaml</span><br></pre></td></tr></table></figure>

<h3 id="v2"><a href="#v2" class="headerlink" title="v2"></a>v2</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">helm --namespace=$(NS) upgrade --install influxdb2 influxdata/influxdb2 -f values.yaml</span><br></pre></td></tr></table></figure>

<h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><h3 id="v1-1"><a href="#v1-1" class="headerlink" title="v1"></a>v1</h3><p>You can reference official documents <a href="https://github.com/influxdata/helm-charts/tree/master/charts/influxdb#configure-the-chart">influxdb</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">helm show values influxdata/influxdb &gt; values.yaml</span><br></pre></td></tr></table></figure>

<h3 id="v2-1"><a href="#v2-1" class="headerlink" title="v2"></a>v2</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">helm show values influxdata/influxdb2 &gt; values.yaml</span><br></pre></td></tr></table></figure>

<p>You can change <code>adminUser</code> field to you want. like</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">adminUser:</span></span><br><span class="line">  <span class="attr">organization:</span> <span class="string">&quot;my-org&quot;</span></span><br><span class="line">  <span class="attr">bucket:</span> <span class="string">&quot;my-bucket&quot;</span></span><br><span class="line">  <span class="attr">user:</span> <span class="string">&quot;admin&quot;</span></span><br><span class="line">  <span class="attr">retention_policy:</span> <span class="string">&quot;0s&quot;</span></span><br><span class="line">  <span class="comment">## Leave empty to generate a random password and token.</span></span><br><span class="line">  <span class="comment">## Or fill any of these values to use fixed values.</span></span><br><span class="line">  <span class="attr">password:</span> <span class="string">&quot;&lt;&lt;password&gt;&gt;&quot;</span></span><br><span class="line">  <span class="attr">token:</span> <span class="string">&quot;&lt;&lt;token&gt;&gt;&quot;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>howto</tag>
        <tag>kubernetes</tag>
        <tag>setup</tag>
        <tag>influxdb</tag>
      </tags>
  </entry>
  <entry>
    <title>How to set up IP whitelist based on nginx ingress</title>
    <url>/posts/how-to-set-up-ip-whitelist-based-on-nginx-ingress/</url>
    <content><![CDATA[<div class="note primary"><ul>
<li>本文有使用到 <code>Kubernetes</code>, <code>nginx ingress</code> 和 <code>Cloudflare</code></li>
</ul>
</div>

<h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>使用 <code>helm 3</code> 安裝 <code>nginx ingress</code>, 這裡就直接演示 <code>Makefile</code> 了。</p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Makefile</span></span><br><span class="line">NS=ingress-nginx</span><br><span class="line">APP_NAME=ingress-nginx</span><br><span class="line"></span><br><span class="line"><span class="meta"><span class="meta-keyword">.PHONY</span>: install</span></span><br><span class="line"><span class="section">install:</span></span><br><span class="line">	@helm upgrade --install --namespace=<span class="variable">$(NS)</span> <span class="variable">$(APP_NAME)</span> ingress-nginx/ingress-nginx -f values.yaml</span><br></pre></td></tr></table></figure>

<h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><p>兩個重要的設定</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">controller:</span></span><br><span class="line">  <span class="attr">config:</span></span><br><span class="line">    <span class="comment"># 設定 Cloudflare 的 IPs</span></span><br><span class="line">    <span class="attr">proxy-real-ip-cidr:</span> <span class="string">&quot;173.245.48.0/20,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,141.101.64.0/18,108.162.192.0/18,190.93.240.0/20,188.114.96.0/20,197.234.240.0/22,198.41.128.0/17,162.158.0.0/15,104.16.0.0/12,172.64.0.0/13,131.0.72.0/22,2400:cb00::/32,2606:4700::/32,2803:f800::/32,2405:b500::/32,2405:8100::/32,2a06:98c0::/29,2c0f:f248::/32,10.0.0.0/8&quot;</span></span><br><span class="line">    <span class="attr">enable-real-ip:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">    <span class="comment"># forward headers</span></span><br><span class="line">    <span class="attr">use-forwarded-headers:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">    <span class="comment"># 告訴 nginx real ip 是 CF-Connecting-IP</span></span><br><span class="line">    <span class="attr">server-snippet:</span> <span class="string">|</span></span><br><span class="line"><span class="string">      real_ip_header CF-Connecting-IP;</span></span><br><span class="line"><span class="string"></span>  <span class="attr">service:</span></span><br><span class="line">    <span class="comment"># 很重要</span></span><br><span class="line">    <span class="attr">externalTrafficPolicy:</span> <span class="string">&quot;Local&quot;</span></span><br></pre></td></tr></table></figure>

<h2 id="How-to-use"><a href="#How-to-use" class="headerlink" title="How to use"></a>How to use</h2><p>在 <code>Cloudflare</code> 中就可以開啟 proxy mode，透過 <code>CF-Connecting-IP</code> 拿到 client 的真實 IP 進行過濾。<br>設定 <code>ingress</code> 參考 <a href="https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations/#whitelist-source-range">whitelist-source-range</a></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">ingress:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">nginx.ingress.kubernetes.io/whitelist-source-range:</span> <span class="string">$&#123;YOUR_REAL_IP&#125;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>kubernetes</tag>
        <tag>nginx ingress</tag>
        <tag>cloudflare</tag>
        <tag>IP whitelist</tag>
      </tags>
  </entry>
  <entry>
    <title>how to set up private repo in golang</title>
    <url>/posts/how-to-set-up-private-repo-in-golang/</url>
    <content><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>Sometimes you need to import private repository in your golang project.<br>Like you need to import organization common go module but the repository is private.</p>
<h2 id="Setup"><a href="#Setup" class="headerlink" title="Setup"></a>Setup</h2><ol>
<li>Set <code>GOPRIVATE</code> env using <code>go</code> command.</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">go env -w GOPRIVATE=&#x27;github.com/$&#123;YOUR_GITHUB_ORG&#125;/*&#x27;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>Set <code>gitconfig</code> when <code>go get</code> via <code>ssh</code> or <code>https</code></li>
</ol>
<ul>
<li>ssh</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config --global url.&quot;git@github.com:$&#123;YOUR_GITHUB_ORG&#125;/&quot;.insteadOf &quot;https://github.com/$&#123;YOUR_GITHUB_ORG&#125;/&quot;</span><br></pre></td></tr></table></figure>

<ul>
<li>https</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config --global url.&quot;https://$&#123;GITHUB_TOKEN&#125;@github.com/$&#123;YOUR_GITHUB_ORG&#125;/&quot;.insteadOf &quot;https://github.com/$&#123;YOUR_GITHUB_ORG&#125;/&quot;</span><br></pre></td></tr></table></figure>

<p>Now, you can run <code>go get -u $&#123;YOUR_PRIVATE_REPO&#125;</code></p>
<h2 id="In-Dockerfile"><a href="#In-Dockerfile" class="headerlink" title="In Dockerfile"></a>In Dockerfile</h2><p>You maybe come across same problem when build docker image.<br>So you can write Dockerfile like this</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FROM</span> golang:alpine AS builder</span><br><span class="line"></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> /src</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># because alpine default exclude git command so you must install git.</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> apk add --no-cache git</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ARG</span> GITHUB_TOKEN</span><br><span class="line"><span class="keyword">ARG</span> YOUR_GITHUB_ORG</span><br><span class="line"></span><br><span class="line"><span class="comment"># setup GOPRIVATE env via go</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> go env -w GOPRIVATE=<span class="string">&quot;github.com/<span class="variable">$&#123;YOUR_GITHUB_ORG&#125;</span>/*&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"># setup git config</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> git config --global url.<span class="string">&quot;https://<span class="variable">$&#123;GITHUB_TOKEN&#125;</span>@github.com/<span class="variable">$&#123;YOUR_GITHUB_ORG&#125;</span>/&quot;</span>.insteadOf <span class="string">&quot;https://github.com/<span class="variable">$&#123;YOUR_GITHUB_ORG&#125;</span>/&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> go.mod go.sum ./</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> go mod download</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> cmd ./cmd</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> internal ./internal</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> api ./api</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ARG</span> APP_NAME</span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> go build -o app ./cmd/<span class="variable">$&#123;APP_NAME&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">FROM</span> alpine:<span class="number">3</span> AS final</span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> apk add --no-cache tzdata</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> /app</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> --from=builder /src/app ./</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="bash"> ./app</span></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>howto</tag>
        <tag>golang</tag>
        <tag>setup</tag>
      </tags>
  </entry>
  <entry>
    <title>How to set up prometheus on kubernetes</title>
    <url>/posts/how-to-set-up-prometheus-on-kubernetes/</url>
    <content><![CDATA[<h2 id="前置準備"><a href="#前置準備" class="headerlink" title="前置準備"></a>前置準備</h2><ul>
<li>kubernetes</li>
<li>Helm 3</li>
</ul>
<h2 id="加入-prometheus-stack-helm-repo"><a href="#加入-prometheus-stack-helm-repo" class="headerlink" title="加入 prometheus stack helm repo"></a>加入 prometheus stack helm repo</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">helm repo add prometheus-community https://prometheus-community.github.io/helm-charts</span><br><span class="line">helm repo update</span><br></pre></td></tr></table></figure>

<h2 id="建置-prometheus-stack-和-grafana"><a href="#建置-prometheus-stack-和-grafana" class="headerlink" title="建置 prometheus stack 和 grafana"></a>建置 prometheus stack 和 grafana</h2><h3 id="抓取-default-values"><a href="#抓取-default-values" class="headerlink" title="抓取 default values"></a>抓取 default values</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">helm show values prometheus-community/kube-prometheus-stack &gt; values.yaml</span><br></pre></td></tr></table></figure>

<h3 id="更改-values"><a href="#更改-values" class="headerlink" title="更改 values"></a>更改 values</h3><h4 id="Grafana"><a href="#Grafana" class="headerlink" title="Grafana"></a>Grafana</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># values.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">grafana:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">## Grafana&#x27;s primary configuration</span></span><br><span class="line">  <span class="comment">## <span class="doctag">NOTE:</span> values in map will be converted to ini format</span></span><br><span class="line">  <span class="comment">## ref: http://docs.grafana.org/installation/configuration/</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">grafana.ini:</span></span><br><span class="line">    <span class="attr">paths:</span></span><br><span class="line">      <span class="attr">data:</span> <span class="string">/var/lib/grafana/data</span></span><br><span class="line">      <span class="attr">logs:</span> <span class="string">/var/log/grafana</span></span><br><span class="line">      <span class="attr">plugins:</span> <span class="string">/var/lib/grafana/plugins</span></span><br><span class="line">      <span class="attr">provisioning:</span> <span class="string">/etc/grafana/provisioning</span></span><br><span class="line">    <span class="attr">analytics:</span></span><br><span class="line">      <span class="attr">check_for_updates:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">log:</span></span><br><span class="line">      <span class="attr">mode:</span> <span class="string">console</span></span><br><span class="line">    <span class="attr">grafana_net:</span></span><br><span class="line">      <span class="attr">url:</span> <span class="string">https://grafana.net</span></span><br><span class="line">    <span class="attr">server:</span></span><br><span class="line">      <span class="attr">domain:</span> <span class="string">gfn.seancheng.space</span></span><br><span class="line">      <span class="attr">root_url:</span> <span class="string">&quot;https://gfn.seancheng.space&quot;</span></span><br><span class="line">      </span><br><span class="line">  <span class="comment">## Enable persistence using Persistent Volume Claims</span></span><br><span class="line">  <span class="comment">## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">persistence:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">pvc</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">storageClassName:</span> <span class="string">standard</span></span><br><span class="line">    <span class="attr">accessModes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ReadWriteOnce</span></span><br><span class="line">    <span class="attr">size:</span> <span class="string">10Gi</span></span><br><span class="line">    <span class="comment"># annotations: &#123;&#125;</span></span><br><span class="line">    <span class="attr">finalizers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">kubernetes.io/pvc-protection</span></span><br><span class="line">    <span class="comment"># subPath: &quot;&quot;</span></span><br><span class="line">    <span class="comment"># existingClaim:</span></span><br><span class="line">    </span><br><span class="line">  <span class="comment"># Enable ingress</span></span><br><span class="line">  <span class="attr">ingress:</span></span><br><span class="line">    <span class="comment">## If true, Grafana Ingress will be created</span></span><br><span class="line">    <span class="comment">##</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">## Annotations for Grafana Ingress</span></span><br><span class="line">    <span class="comment">##</span></span><br><span class="line">    <span class="attr">annotations:</span></span><br><span class="line">      <span class="attr">kubernetes.io/ingress.class:</span> <span class="string">nginx</span></span><br><span class="line">      <span class="comment"># kubernetes.io/ingress.class: nginx</span></span><br><span class="line">      <span class="comment"># kubernetes.io/tls-acme: &quot;true&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">## Labels to be added to the Ingress</span></span><br><span class="line">    <span class="comment">##</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">grafana</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">## Hostnames.</span></span><br><span class="line">    <span class="comment">## Must be provided if Ingress is enable.</span></span><br><span class="line">    <span class="comment">##</span></span><br><span class="line">    <span class="comment"># hosts:</span></span><br><span class="line">    <span class="comment">#   - grafana.domain.com</span></span><br><span class="line">    <span class="attr">hosts:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">gfn.seancheng.space</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">## Path for grafana ingress</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">## TLS configuration for grafana Ingress</span></span><br><span class="line">    <span class="comment">## Secret must be manually created in the namespace</span></span><br><span class="line">    <span class="comment">##</span></span><br><span class="line">    <span class="attr">tls:</span> []</span><br><span class="line">    <span class="comment"># - secretName: grafana-general-tls</span></span><br><span class="line">    <span class="comment">#   hosts:</span></span><br><span class="line">    <span class="comment">#   - grafana.example.com</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="Prometheus"><a href="#Prometheus" class="headerlink" title="Prometheus"></a>Prometheus</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># values.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">prometheus:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">## Prometheus StorageSpec for persistent data</span></span><br><span class="line">  <span class="comment">## ref: https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/user-guides/storage.md</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">storageSpec:</span></span><br><span class="line">    <span class="comment">## Using PersistentVolumeClaim</span></span><br><span class="line">    <span class="comment">##</span></span><br><span class="line">    <span class="attr">volumeClaimTemplate:</span></span><br><span class="line">      <span class="attr">spec:</span></span><br><span class="line">        <span class="attr">storageClassName:</span> <span class="string">standard</span></span><br><span class="line">        <span class="attr">accessModes:</span> [<span class="string">&quot;ReadWriteOnce&quot;</span>]</span><br><span class="line">        <span class="attr">resources:</span></span><br><span class="line">          <span class="attr">requests:</span></span><br><span class="line">            <span class="attr">storage:</span> <span class="string">50Gi</span></span><br></pre></td></tr></table></figure>


<h3 id="執行-helm-install"><a href="#執行-helm-install" class="headerlink" title="執行 helm install"></a>執行 helm install</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ns=monitoring</span><br><span class="line">name=ops</span><br><span class="line">repo=prometheus-community/kube-prometheus-stack</span><br><span class="line">value=values.yaml</span><br><span class="line"></span><br><span class="line">helm --namespace=$(ns) upgrade --install $(name) $(repo) -f $(value)</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>howto</tag>
        <tag>kubernetes</tag>
        <tag>setup</tag>
        <tag>prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>How to set up Squid proxy server</title>
    <url>/posts/how-to-set-up-squid-proxy-server/</url>
    <content><![CDATA[<p>第三方的服務有時候需要綁定固定 IP，導致服務本體不能任意移動，此時我們可以利用 <code>proxy server</code> 來解決這問題<br>本文使用 <code>Squid</code> 作為 proxy server 演示</p>
<h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><h3 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h3><p>詳細的資訊可以<a href="https://hub.docker.com/r/sameersbn/squid">參考</a></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">squid:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">sameersbn/squid:3.5.27-2</span></span><br><span class="line">    <span class="attr">network_mode:</span> <span class="string">bridge</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;3128:3128&quot;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/srv/docker/squid/cache:/var/spool/squid</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./squid.conf:/etc/squid/squid.conf</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br></pre></td></tr></table></figure>

<p>用 <code>command line</code> 做測試</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http_proxy=http://192.168.28.241:3128 https_proxy=http://192.168.28.241:3128 curl https://ifconfig.co</span><br></pre></td></tr></table></figure>

<h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><p>squid.conf，啊，配置太多了，挑幾個重要的寫吧</p>
<h3 id="ACL"><a href="#ACL" class="headerlink" title="ACL"></a>ACL</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># localnet 是可以替換掉名字</span><br><span class="line">acl localnet src 192.168.0.0/16</span><br><span class="line"></span><br><span class="line">acl SSL_ports port 443</span><br><span class="line">acl Safe_ports port 80		# http</span><br><span class="line">acl Safe_ports port 21		# ftp</span><br><span class="line">acl Safe_ports port 443		# https</span><br><span class="line">acl Safe_ports port 70		# gopher</span><br><span class="line">acl Safe_ports port 210		# wais</span><br><span class="line">acl Safe_ports port 1025-65535	# unregistered ports</span><br><span class="line">acl Safe_ports port 280		# http-mgmt</span><br><span class="line">acl Safe_ports port 488		# gss-http</span><br><span class="line">acl Safe_ports port 591		# filemaker</span><br><span class="line">acl Safe_ports port 777		# multiling http</span><br><span class="line">acl CONNECT method CONNECT</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 建議從最小權限開始定義，因為以下設定是有順序性的</span><br><span class="line"></span><br><span class="line"># deny 所以來自不是定義好 safe ports 的 request</span><br><span class="line">http_access deny !Safe_ports</span><br><span class="line"></span><br><span class="line"># deny 所有 ssl 不是走 443 的 request，可以在上一個設定中加入自定義的 ssl ports</span><br><span class="line">http_access deny CONNECT !SSL_ports</span><br><span class="line"></span><br><span class="line"># Only allow cachemgr access from localhost</span><br><span class="line">http_access allow localhost manager</span><br><span class="line">http_access deny manager</span><br><span class="line"></span><br><span class="line"># We strongly recommend the following be uncommented to protect innocent</span><br><span class="line"># web applications running on the proxy server who think the only</span><br><span class="line"># one who can access services on &quot;localhost&quot; is a local user</span><br><span class="line">#http_access deny to_localhost</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># INSERT YOUR OWN RULE(S) HERE TO ALLOW ACCESS FROM YOUR CLIENTS</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line"># Example rule allowing access from your local networks.</span><br><span class="line"># Adapt localnet in the ACL section to list your (internal) IP networks</span><br><span class="line"># from where browsing should be allowed</span><br><span class="line"># 可以加入自定義的 rules，像是 localnet、localhost、allow network 之類的</span><br><span class="line">http_access allow localnet</span><br><span class="line">http_access allow localhost</span><br><span class="line"></span><br><span class="line"># And finally deny all other access to this proxy</span><br><span class="line">http_access deny all</span><br></pre></td></tr></table></figure>

<h3 id="Listen-ports"><a href="#Listen-ports" class="headerlink" title="Listen ports"></a>Listen ports</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http_port 3128</span><br></pre></td></tr></table></figure>

<h3 id="SSL"><a href="#SSL" class="headerlink" title="SSL"></a>SSL</h3><p>有空再研究</p>
<h2 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h2><p>以 <code>golang</code> 為例，透過 <code>proxy server</code> 去訪問 <code>https://ifconfig.co</code> 會返回 IP</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">&quot;fmt&quot;</span></span><br><span class="line">	<span class="string">&quot;io/ioutil&quot;</span></span><br><span class="line">	<span class="string">&quot;net/http&quot;</span></span><br><span class="line">	<span class="string">&quot;net/url&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">	proxy = <span class="string">&quot;http://192.168.28.241:3128&quot;</span></span><br><span class="line">	ifconfig = <span class="string">&quot;https://ifconfig.co&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	proxyUrl, err := url.Parse(proxy)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="built_in">panic</span>(err)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	c := &amp;http.Client&#123;</span><br><span class="line">		Transport: &amp;http.Transport&#123;</span><br><span class="line">			Proxy: http.ProxyURL(proxyUrl),</span><br><span class="line">		&#125;,</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	resp, err := c.Get(ifconfig)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="built_in">panic</span>(err)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">defer</span> resp.Body.Close()</span><br><span class="line"></span><br><span class="line">	content, err := ioutil.ReadAll(resp.Body)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="built_in">panic</span>(err)</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	fmt.Println(content)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>howto</tag>
        <tag>setup</tag>
        <tag>squid</tag>
        <tag>proxy</tag>
      </tags>
  </entry>
  <entry>
    <title>How to set up tinc vpn</title>
    <url>/posts/how-to-set-up-tinc-vpn/</url>
    <content><![CDATA[<div class="note primary"><ul>
<li>本文適用於 <code>Ubuntu</code> 和 <code>MacOS</code></li>
<li>範例使用版本為 <code>1.1pre17</code>，參考 <a href="https://www.tinc-vpn.org/download">Tinc</a></li>
</ul>
</div>

<h2 id="安裝必要元件"><a href="#安裝必要元件" class="headerlink" title="安裝必要元件"></a>安裝必要元件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install -y build-essential libncurses5-dev libreadline6-dev libzlcore-dev zlib1g-dev liblzo2-dev libssl-dev</span><br></pre></td></tr></table></figure>

<h2 id="安裝-Tinc"><a href="#安裝-Tinc" class="headerlink" title="安裝 Tinc"></a>安裝 <code>Tinc</code></h2><h3 id="手動安裝"><a href="#手動安裝" class="headerlink" title="手動安裝"></a>手動安裝</h3><p>下載原始碼</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -qO- https://www.tinc-vpn.org/packages/<span class="variable">$&#123;tincVersion&#125;</span>.tar.gz | tar zxv</span><br></pre></td></tr></table></figure>

<p>編譯</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> tinc-1.1pre17 &amp;&amp; ./configure &amp;&amp; make</span><br></pre></td></tr></table></figure>

<p>安裝</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo make install</span><br></pre></td></tr></table></figure>

<h3 id="透過-Brew-安裝"><a href="#透過-Brew-安裝" class="headerlink" title="透過 Brew 安裝"></a>透過 Brew 安裝</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install tinc</span><br><span class="line">brew cask install tuntap</span><br></pre></td></tr></table></figure>

<div class="note danger"><p>Brew上沒有 <code>tinc-pre</code> 版本</p>
</div>

<h3 id="檢查"><a href="#檢查" class="headerlink" title="檢查"></a>檢查</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo tinc version</span><br></pre></td></tr></table></figure>

<h2 id="設定-Tinc"><a href="#設定-Tinc" class="headerlink" title="設定 Tinc"></a>設定 <code>Tinc</code></h2><h3 id="事前準備"><a href="#事前準備" class="headerlink" title="事前準備"></a>事前準備</h3><p>創建預設目錄</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo mkdir -p /usr/<span class="built_in">local</span>/var/run/</span><br><span class="line">sudo mkdir -p /usr/<span class="built_in">local</span>/etc/tinc/</span><br></pre></td></tr></table></figure>

<h3 id="初始化-Tinc-設定"><a href="#初始化-Tinc-設定" class="headerlink" title="初始化 Tinc 設定"></a>初始化 <code>Tinc</code> 設定</h3><p><code>Tinc</code> 使用 <code>RSA</code> 的方式進行認證，所以要先建立公私鑰。<br><code>Tinc</code> 可以建立多個連線，所以要先給定一個能夠辨識的連線名稱，並且給此台電腦一個名字和虛擬 IP 位置。</p>
<div class="tabs" id="init-tinc"><ul class="nav-tabs"><li class="tab active"><a href="#init-tinc-1">tinc-pre</a></li><li class="tab"><a href="#init-tinc-2">tinc</a></li></ul><div class="tab-content"><div class="tab-pane active" id="init-tinc-1"><table>
<thead>
<tr>
<th>var</th>
<th>description</th>
</tr>
</thead>
<tbody><tr>
<td>netName</td>
<td>能夠辨識連線的名稱</td>
</tr>
<tr>
<td>hostname</td>
<td>此台電腦的名稱</td>
</tr>
<tr>
<td>vpnSubnet</td>
<td>此台電腦的虛擬 IP</td>
</tr>
<tr>
<td>address</td>
<td>此台電腦的公開 IP</td>
</tr>
</tbody></table>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netName=changeme</span><br><span class="line">hostname=changeme</span><br><span class="line">vpnSubnet=changeme</span><br><span class="line">address=changeme</span><br><span class="line"></span><br><span class="line">sudo tinc -n <span class="variable">$&#123;netName&#125;</span> init <span class="variable">$&#123;hostname&#125;</span></span><br><span class="line">sudo tinc -n <span class="variable">$&#123;netName&#125;</span> add Subnet <span class="variable">$&#123;vpnSubnet&#125;</span>/32</span><br><span class="line">sudo tinc -n <span class="variable">$&#123;netName&#125;</span> add Address <span class="variable">$&#123;address&#125;</span></span><br><span class="line">sudo chmod +x tinc-*</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="init-tinc-2"><p>todo</p></div></div></div>

<p><code>hosts</code> 資料夾中會放有各個伺服器的公開資訊，如：<code>Subnet</code>、<code>Public Key</code>、<code>Address</code>、<code>Port</code> 等。<br>當建立好基本設定後，可以看到目錄結構如下。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ tree /usr/<span class="built_in">local</span>/etc/tinc/<span class="variable">$&#123;netName&#125;</span></span><br><span class="line">/usr/<span class="built_in">local</span>/etc/tinc/<span class="variable">$&#123;netName&#125;</span></span><br><span class="line">├── ed25519_key.priv</span><br><span class="line">├── hosts</span><br><span class="line">│   └── <span class="variable">$&#123;hostname&#125;</span> <span class="comment"># 此台電腦公開的資訊</span></span><br><span class="line">├── rsa_key.priv <span class="comment"># 此台電腦的私鑰</span></span><br><span class="line">├── tinc.conf <span class="comment"># tinc 所以用的配置</span></span><br><span class="line">├── tinc-down <span class="comment"># 停止 tinc 時會執行的腳本</span></span><br><span class="line">└── tinc-up <span class="comment"># 啟動 tinc 時會執行的腳本</span></span><br></pre></td></tr></table></figure>

<div class="tabs" id="tinc-file"><ul class="nav-tabs"><li class="tab active"><a href="#tinc-file-1">tinc.conf</a></li><li class="tab"><a href="#tinc-file-2">tinc-up</a></li><li class="tab"><a href="#tinc-file-3">tinc-down</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tinc-file-1"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Name = <span class="variable">$&#123;hostname&#125;</span></span><br><span class="line">AddressFamily = ipv4</span><br><span class="line"></span><br><span class="line"><span class="comment"># interface 可以不指定，如果 不指定會自動建立一個與 netName 相同名字的 interface</span></span><br><span class="line"><span class="comment"># Interface = tun0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># pre版才可以設定自動連線，如果開啟自動連線的話，ConnectTo 則會失效</span></span><br><span class="line"><span class="comment"># 如果不想自動連線，一樣可以使用 ConnectTo 指定 server</span></span><br><span class="line">AutoConnect = yes</span><br><span class="line"><span class="comment"># ConnectTo = another-server</span></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="tinc-file-2"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment"># 記得改掉 vpnSubnet</span></span><br><span class="line">ifconfig <span class="variable">$INTERFACE</span> <span class="variable">$&#123;vpnSubnet&#125;</span> netmask 255.255.255.0</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="tinc-file-3"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment">#just bring down the interface. leave it as it is</span></span><br><span class="line">ifconfig <span class="variable">$INTERFACE</span> down</span><br></pre></td></tr></table></figure></div></div></div>

<h3 id="交換-hosts"><a href="#交換-hosts" class="headerlink" title="交換 hosts"></a>交換 <code>hosts</code></h3><p><code>server</code> 與 <code>client</code> 端必須擁有彼此的資訊，並且放在 <code>hosts</code> 資料夾底下。<br>善用 <code>rsync</code> 和 <code>scp</code></p>
<div class="note danger"><p><strong>此步驟相當重要</strong></p>
</div>

<h3 id="設定自動啟動"><a href="#設定自動啟動" class="headerlink" title="設定自動啟動"></a>設定自動啟動</h3><h4 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h4><p>建立 <code>tinc.service</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo cat &lt;&lt;<span class="string">EOF &gt; /lib/systemd/system/tinc.service</span></span><br><span class="line"><span class="string">[Unit]</span></span><br><span class="line"><span class="string">Description=Tinc VPN</span></span><br><span class="line"><span class="string">After=network.target</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Service]</span></span><br><span class="line"><span class="string">Type=oneshot</span></span><br><span class="line"><span class="string">RemainAfterExit=yes</span></span><br><span class="line"><span class="string">ExecStart=/bin/true</span></span><br><span class="line"><span class="string">ExecReload=/bin/true</span></span><br><span class="line"><span class="string">WorkingDirectory=/usr/local/etc/tinc</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Install]</span></span><br><span class="line"><span class="string">WantedBy=multi-user.target</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure>

<p>建立 <code>tinc@.service</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo cat &lt;&lt;<span class="string">EOF &gt; /lib/systemd/system/tinc@.service</span></span><br><span class="line"><span class="string">[Unit]</span></span><br><span class="line"><span class="string">Description=Tinc net %i</span></span><br><span class="line"><span class="string">PartOf=tinc.service</span></span><br><span class="line"><span class="string">ReloadPropagatedFrom=tinc.service</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Service]</span></span><br><span class="line"><span class="string">Type=simple</span></span><br><span class="line"><span class="string">WorkingDirectory=/usr/local/etc/tinc/%i</span></span><br><span class="line"><span class="string">ExecStart=/usr/local/sbin/tincd -n %i -D</span></span><br><span class="line"><span class="string">ExecReload=/usr/local/sbin/tincd -n %i -kHUP</span></span><br><span class="line"><span class="string">KillMode=mixed</span></span><br><span class="line"><span class="string">TimeoutStopSec=5</span></span><br><span class="line"><span class="string">Restart=always</span></span><br><span class="line"><span class="string">RestartSec=60</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Install]</span></span><br><span class="line"><span class="string">WantedBy=multi-user.target</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure>

<p>啟動服務</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> --now tinc@<span class="variable">$&#123;netName&#125;</span>.service</span><br></pre></td></tr></table></figure>

<h4 id="Mac"><a href="#Mac" class="headerlink" title="Mac"></a>Mac</h4><h3 id="複製貼上懶人包"><a href="#複製貼上懶人包" class="headerlink" title="複製貼上懶人包"></a>複製貼上懶人包</h3><div class="tabs" id="tab"><ul class="nav-tabs"><li class="tab active"><a href="#tab-1">tinc-pre</a></li><li class="tab"><a href="#tab-2">tinc</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tab-1"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tincVersion=tinc-1.1pre17</span><br><span class="line">netName=changeme</span><br><span class="line">hostname=changeme</span><br><span class="line">vpnSubnet=changeme</span><br><span class="line"></span><br><span class="line">sudo apt-get install -y build-essential libncurses5-dev libreadline6-dev libzlcore-dev zlib1g-dev liblzo2-dev libssl-dev</span><br><span class="line"></span><br><span class="line">wget -qO- https://www.tinc-vpn.org/packages/<span class="variable">$&#123;tincVersion&#125;</span>.tar.gz | tar zxv</span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$&#123;tincVersion&#125;</span> &amp;&amp; ./configure &amp;&amp; make &amp;&amp; sudo make install</span><br><span class="line"></span><br><span class="line">sudo mkdir -p /usr/<span class="built_in">local</span>/var/run/</span><br><span class="line">sudo mkdir -p /usr/<span class="built_in">local</span>/etc/tinc/</span><br><span class="line"></span><br><span class="line">sudo tinc -n <span class="variable">$&#123;netName&#125;</span> init <span class="variable">$&#123;hostname&#125;</span></span><br><span class="line">sudo tinc -n <span class="variable">$&#123;netName&#125;</span> add Subnet <span class="variable">$&#123;vpnSubnet&#125;</span>/32</span><br><span class="line">sudo chmod +x tinc-*</span><br><span class="line">sudo sh -c <span class="string">&quot;echo ifconfig <span class="variable">$INTERFACE</span> <span class="variable">$&#123;vpnSubnet&#125;</span> netmask 255.255.255.0 &gt; /usr/local/etc/tinc/<span class="variable">$&#123;netName&#125;</span>/tinc-up&quot;</span></span><br><span class="line"></span><br><span class="line">sudo sh -c <span class="string">&quot;cat &lt;&lt;EOF &gt; /lib/systemd/system/tinc.service</span></span><br><span class="line"><span class="string">[Unit]</span></span><br><span class="line"><span class="string">Description=Tinc VPN</span></span><br><span class="line"><span class="string">After=network.target</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Service]</span></span><br><span class="line"><span class="string">Type=oneshot</span></span><br><span class="line"><span class="string">RemainAfterExit=yes</span></span><br><span class="line"><span class="string">ExecStart=/bin/true</span></span><br><span class="line"><span class="string">ExecReload=/bin/true</span></span><br><span class="line"><span class="string">WorkingDirectory=/usr/local/etc/tinc</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Install]</span></span><br><span class="line"><span class="string">WantedBy=multi-user.target</span></span><br><span class="line"><span class="string">EOF&quot;</span></span><br><span class="line"></span><br><span class="line">sudo sh -c <span class="string">&quot;cat &lt;&lt;EOF &gt; /lib/systemd/system/tinc@.service</span></span><br><span class="line"><span class="string">[Unit]</span></span><br><span class="line"><span class="string">Description=Tinc net %i</span></span><br><span class="line"><span class="string">PartOf=tinc.service</span></span><br><span class="line"><span class="string">ReloadPropagatedFrom=tinc.service</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Service]</span></span><br><span class="line"><span class="string">Type=simple</span></span><br><span class="line"><span class="string">WorkingDirectory=/usr/local/etc/tinc/%i</span></span><br><span class="line"><span class="string">ExecStart=/usr/local/sbin/tincd -n %i -D</span></span><br><span class="line"><span class="string">ExecReload=/usr/local/sbin/tincd -n %i -kHUP</span></span><br><span class="line"><span class="string">KillMode=mixed</span></span><br><span class="line"><span class="string">TimeoutStopSec=5</span></span><br><span class="line"><span class="string">Restart=always</span></span><br><span class="line"><span class="string">RestartSec=60</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Install]</span></span><br><span class="line"><span class="string">WantedBy=multi-user.target</span></span><br><span class="line"><span class="string">EOF&quot;</span></span><br><span class="line"></span><br><span class="line">sudo systemctl <span class="built_in">enable</span> --now tinc@<span class="variable">$&#123;netName&#125;</span>.service</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="tab-2"><p>todo</p></div></div></div>

<h2 id="使用-Tinc"><a href="#使用-Tinc" class="headerlink" title="使用 Tinc"></a>使用 <code>Tinc</code></h2><p><code>Tinc</code> 和 <code>Tinc-pre</code> 的指令略微不同，斟酌使用。</p>
<h3 id="啟動"><a href="#啟動" class="headerlink" title="啟動"></a>啟動</h3><div class="tabs" id="tinc-start"><ul class="nav-tabs"><li class="tab active"><a href="#tinc-start-1">tinc-pre</a></li><li class="tab"><a href="#tinc-start-2">tinc</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tinc-start-1"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo tinc -n <span class="variable">$&#123;netName&#125;</span> start</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="tinc-start-2"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo tincd -n <span class="variable">$&#123;netName&#125;</span> -D</span><br></pre></td></tr></table></figure></div></div></div>

<h3 id="停止"><a href="#停止" class="headerlink" title="停止"></a>停止</h3><div class="tabs" id="tinc-stop"><ul class="nav-tabs"><li class="tab active"><a href="#tinc-stop-1">tinc-pre</a></li><li class="tab"><a href="#tinc-stop-2">tinc</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tinc-stop-1"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo tinc -n <span class="variable">$&#123;netName&#125;</span> stop</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="tinc-stop-2"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo tincd -n <span class="variable">$&#123;netName&#125;</span> -k</span><br></pre></td></tr></table></figure></div></div></div>

<h3 id="測試"><a href="#測試" class="headerlink" title="測試"></a>測試</h3><p>啟動成功後，會看到相對應的interface</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ifconfig <span class="variable">$&#123;netName&#125;</span></span><br><span class="line"><span class="variable">$&#123;netName&#125;</span>: flags=4305&lt;UP,POINTOPOINT,RUNNING,NOARP,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 10.36.205.13  netmask 255.255.255.0  destination 10.36.205.13</span><br><span class="line">        inet6 fe80::5cf0:a5b4:3e5c:2e67  prefixlen 64  scopeid 0x20&lt;link&gt;</span><br><span class="line">        unspec 00-00-00-00-00-00-00-00-00-00-00-00-00-00-00-00  txqueuelen 500  (UNSPEC)</span><br><span class="line">        RX packets 243089132  bytes 66121117371 (66.1 GB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 249144121  bytes 75720457202 (75.7 GB)</span><br><span class="line">        TX errors 0  dropped 2067 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>howto</tag>
        <tag>setup</tag>
        <tag>tinc</tag>
        <tag>vpn</tag>
      </tags>
  </entry>
  <entry>
    <title>How to set up Traefik on docker-swarm</title>
    <url>/posts/how-to-set-up-traefik-on-docker-swarm/</url>
    <content><![CDATA[<p><a href="https://traefik.io/">Traefik</a></p>
<h2 id="Prerequisite"><a href="#Prerequisite" class="headerlink" title="Prerequisite"></a>Prerequisite</h2><h3 id="Docker-swarm"><a href="#Docker-swarm" class="headerlink" title="Docker swarm"></a>Docker swarm</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker swarm init</span><br><span class="line"></span><br><span class="line">docker network create -d overlay endpoint</span><br></pre></td></tr></table></figure>

<h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># stack.yml</span></span><br><span class="line"><span class="attr">version:</span> <span class="string">&quot;3&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">traefik:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">traefik</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">endpoint</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="comment"># The http port</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;80:80&quot;</span></span><br><span class="line">      <span class="comment"># The https port</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;443:443&quot;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/run/docker.sock:/var/run/docker.sock:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./traefik.yml:/etc/traefik/traefik.yml</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./certs:/certs:ro</span></span><br><span class="line">    <span class="attr">deploy:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&quot;traefik.enable=true&quot;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&quot;traefik.http.routers.dashboard.rule=Host(`traefik.h365.asia`) &amp;&amp; (PathPrefix(`/api`) || PathPrefix(`/dashboard`))&quot;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&quot;traefik.http.routers.dashboard.tls=false&quot;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&quot;traefik.http.routers.dashboard.service=api@internal&quot;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&quot;traefik.http.services.api@internal.loadbalancer.server.port=8080&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">endpoint:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>run with docker</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker stack deploy -c stack.yml http</span><br></pre></td></tr></table></figure>

<h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">api:</span></span><br><span class="line">  <span class="attr">insecure:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># enable dashboard</span></span><br><span class="line">  <span class="attr">dashboard:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">debug:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="attr">entryPoints:</span></span><br><span class="line">  <span class="attr">web:</span></span><br><span class="line">    <span class="attr">address:</span> <span class="string">&quot;:80&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">websecure:</span></span><br><span class="line">    <span class="attr">address:</span> <span class="string">&quot;:443&quot;</span></span><br><span class="line">    <span class="attr">proxyProtocol:</span></span><br><span class="line">      <span class="attr">insecure:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">forwardedHeaders:</span></span><br><span class="line">      <span class="attr">insecure:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">providers:</span></span><br><span class="line">  <span class="comment"># turn on listen docker container and enabled swarm mode</span></span><br><span class="line">  <span class="attr">docker:</span></span><br><span class="line">    <span class="attr">watch:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">exposedByDefault:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">swarmMode:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># set up traefik&#x27;s logs, you can change log level</span></span><br><span class="line"><span class="attr">log:</span></span><br><span class="line">  <span class="attr">level:</span> <span class="string">INFO</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">json</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># set up traefik&#x27;s received all request logs writes to console</span></span><br><span class="line"><span class="attr">accessLog:</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">json</span></span><br><span class="line">  <span class="attr">fields:</span></span><br><span class="line">    <span class="attr">defaultMode:</span> <span class="string">keep</span></span><br><span class="line">    <span class="attr">names:</span></span><br><span class="line">      <span class="attr">ClientUsername:</span> <span class="string">drop</span></span><br><span class="line">    <span class="attr">headers:</span></span><br><span class="line">      <span class="attr">defaultMode:</span> <span class="string">keep</span></span><br><span class="line">      <span class="attr">names:</span></span><br><span class="line">        <span class="comment"># drop Authorization, it is sensitive data</span></span><br><span class="line">        <span class="attr">Authorization:</span> <span class="string">drop</span></span><br></pre></td></tr></table></figure>

<h2 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># stack.yml</span></span><br><span class="line"><span class="attr">version:</span> <span class="string">&quot;3&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">whoami:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">containous/whoami</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">endpoint</span></span><br><span class="line">    <span class="attr">deploy:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&quot;traefik.enable=true&quot;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&quot;traefik.http.routers.whoami.service=whoami@docker&quot;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&quot;traefik.http.services.whoami.loadbalancer.server.port=80&quot;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&quot;traefik.http.routers.whoami.rule=Host(`whoami`)&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">endpoint:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h3 id="Run"><a href="#Run" class="headerlink" title="Run"></a>Run</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker stack deploy -c stack.yml <span class="built_in">test</span></span><br></pre></td></tr></table></figure>

<h3 id="Test"><a href="#Test" class="headerlink" title="Test"></a>Test</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -H <span class="string">&#x27;Host: whoami&#x27;</span> localhost</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>docker-swarm</tag>
        <tag>traefik</tag>
      </tags>
  </entry>
  <entry>
    <title>How to use Ansible achieve blue/green deployment</title>
    <url>/posts/how-to-use-ansible-achieve-blue-green-deployment/</url>
    <content><![CDATA[<div class="note primary"><p>本文參考 <a href="https://thenewstack.io/deployment-strategies">Six Strategies for Application Deployment</a></p>
</div>

<h2 id="Prerequisite"><a href="#Prerequisite" class="headerlink" title="Prerequisite"></a>Prerequisite</h2><p>可以參考 <a href="https://blog.seancheng.space/posts/how-to-set-up-traefik-on-docker-swarm/">How to set up Traefik on docker-swarm
</a></p>
<ul>
<li>ansible</li>
<li>docker-swarm</li>
<li>traefik</li>
</ul>
<h2 id="What’s-blue-green-deployment"><a href="#What’s-blue-green-deployment" class="headerlink" title="What’s blue/green deployment"></a>What’s blue/green deployment</h2><p>看圖說故事吧</p>
<p><img src="/posts/how-to-use-ansible-achieve-blue-green-deployment/blue-green.gif" alt="blue green"></p>
<p>Pros:</p>
<ul>
<li>即時的 rollout/rollback</li>
</ul>
<p>Cons:</p>
<ul>
<li>需要兩倍的資源</li>
</ul>
<h2 id="Concept"><a href="#Concept" class="headerlink" title="Concept"></a>Concept</h2><ol>
<li>取得當前 <code>slot</code> 的顏色並且判斷出將要替換的顏色</li>
<li>部署新版服務到將要替換的顏色</li>
<li>透過 <code>load balancer</code> 將流量導到新版服務並且更改 <code>slot</code> 的顏色</li>
</ol>
<h3 id="Terms"><a href="#Terms" class="headerlink" title="Terms"></a>Terms</h3><table>
<thead>
<tr>
<th align="center">name</th>
<th align="center">value</th>
<th align="center">description</th>
</tr>
</thead>
<tbody><tr>
<td align="center">slot</td>
<td align="center">blue,green</td>
<td align="center">用以表示當前工作中的顏色</td>
</tr>
<tr>
<td align="center">color</td>
<td align="center">blue,green</td>
<td align="center">服務的顏色</td>
</tr>
<tr>
<td align="center">app</td>
<td align="center">string</td>
<td align="center">服務的名字</td>
</tr>
</tbody></table>
<h2 id="Implementation"><a href="#Implementation" class="headerlink" title="Implementation"></a>Implementation</h2><p>// todo: write<br>未完待續</p>
]]></content>
      <tags>
        <tag>docker-swarm</tag>
        <tag>traefik</tag>
        <tag>blue-green-deployment</tag>
        <tag>ansible</tag>
      </tags>
  </entry>
  <entry>
    <title>how to use dockertest in golang</title>
    <url>/posts/how-to-use-dockertest-in-golang/</url>
    <content><![CDATA[<h2 id="Prerequisite"><a href="#Prerequisite" class="headerlink" title="Prerequisite"></a>Prerequisite</h2><p><a href="https://github.com/ory/dockertest">dockertest</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">go get -u github.com/ory/dockertest/v3</span><br></pre></td></tr></table></figure>

<h2 id="How-to-write-testing"><a href="#How-to-write-testing" class="headerlink" title="How to write testing"></a>How to write testing</h2><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> repoSuite <span class="keyword">struct</span> &#123;</span><br><span class="line">	suite.Suite</span><br><span class="line">	pool     *dockertest.Pool</span><br><span class="line">	resource *dockertest.Resource</span><br><span class="line">	client   *mongo.Client</span><br><span class="line">	repo     IRepo</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *repoSuite)</span> <span class="title">SetupTest</span><span class="params">()</span></span> &#123;</span><br><span class="line">	logger := zap.NewNop()</span><br><span class="line"></span><br><span class="line">	<span class="comment">// new pool by dockertest</span></span><br><span class="line">	pool, err := dockertest.NewPool(<span class="string">&quot;&quot;</span>)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="built_in">panic</span>(err)</span><br><span class="line">	&#125;</span><br><span class="line">	s.pool = pool</span><br><span class="line"></span><br><span class="line">	<span class="comment">// run resource by image name and env</span></span><br><span class="line">	resource, err := pool.Run(<span class="string">&quot;mongo&quot;</span>, <span class="string">&quot;4.4.10&quot;</span>, <span class="literal">nil</span>)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="built_in">panic</span>(err)</span><br><span class="line">	&#125;</span><br><span class="line">	s.resource = resource</span><br><span class="line"></span><br><span class="line">	err = pool.Retry(<span class="function"><span class="keyword">func</span><span class="params">()</span> <span class="title">error</span></span> &#123;</span><br><span class="line">		uri := fmt.Sprintf(<span class="string">&quot;mongodb://localhost:%s/&quot;</span>, resource.GetPort(<span class="string">&quot;27017/tcp&quot;</span>))</span><br><span class="line">		s.client, err = mongo.Connect(contextx.Background(), options.Client().ApplyURI(uri))</span><br><span class="line">		<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">			<span class="keyword">return</span> err</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> s.client.Ping(contextx.Background(), readpref.Primary())</span><br><span class="line">	&#125;)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="built_in">panic</span>(err)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	repo, err := CreateIRepo(logger, s.client)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="built_in">panic</span>(err)</span><br><span class="line">	&#125;</span><br><span class="line">	s.repo = repo</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *repoSuite)</span> <span class="title">TearDownTest</span><span class="params">()</span></span> &#123;</span><br><span class="line">	_ = s.client.Disconnect(contextx.Background())</span><br><span class="line"></span><br><span class="line">	<span class="comment">// purge container</span></span><br><span class="line">	_ = s.pool.Purge(s.resource)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestRepoSuite</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">	suite.Run(t, <span class="built_in">new</span>(repoSuite))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// test ping mongodb</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *repoSuite)</span> <span class="title">Test_impl_PingMongo</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="keyword">type</span> args <span class="keyword">struct</span> &#123;</span><br><span class="line">		mock <span class="function"><span class="keyword">func</span><span class="params">()</span></span></span><br><span class="line">	&#125;</span><br><span class="line">	tests := []<span class="keyword">struct</span> &#123;</span><br><span class="line">		name    <span class="keyword">string</span></span><br><span class="line">		args    args</span><br><span class="line">		want    <span class="keyword">bool</span></span><br><span class="line">		wantErr <span class="keyword">bool</span></span><br><span class="line">	&#125;&#123;</span><br><span class="line">		&#123;</span><br><span class="line">			name:    <span class="string">&quot;ping then success&quot;</span>,</span><br><span class="line">			args:    args&#123;&#125;,</span><br><span class="line">			want:    <span class="literal">true</span>,</span><br><span class="line">			wantErr: <span class="literal">false</span>,</span><br><span class="line">		&#125;,</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> _, tt := <span class="keyword">range</span> tests &#123;</span><br><span class="line">		s.T().Run(tt.name, <span class="function"><span class="keyword">func</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">			<span class="keyword">if</span> tt.args.mock != <span class="literal">nil</span> &#123;</span><br><span class="line">				tt.args.mock()</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			got, err := s.repo.PingMongo(contextx.Background())</span><br><span class="line">			<span class="keyword">if</span> (err != <span class="literal">nil</span>) != tt.wantErr &#123;</span><br><span class="line">				t.Errorf(<span class="string">&quot;PingMongo() error = %v, wantErr %v&quot;</span>, err, tt.wantErr)</span><br><span class="line">				<span class="keyword">return</span></span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span> got != tt.want &#123;</span><br><span class="line">				t.Errorf(<span class="string">&quot;PingMongo() got = %v, want %v&quot;</span>, got, tt.want)</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>howto</tag>
        <tag>golang</tag>
      </tags>
  </entry>
  <entry>
    <title>How to use Github action with golang</title>
    <url>/posts/how-to-use-github-action-with-golang/</url>
    <content><![CDATA[<h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><p>in <code>.github/workflows/main.yml</code></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Build</span></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">main</span></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">test:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/setup-go@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">go-version:</span> <span class="string">&#x27;1.16&#x27;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/cache@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">~/go/pkg/mod</span></span><br><span class="line">          <span class="attr">key:</span> <span class="string">$&#123;&#123;</span> <span class="string">runner.os</span> <span class="string">&#125;&#125;-go-$&#123;&#123;</span> <span class="string">hashFiles(&#x27;**/go.sum&#x27;)</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">restore-keys:</span> <span class="string">|</span></span><br><span class="line"><span class="string">            $&#123;&#123; runner.os &#125;&#125;-go-</span></span><br><span class="line"><span class="string"></span>      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Lint</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          go get -u golang.org/x/lint/golint</span></span><br><span class="line"><span class="string">          make lint</span></span><br><span class="line"><span class="string"></span>      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">report</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          make report</span></span><br><span class="line"><span class="string"></span>      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Test</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          make test-unit</span></span><br><span class="line"><span class="string"></span>      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">codecov/codecov-action@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">token:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.CODECOV_TOKEN</span> <span class="string">&#125;&#125;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>howto</tag>
        <tag>golang</tag>
        <tag>setup</tag>
        <tag>github action</tag>
      </tags>
  </entry>
  <entry>
    <title>How to use jenkins configuration as code</title>
    <url>/posts/how-to-use-jenkins-configuration-as-code/</url>
    <content><![CDATA[<div class="note primary"><ul>
<li>本文基於在 <code>Kubernetes</code> 裡使用 <code>Jenkins</code> <a href="https://github.com/jenkinsci/configuration-as-code-plugin">Configuration as Code</a></li>
<li>使用 <code>Jenkins</code> <a href="https://github.com/jenkinsci/helm-charts/tree/main/charts/jenkins">Chart</a></li>
</ul>
</div>

<h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>開啟 <code>master.JCasC.enabled</code>，詳細可以參考官方 <a href="https://github.com/jenkinsci/helm-charts/blob/main/charts/jenkins/VALUES_SUMMARY.md#jenkins-configuration-as-code-jcasc">values</a></p>
<h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><p>you can reference <a href="https://github.com/jenkinsci/configuration-as-code-plugin/tree/master/demos">examples</a> of official provide.</p>
<p>Sections:</p>
<ul>
<li>credentials</li>
<li>jenkins</li>
<li>security</li>
<li>unclassified</li>
<li>tool</li>
</ul>
<h3 id="Github-OAuth"><a href="#Github-OAuth" class="headerlink" title="Github OAuth"></a>Github OAuth</h3><p><a href="https://plugins.jenkins.io/github-oauth/">Plugin</a></p>
<ol>
<li><p>configure <code>securityRealm</code> in <code>jenkins</code> section</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">jenkins:</span></span><br><span class="line">  <span class="attr">securityRealm:</span></span><br><span class="line">    <span class="attr">github:</span></span><br><span class="line">      <span class="attr">clientID:</span> <span class="comment"># get from github oauth app client id</span></span><br><span class="line">      <span class="attr">clientSecret:</span> <span class="comment"># get from github oauth app client secret</span></span><br><span class="line">      <span class="attr">githubApiUri:</span> <span class="string">&quot;https://api.github.com&quot;</span> <span class="comment"># if you use github enterprise, might change it</span></span><br><span class="line">      <span class="attr">githubWebUri:</span> <span class="string">&quot;https://github.com&quot;</span> <span class="comment"># if you use github enterprise, might change it</span></span><br><span class="line">      <span class="attr">oauthScopes:</span> <span class="string">&quot;read:org,user:email,repo&quot;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>configure <code>authorizationStrategy</code> in <code>jenkins</code> section</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">jenkins:</span></span><br><span class="line">  <span class="attr">authorizationStrategy:</span></span><br><span class="line">    <span class="attr">github:</span></span><br><span class="line">      <span class="attr">adminUserNames:</span> <span class="comment"># admin user name of your organization</span></span><br><span class="line">      <span class="attr">allowAnonymousJobStatusPermission:</span> <span class="literal">true</span> <span class="comment"># can anonymous read job&#x27;s status?</span></span><br><span class="line">      <span class="attr">allowAnonymousReadPermission:</span> <span class="literal">false</span> <span class="comment"># can anonymous read job?</span></span><br><span class="line">      <span class="attr">allowCcTrayPermission:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">allowGithubWebHookPermission:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">authenticatedUserCreateJobPermission:</span> <span class="literal">true</span> </span><br><span class="line">      <span class="attr">authenticatedUserReadPermission:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">organizationNames:</span> <span class="comment"># your organization</span></span><br><span class="line">      <span class="attr">useRepositoryPermissions:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>configure CSRF</p>
</li>
</ol>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">jenkins:</span></span><br><span class="line">  <span class="attr">crumbIssuer:</span></span><br><span class="line">    <span class="attr">standard:</span></span><br><span class="line">      <span class="attr">excludeClientIPFromCrumb:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h3 id="Credentials"><a href="#Credentials" class="headerlink" title="Credentials"></a>Credentials</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">credentials:</span></span><br><span class="line">  <span class="attr">system:</span></span><br><span class="line">    <span class="attr">domainCredentials:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">credentials:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">string:</span></span><br><span class="line">              <span class="attr">description:</span> <span class="string">&quot;example description&quot;</span></span><br><span class="line">              <span class="attr">id:</span> <span class="string">&quot;secret-text-id&quot;</span></span><br><span class="line">              <span class="attr">scope:</span> <span class="string">GLOBAL</span></span><br><span class="line">              <span class="attr">secret:</span> <span class="string">&quot;text&quot;</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">usernamePassword:</span></span><br><span class="line">              <span class="attr">description:</span> <span class="string">&quot;example description&quot;</span></span><br><span class="line">              <span class="attr">id:</span> <span class="string">&quot;username-password-id&quot;</span></span><br><span class="line">              <span class="attr">password:</span> <span class="string">&quot;password&quot;</span></span><br><span class="line">              <span class="attr">scope:</span> <span class="string">GLOBAL</span></span><br><span class="line">              <span class="attr">username:</span> <span class="string">&quot;username&quot;</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">file:</span></span><br><span class="line">              <span class="attr">fileName:</span> <span class="string">&quot;filename&quot;</span></span><br><span class="line">              <span class="attr">id:</span> <span class="string">&quot;file-cred-id&quot;</span></span><br><span class="line">              <span class="attr">scope:</span> <span class="string">GLOBAL</span></span><br><span class="line">              <span class="attr">secretBytes:</span> <span class="string">&quot;ZmlsZQ==&quot;</span></span><br></pre></td></tr></table></figure>

<h2 id="Update-Config"><a href="#Update-Config" class="headerlink" title="Update Config"></a>Update Config</h2><p>How to update the config</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">NS=cicd <span class="comment"># namespace</span></span><br><span class="line">NAME=jenkins-jenkins-jcasc-config <span class="comment"># config name</span></span><br><span class="line">CFG_PATH=./jcasc-default-config.yaml <span class="comment"># you want to update from file path</span></span><br><span class="line"></span><br><span class="line">kubectl --namespace=<span class="variable">$&#123;NS&#125;</span> create configmap <span class="variable">$&#123;NAME&#125;</span> \</span><br><span class="line">  --from-file=<span class="variable">$&#123;CFG_PATH&#125;</span> \</span><br><span class="line">  -o yaml \</span><br><span class="line">  --save-config \</span><br><span class="line">  --dry-run=client | kubectl apply -f -</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>howto</tag>
        <tag>jenkins</tag>
      </tags>
  </entry>
  <entry>
    <title>How to use kubeconfig</title>
    <url>/posts/how-to-use-kubeconfig/</url>
    <content><![CDATA[<h2 id="Configure-Environment"><a href="#Configure-Environment" class="headerlink" title="Configure Environment"></a>Configure Environment</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> KUBECONFIG=<span class="variable">$HOME</span>/.kube/config</span><br></pre></td></tr></table></figure>

<h2 id="Switch-kubeconfig"><a href="#Switch-kubeconfig" class="headerlink" title="Switch kubeconfig"></a>Switch kubeconfig</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl --kubeconfig ...</span><br></pre></td></tr></table></figure>

<h2 id="Switch-context"><a href="#Switch-context" class="headerlink" title="Switch context"></a>Switch context</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl --context ...</span><br></pre></td></tr></table></figure>

<h2 id="Merge-Multiple-Configs"><a href="#Merge-Multiple-Configs" class="headerlink" title="Merge Multiple Configs"></a>Merge Multiple Configs</h2><p>你可能會有很多個 <code>kubeconfig</code>，雖然 <code>kubectl</code> 有提供 <code>flag</code>，但是頻繁的切換還是有點麻煩，<a href="https://kubernetes.io/docs/concepts/configuration/organize-cluster-access-kubeconfig/#merging-kubeconfig-files">官方文件</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">KUBECONFIG=<span class="variable">$KUBECONFIG</span>:<span class="variable">$&#123;CONFIG_FILE&#125;</span> kubectl config view --flatten &gt; <span class="variable">$&#123;HOME&#125;</span>/.kube/config</span><br></pre></td></tr></table></figure>

<h2 id="Configure-context"><a href="#Configure-context" class="headerlink" title="Configure context"></a>Configure context</h2><p>你可以設定當前 <code>namespace</code> 和 <code>context</code> 來切換使用</p>
<h3 id="List-contexts"><a href="#List-contexts" class="headerlink" title="List contexts"></a>List contexts</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl config get-contexts</span><br></pre></td></tr></table></figure>

<h3 id="Switch-context-1"><a href="#Switch-context-1" class="headerlink" title="Switch context"></a>Switch context</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl config use-context <span class="variable">$&#123;CONTEXT_NAME&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="Switch-namespace"><a href="#Switch-namespace" class="headerlink" title="Switch namespace"></a>Switch namespace</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl config set-context $(kubectl config current-context) --namespace <span class="variable">$&#123;NAMESPACE&#125;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>How to use mock code in unit test</title>
    <url>/posts/how-to-use-mock-code-in-unit-test/</url>
    <content><![CDATA[<h2 id="定義-test-suite"><a href="#定義-test-suite" class="headerlink" title="定義 test suite"></a>定義 test suite</h2><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// biz_test.go</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// declare test suite struct</span></span><br><span class="line"><span class="keyword">type</span> bizSuite <span class="keyword">struct</span> &#123;</span><br><span class="line">	suite.Suite</span><br><span class="line">	mock *mocks.IRepo</span><br><span class="line">	biz  IBiz</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// setup test suite</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *bizSuite)</span> <span class="title">SetupTest</span><span class="params">()</span></span> &#123;</span><br><span class="line">	logger, _ := zap.NewDevelopment()</span><br><span class="line">	node, _ := snowflake.NewNode(<span class="number">1</span>)</span><br><span class="line">	factory, _ := token.New(&amp;token.Options&#123;Signature: <span class="string">&quot;7d01eb0200bc730a2c58&quot;</span>&#125;, logger)</span><br><span class="line"></span><br><span class="line">	s.mock = <span class="built_in">new</span>(mocks.IRepo)</span><br><span class="line">	<span class="keyword">if</span> biz, err := CreateIBiz(logger, s.mock, node, factory); err != <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="built_in">panic</span>(err)</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		s.biz = biz</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// teardown test suite</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *bizSuite)</span> <span class="title">TearDownTest</span><span class="params">()</span></span> &#123;</span><br><span class="line">	s.mock.AssertExpectations(s.T())</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestBizSuite</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">	suite.Run(t, <span class="built_in">new</span>(bizSuite))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h2 id="撰寫測試"><a href="#撰寫測試" class="headerlink" title="撰寫測試"></a>撰寫測試</h2><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *bizSuite)</span> <span class="title">Test_impl_GetByID</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="keyword">type</span> args <span class="keyword">struct</span> &#123;</span><br><span class="line">		ctx  contextx.Contextx</span><br><span class="line">		id   <span class="keyword">int64</span></span><br><span class="line">		mock <span class="function"><span class="keyword">func</span><span class="params">()</span></span></span><br><span class="line">	&#125;</span><br><span class="line">	tests := []<span class="keyword">struct</span> &#123;</span><br><span class="line">		name     <span class="keyword">string</span></span><br><span class="line">		args     args</span><br><span class="line">		wantInfo *user.Profile</span><br><span class="line">		wantErr  <span class="keyword">bool</span></span><br><span class="line">	&#125;&#123;</span><br><span class="line">		&#123;</span><br><span class="line">			name: <span class="string">&quot;get by id then error&quot;</span>,</span><br><span class="line">			args: args&#123;id: id1, mock: <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">				s.mock.On(<span class="string">&quot;GetByID&quot;</span>, mock.Anything, id1).Return(<span class="literal">nil</span>, errors.New(<span class="string">&quot;error&quot;</span>)).Once()</span><br><span class="line">			&#125;&#125;,</span><br><span class="line">			wantInfo: <span class="literal">nil</span>,</span><br><span class="line">			wantErr:  <span class="literal">true</span>,</span><br><span class="line">		&#125;,</span><br><span class="line">		&#123;</span><br><span class="line">			name: <span class="string">&quot;get by id then not exists&quot;</span>,</span><br><span class="line">			args: args&#123;id: id1, mock: <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">				s.mock.On(<span class="string">&quot;GetByID&quot;</span>, mock.Anything, id1).Return(<span class="literal">nil</span>, <span class="literal">nil</span>).Once()</span><br><span class="line">			&#125;&#125;,</span><br><span class="line">			wantInfo: <span class="literal">nil</span>,</span><br><span class="line">			wantErr:  <span class="literal">true</span>,</span><br><span class="line">		&#125;,</span><br><span class="line">		&#123;</span><br><span class="line">			name: <span class="string">&quot;get by id then user&quot;</span>,</span><br><span class="line">			args: args&#123;id: id1, mock: <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">				s.mock.On(<span class="string">&quot;GetByID&quot;</span>, mock.Anything, id1).Return(info1, <span class="literal">nil</span>).Once()</span><br><span class="line">			&#125;&#125;,</span><br><span class="line">			wantInfo: info1,</span><br><span class="line">			wantErr:  <span class="literal">false</span>,</span><br><span class="line">		&#125;,</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> _, tt := <span class="keyword">range</span> tests &#123;</span><br><span class="line">		s.T().Run(tt.name, <span class="function"><span class="keyword">func</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">			<span class="keyword">if</span> tt.args.mock != <span class="literal">nil</span> &#123;</span><br><span class="line">				tt.args.mock()</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			gotInfo, err := s.biz.GetByID(tt.args.ctx, tt.args.id)</span><br><span class="line">			<span class="keyword">if</span> (err != <span class="literal">nil</span>) != tt.wantErr &#123;</span><br><span class="line">				t.Errorf(<span class="string">&quot;GetByID() error = %v, wantErr %v&quot;</span>, err, tt.wantErr)</span><br><span class="line">				<span class="keyword">return</span></span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span> !reflect.DeepEqual(gotInfo, tt.wantInfo) &#123;</span><br><span class="line">				t.Errorf(<span class="string">&quot;GetByID() gotInfo = %v, want %v&quot;</span>, gotInfo, tt.wantInfo)</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">			s.TearDownTest()</span><br><span class="line">		&#125;)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>golang</tag>
        <tag>software development</tag>
        <tag>unit test</tag>
      </tags>
  </entry>
  <entry>
    <title>How to use mockery in golang</title>
    <url>/posts/how-to-use-mockery-in-golang/</url>
    <content><![CDATA[<p><a href="https://github.com/vektra/mockeryhttps://github.com/vektra/mockery">mockery</a></p>
<h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install mockery</span><br></pre></td></tr></table></figure>

<h2 id="How-to-use"><a href="#How-to-use" class="headerlink" title="How to use"></a>How to use</h2><p>create a <code>interface</code></p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> test</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Tester <span class="keyword">interface</span> &#123;</span><br><span class="line">    Test(val <span class="keyword">int</span>) <span class="keyword">bool</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>open your <code>Terminal</code> and cd to the interface directory and input <code>mocker --name $&#123;YOUR_INTERFACE_NAME&#125;</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mockery --name Tester</span><br></pre></td></tr></table></figure>

<p>then it will generate <code>mocks</code> folder and mock code</p>
]]></content>
      <tags>
        <tag>golang</tag>
        <tag>software</tag>
        <tag>development</tag>
        <tag>mockery</tag>
      </tags>
  </entry>
  <entry>
    <title>how to use oauth2 via auth0</title>
    <url>/posts/how-to-use-oauth2-via-auth0/</url>
    <content><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p><a href="https://auth0.com">auth0</a></p>
<p>We usually log in via oauth2 from various social media like line, facebook, google ,etc.<br>So we can use auth0 simple achieve to log in by social media.</p>
<h2 id="Create-social-connections"><a href="#Create-social-connections" class="headerlink" title="Create social connections"></a>Create social connections</h2><p>Open <code>Authentication</code> -&gt; <code>Social</code> page, you can see <code>Create Connection</code> button then click it.<br>Then you can create new social connection.</p>
<p><img src="/posts/how-to-use-oauth2-via-auth0/new-social-connection.png" alt="new social connection"></p>
<h2 id="Create-application"><a href="#Create-application" class="headerlink" title="Create application"></a>Create application</h2><p>Open <code>Applications</code> -&gt; <code>Applications</code> page, you can see <code>Create Application</code> button then click it.</p>
<ul>
<li><code>Settings</code>, The <code>Domain</code>, <code>Client ID</code> and <code>Client Secret</code> is <strong>important</strong> in next step.</li>
</ul>
<p><img src="/posts/how-to-use-oauth2-via-auth0/my-app-settings.png" alt="my app settings"></p>
<ul>
<li><code>Connections</code></li>
</ul>
<p><img src="/posts/how-to-use-oauth2-via-auth0/my-app-connections.png" alt="my app connections"></p>
<h2 id="Develop-your-application"><a href="#Develop-your-application" class="headerlink" title="Develop your application"></a>Develop your application</h2><p>You can reference <code>Quick Start</code> in application page. The example choose <code>Regular Web App</code> using <code>Golang</code>.<br>Then you can see various example for you like programming language.</p>
<p><a href="https://github.com/auth0-samples/auth0-golang-web-app/tree/master/01-Login">golang example</a></p>
<h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><p><a href="https://github.com/blackhorseya/user-app">Source code</a></p>
<p><a href="https://user.seancheng.space">Live Demo</a></p>
]]></content>
      <tags>
        <tag>howto</tag>
        <tag>golang</tag>
        <tag>oauth2</tag>
        <tag>auth0</tag>
      </tags>
  </entry>
  <entry>
    <title>How to use protobuf in golang</title>
    <url>/posts/how-to-use-protobuf-in-golang/</url>
    <content><![CDATA[<div class="note primary"></div>

<h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">go get google.golang.org/protobuf</span><br><span class="line">go get google.golang.org/protobuf/cmd/protoc-gen-go</span><br></pre></td></tr></table></figure>

<h2 id="How-to-use"><a href="#How-to-use" class="headerlink" title="How to use"></a>How to use</h2><p>在 <code>Golang</code> 裡是沒有 <code>enum</code> 的功能，這時候用 <code>protobuf</code> 是個蠻好的解法。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># bonus.proto</span><br><span class="line">syntax = &quot;proto3&quot;;</span><br><span class="line">package bonus;</span><br><span class="line">option go_package = &quot;github.com/blackhorseya/red-packet/internal/pkg/entity/bonus&quot;;</span><br><span class="line"></span><br><span class="line">enum Status &#123;</span><br><span class="line">  UNKNOWN = 1;</span><br><span class="line">  ENABLED = 2;</span><br><span class="line">  DISABLED = 3;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">message Packet &#123;</span><br><span class="line">  string id = 1;</span><br><span class="line">  int64 amount = 2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>透過 <code>Makefile</code> 去產生 code</p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="meta"><span class="meta-keyword">.PHONY</span>: gen-pb</span></span><br><span class="line"><span class="section">gen-pb:</span></span><br><span class="line">	@protoc --go_out=plugins=grpc,paths=source_relative:. ./internal/pkg/entity/**/*.proto</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>howto</tag>
        <tag>golang</tag>
        <tag>software</tag>
        <tag>development</tag>
        <tag>protobuf</tag>
      </tags>
  </entry>
  <entry>
    <title>how to use s3 as helm chart registry</title>
    <url>/posts/how-to-use-s3-as-helm-chart-registry/</url>
    <content><![CDATA[<h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>Install helm s3 plugin</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">helm plugin install https://github.com/hypnoglow/helm-s3.git</span><br></pre></td></tr></table></figure>

<h2 id="Create-helm-chart-repository-using-S3"><a href="#Create-helm-chart-repository-using-S3" class="headerlink" title="Create helm chart repository using S3"></a>Create helm chart repository using S3</h2><ol>
<li>create a bucket in <code>us-west-2</code> region with <code>$&#123;YOUR_BUCKET_NAME&#125;</code> (helm-charts)</li>
<li>init a helm chart repository</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">helm s3 init s3://$(YOUR_BUCKET_NAME)/charts</span><br></pre></td></tr></table></figure>

<h2 id="Package-and-push-helm-chart-to-S3"><a href="#Package-and-push-helm-chart-to-S3" class="headerlink" title="Package and push helm chart to S3"></a>Package and push helm chart to S3</h2><ol>
<li>package your helm chart</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">helm package ./$(HELM_CHART_PATH)</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>push your helm chart</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">helm s3 push ./$(HELM_CHART_PATH)-* $(YOUR_REPO_NAME)</span><br></pre></td></tr></table></figure>

<h2 id="Set-up-your-local-helm-repo"><a href="#Set-up-your-local-helm-repo" class="headerlink" title="Set up your local helm repo"></a>Set up your local helm repo</h2><ol>
<li>add helm repo</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">helm repo add $(YOUR_REPO_NAME) s3://$(YOUR_BUCKET_NAME)/charts</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>verify repo and charts</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">helm repo update</span><br><span class="line">helm search repo $(YOUR_REPO_NAME)</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>howto</tag>
        <tag>helm</tag>
        <tag>setup</tag>
        <tag>s3</tag>
      </tags>
  </entry>
  <entry>
    <title>How to use terraform cloud</title>
    <url>/posts/how-to-use-terraform-cloud/</url>
    <content><![CDATA[<p><a href="https://www.terraform.io/">Terraform</a></p>
<h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install terraform</span><br></pre></td></tr></table></figure>

<h2 id="Setup"><a href="#Setup" class="headerlink" title="Setup"></a>Setup</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">terraform login</span><br></pre></td></tr></table></figure>

<h2 id="Get-Started"><a href="#Get-Started" class="headerlink" title="Get Started"></a>Get Started</h2><p>Reference official <a href="https://learn.hashicorp.com/terraform?utm_source=terraform_io">tutorials</a></p>
<p>設定 <code>backend</code> 為 <code>remote</code>，會將 <code>.tfstat</code> 存至 <code>terraform cloud</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># main.tf</span><br><span class="line">terraform &#123;</span><br><span class="line">  backend &quot;remote&quot; &#123;</span><br><span class="line">    organization = &quot;$&#123;YOUR_ORG&#125;&quot;</span><br><span class="line"></span><br><span class="line">    workspaces &#123;</span><br><span class="line">      name = &quot;$&#123;YOUR_WORKSPACE&#125;&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">provider &quot;google&quot; &#123;</span><br><span class="line">  credentials = file(&quot;$&#123;YOUR_GCLOUD_SA_KEY&#125;&quot;)</span><br><span class="line">  project     = &quot;$&#123;YOUR_PROJECT_ID&#125;&quot;</span><br><span class="line">  region      = &quot;asia-east1&quot;</span><br><span class="line">  zone        = &quot;asia-east1-c&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Init"><a href="#Init" class="headerlink" title="Init"></a>Init</h3><p>初始化 <code>terraform</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">terraform init</span><br></pre></td></tr></table></figure>

<h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># storage.tf</span><br><span class="line">## set a bucket for static site</span><br><span class="line">resource &quot;google_storage_bucket&quot; &quot;static-site&quot; &#123;</span><br><span class="line">  name          = &quot;image-store.com&quot;</span><br><span class="line">  location      = &quot;US&quot;</span><br><span class="line">  force_destroy = true</span><br><span class="line">  </span><br><span class="line">  uniform_bucket_level_access = true</span><br><span class="line">  </span><br><span class="line">  website &#123;</span><br><span class="line">    main_page_suffix = &quot;index.html&quot;</span><br><span class="line">    not_found_page   = &quot;404.html&quot;</span><br><span class="line">  &#125;</span><br><span class="line">  cors &#123;</span><br><span class="line">    origin          = [&quot;http://image-store.com&quot;]</span><br><span class="line">    response_header = [&quot;*&quot;]</span><br><span class="line">    max_age_seconds = 3600</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">## set public access control for static site</span><br><span class="line">resource &quot;google_storage_bucket_iam_binding&quot; &quot;public_binding&quot; &#123;</span><br><span class="line">  bucket = google_storage_bucket.static-site.name</span><br><span class="line">  role = &quot;roles/storage.objectViewer&quot;</span><br><span class="line">  members = [</span><br><span class="line">    &quot;allUsers&quot;,</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>howto</tag>
        <tag>terraform</tag>
        <tag>IaC</tag>
      </tags>
  </entry>
  <entry>
    <title>How to use terraform for cloudflare</title>
    <url>/posts/how-to-use-terraform-for-cloudflare/</url>
    <content><![CDATA[<h2 id="前置條件"><a href="#前置條件" class="headerlink" title="前置條件"></a>前置條件</h2><ul>
<li>terraform</li>
<li>cloudflare</li>
</ul>
<h2 id="建立-Cloudflare-token"><a href="#建立-Cloudflare-token" class="headerlink" title="建立 Cloudflare token"></a>建立 Cloudflare token</h2><p>開啟 Cloudflare <a href="https://dash.cloudflare.com/profile/api-tokens">Token 設定</a>，建立一個 token，包含以下權限</p>
<ul>
<li>區域 -&gt; 區域設定 -&gt; 編輯</li>
<li>區域 -&gt; 區域 -&gt; 編輯</li>
<li>區域 -&gt; DNS -&gt; 編輯</li>
</ul>
<h2 id="撰寫-terraform"><a href="#撰寫-terraform" class="headerlink" title="撰寫 terraform"></a>撰寫 terraform</h2><p>在主目錄建立3個 tf 檔案</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># main.tf</span><br><span class="line"></span><br><span class="line"># 設定 provider，並帶入 api token</span><br><span class="line">provider &quot;cloudflare&quot; &#123;</span><br><span class="line">  api_token = var.cf_api_token</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># variables.tf</span><br><span class="line"></span><br><span class="line">variable &quot;cf_api_token&quot; &#123;</span><br><span class="line">  type = string</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># cf.tf</span><br><span class="line"></span><br><span class="line"># 設定 cloudflare 的zone</span><br><span class="line"># https://registry.terraform.io/providers/cloudflare/cloudflare/latest/docs/resources/zone</span><br><span class="line">resource &quot;cloudflare_zone&quot; &quot;seancheng-space&quot; &#123;</span><br><span class="line">  zone = &quot;seancheng.space&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 設定 dns records</span><br><span class="line"># https://registry.terraform.io/providers/cloudflare/cloudflare/latest/docs/resources/record</span><br><span class="line">resource &quot;cloudflare_record&quot; &quot;root-seancheng-space&quot; &#123;</span><br><span class="line">  name    = &quot;seancheng.space&quot;</span><br><span class="line">  type    = &quot;A&quot;</span><br><span class="line">  zone_id = cloudflare_zone.seancheng-space.id</span><br><span class="line">  value   = &quot;127.0.0.1&quot;</span><br><span class="line">  proxied = true</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">resource &quot;cloudflare_record&quot; &quot;blog-seancheng-space&quot; &#123;</span><br><span class="line">  name    = &quot;blog&quot;</span><br><span class="line">  type    = &quot;CNAME&quot;</span><br><span class="line">  zone_id = cloudflare_zone.seancheng-space.id</span><br><span class="line">  value   = &quot;blackhorseya.github.io&quot;</span><br><span class="line">  proxied = true</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>最後執行 <code>terraform apply</code>。</p>
]]></content>
      <tags>
        <tag>howto</tag>
        <tag>terraform</tag>
        <tag>cloudflare</tag>
      </tags>
  </entry>
  <entry>
    <title>How to use Travis CI</title>
    <url>/posts/how-to-use-travis-ci/</url>
    <content><![CDATA[<p><a href="https://travis-ci.com/">Travis CI</a></p>
<h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install travis</span><br></pre></td></tr></table></figure>

<h2 id="Setup"><a href="#Setup" class="headerlink" title="Setup"></a>Setup</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">travis login --pro</span><br></pre></td></tr></table></figure>

<h2 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># .travis.yml</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">go</span></span><br><span class="line"></span><br><span class="line"><span class="attr">go:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;1.15&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">git:</span></span><br><span class="line">  <span class="attr">submodules:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="attr">cache:</span></span><br><span class="line">  <span class="attr">directories:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;$HOME/.cache/go-build&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;$HOME/gopath/pkg/mod&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">env:</span></span><br><span class="line">  <span class="attr">global:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">GO111MODULE=on</span></span><br><span class="line"></span><br><span class="line"><span class="attr">script:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">go</span> <span class="string">test</span> <span class="string">-v</span> <span class="string">./...</span></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>howto</tag>
        <tag>travis</tag>
        <tag>cicd</tag>
      </tags>
  </entry>
  <entry>
    <title>How to use Wire in golang for dependency injection</title>
    <url>/posts/how-to-use-wire-in-golang-for-dependency-injection/</url>
    <content><![CDATA[<div class="note primary"><ul>
<li>這裡就不比較各個 dependency injection 的優缺點，只專注在 <code>Wire</code> 身上</li>
</ul>
</div>

<p>參考 <a href="https://github.com/google/wire">Wire</a> 官方。完整實戰應用可以參考 <a href="https://github.com/blackhorseya/todo-app">todo-app</a></p>
<h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>安裝所需要的執行檔。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">go get github.com/google/wire/cmd/wire</span><br></pre></td></tr></table></figure>

<div class="note warning"><p>常常有人裝完在 <code>$GOPATH/bin</code> 裡，是看得到執行檔的，但是在 <code>Terminal</code> 卻不能執行。<br>請注意，將 <code>$GOPATH/bin</code> 加入 <code>$PATH</code> 中，<strong>不會我也沒辦法了</strong>。</p>
</div>

<h2 id="How-to-use"><a href="#How-to-use" class="headerlink" title="How to use"></a>How to use</h2><p>直接上個 <code>sample code</code> 吧。順便測試一下 <code>Hexo</code> 的 <code>Gist</code> tag 功能。</p>
<h3 id="Install-in-your-project-with-gomodule"><a href="#Install-in-your-project-with-gomodule" class="headerlink" title="Install in your project with gomodule"></a>Install in your project with gomodule</h3><p>You can create a sample project then execute <code>go mod init</code> and install <code>wire</code>.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">go get -u github.com/google/wire</span><br></pre></td></tr></table></figure>

<h3 id="Generate-wire-code-using-Makefile"><a href="#Generate-wire-code-using-Makefile" class="headerlink" title="Generate wire code using Makefile"></a>Generate wire code using Makefile</h3><p>You can use <code>Makefile</code> to generate <code>wire</code> code.</p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="meta"><span class="meta-keyword">.PHONY</span>: gen-wire</span></span><br><span class="line"><span class="section">gen-wire:</span></span><br><span class="line">	@wire gen ./...</span><br></pre></td></tr></table></figure>

<h3 id="Sample-code"><a href="#Sample-code" class="headerlink" title="Sample code"></a>Sample code</h3><p>In the code using <code>golang</code> build tags like <code>wireinject</code> tag.</p>
<script src="//gist.github.com/77e25e0353785b07720a4af892d2c08b.js"></script>

<h2 id="In-real-case"><a href="#In-real-case" class="headerlink" title="In real case"></a>In real case</h2><p>You might be need to inject a business service into your api layer. So you can create a ProviderSet for your business service.</p>
<p>So you can create an interface called <code>HealthBiz</code> and create a struct called <code>impl</code> then implement the interface.</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> business</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> HealthBiz <span class="keyword">interface</span> &#123;</span><br><span class="line">    Readiness() <span class="keyword">bool</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> impl <span class="keyword">struct</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(i *impl)</span> <span class="title">Readiness</span><span class="params">()</span> <span class="title">bool</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewBusinessImpl</span><span class="params">()</span> <span class="title">HealthBiz</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> &amp;impl&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> ProviderSet = wire.NewSet(NewBusinessImpl)</span><br></pre></td></tr></table></figure>

<p>you can add <code>business.ProviderSet</code> in your wire’s set.</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> providerSet = wire.NewSet(business.ProviderSet)</span><br></pre></td></tr></table></figure>

<p>Then you can inject the business in your api layer. It needs same return type and inject type.</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> api</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> impl <span class="keyword">struct</span> &#123;</span><br><span class="line">    biz business.HealthBiz</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>golang</tag>
        <tag>wire</tag>
        <tag>dependency injection</tag>
      </tags>
  </entry>
  <entry>
    <title>how to write git commit message</title>
    <url>/posts/how-to-write-git-commit-message/</url>
    <content><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>The git commit message is very <strong>important</strong>. You can use commit message to generate <code>CHANGELOG</code> in your ci pipeline Or any you want to do something.<br>So, We can standardize standard commit message for you or your team.</p>
<h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>We can help ourselves to write beautiful message through some tools.</p>
<ul>
<li><a href="https://commitizen-tools.github.io/commitizen/">commitizen</a></li>
<li><a href="https://pre-commit.com/">pre-commit</a></li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">brew install commitizen pre-commit</span><br></pre></td></tr></table></figure>

<h2 id="Specification"><a href="#Specification" class="headerlink" title="Specification"></a>Specification</h2><p>The template include three part, <code>header</code>, <code>body</code> and <code>footer</code>.</p>
<p>Header: <code>&lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;</code></p>
<p>type list:</p>
<ul>
<li>feat: A new feature</li>
<li>fix: A bug fix</li>
<li>docs: Documentation only changes</li>
<li>style: Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)</li>
<li>refactor: A code change that neither fixes a bug nor adds a feature</li>
<li>perf: A code change that improves performance</li>
<li>test: Adding missing tests or correcting existing tests</li>
<li>build: Changes that affect the build system or external dependencies (example scopes: gulp, broccoli, npm)</li>
<li>ci: Changes to our CI configuration files and scripts (example scopes: Travis, Circle, BrowserStack, SauceLabs)</li>
<li>chore: Other changes that don’t modify src or test files</li>
<li>revert: Reverts a previous commit</li>
</ul>
<p>Body: 72-character wrapped.</p>
<ul>
<li>The body is a detailed description of this submission, which can be multiple lines, and each line should not exceed 72<br>characters</li>
<li>Explain the items and reasons of the code changes, as well as the comparison with the previous behavior</li>
</ul>
<p>Footer:</p>
<ul>
<li>Fill in the task number (if any)</li>
<li>BREAKING CHANGE (can be ignored), record incompatible changes, start with BREAKING CHANGE:, followed by a description<br>of the change, the reason for the change, and the migration method.</li>
</ul>
<h2 id="Set-commit-message-template"><a href="#Set-commit-message-template" class="headerlink" title="Set commit message template"></a>Set commit message template</h2><p>Create a file call <code>.gitmessage.txt</code> in <code>$HOME</code> directory</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Header</span><br><span class="line"># &lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;</span><br><span class="line"></span><br><span class="line"># type list:</span><br><span class="line"># feat: A new feature</span><br><span class="line"># fix: A bug fix</span><br><span class="line"># docs: Documentation only changes</span><br><span class="line"># style: Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)</span><br><span class="line"># refactor: A code change that neither fixes a bug nor adds a feature</span><br><span class="line"># perf: A code change that improves performance</span><br><span class="line"># test: Adding missing tests or correcting existing tests</span><br><span class="line"># build: Changes that affect the build system or external dependencies (example scopes: gulp, broccoli, npm)</span><br><span class="line"># ci: Changes to our CI configuration files and scripts (example scopes: Travis, Circle, BrowserStack, SauceLabs)</span><br><span class="line"># chore: Other changes that don&#x27;t modify src or test files</span><br><span class="line"># revert: Reverts a previous commit</span><br><span class="line"></span><br><span class="line"># Body</span><br><span class="line"># 72-character wrapped.</span><br><span class="line"></span><br><span class="line"># Footer</span><br><span class="line"># Fill in the task number (if any)</span><br><span class="line"># https://docs.gitlab.com/ee/integration/jira/index.html</span><br></pre></td></tr></table></figure>

<p>Set git config template location</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config --global commit.template ~/.gitmessage.txt</span><br></pre></td></tr></table></figure>

<h2 id="Using-commitizen"><a href="#Using-commitizen" class="headerlink" title="Using commitizen"></a>Using commitizen</h2><p>Initialize <code>commitizen</code> and <code>pre-commit</code> to standardize commit message when git commit.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cz init</span><br></pre></td></tr></table></figure>

<p>And then you should get two files <code>.cz.yaml</code> and <code>.pre-commit-config.yaml</code>.</p>
<ul>
<li>.cz.yaml</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">commitizen:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">cz_conventional_commits</span></span><br><span class="line">  <span class="attr">tag_format:</span> <span class="string">$version</span></span><br><span class="line">  <span class="attr">version:</span> <span class="number">0.0</span><span class="number">.1</span></span><br></pre></td></tr></table></figure>

<ul>
<li>.pre-commit-config.yaml</li>
</ul>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">repos:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">repo:</span> <span class="string">https://github.com/commitizen-tools/commitizen</span></span><br><span class="line">    <span class="attr">rev:</span> <span class="string">v2.20.5</span></span><br><span class="line">    <span class="attr">hooks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">commitizen</span></span><br><span class="line">        <span class="attr">stages:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">commit-msg</span></span><br></pre></td></tr></table></figure>

<p>You can create a new tag via <code>cz bump</code> or other commands.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">usage: cz [-h] [--debug] [-n NAME]</span><br><span class="line">          &#123;init,commit,c,ls,example,info,schema,bump,changelog,ch,check,version&#125;</span><br><span class="line">          ...</span><br><span class="line"></span><br><span class="line">Commitizen is a cli tool to generate conventional commits.</span><br><span class="line">For more information about the topic go to https://conventionalcommits.org/</span><br><span class="line"></span><br><span class="line">options:</span><br><span class="line">  -h, --help            show this help message and exit</span><br><span class="line">  --debug               use debug mode</span><br><span class="line">  -n NAME, --name NAME  use the given commitizen (default:</span><br><span class="line">                        cz_conventional_commits)</span><br><span class="line"></span><br><span class="line">commands:</span><br><span class="line">  &#123;init,commit,c,ls,example,info,schema,bump,changelog,ch,check,version&#125;</span><br><span class="line">    init                init commitizen configuration</span><br><span class="line">    commit (c)          create new commit</span><br><span class="line">    ls                  show available commitizens</span><br><span class="line">    example             show commit example</span><br><span class="line">    info                show information about the cz</span><br><span class="line">    schema              show commit schema</span><br><span class="line">    bump                bump semantic version based on the git log</span><br><span class="line">    changelog (ch)      generate changelog (note that it will overwrite</span><br><span class="line">                        existing file)</span><br><span class="line">    check               validates that a commit message matches the commitizen</span><br><span class="line">                        schema</span><br><span class="line">    version             get the version of the installed commitizen or the</span><br><span class="line">                        current project (default: installed commitizen)</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>howto</tag>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>how to write golang project layout</title>
    <url>/posts/how-to-write-golang-project-layout/</url>
    <content><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>Project layout is <strong>important</strong> in <code>golang</code> because each folder is a package. So I will follow up <a href="https://github.com/golang-standards/project-layout">golang project layout</a> and <a href="https://github.com/sdgmf/go-project-sample">go project sample</a> two projects integrate to my project layout.</p>
<h2 id="Project-layout"><a href="#Project-layout" class="headerlink" title="Project layout"></a>Project layout</h2><h3 id="Go-Directories"><a href="#Go-Directories" class="headerlink" title="Go Directories"></a>Go Directories</h3><h4 id="cmd"><a href="#cmd" class="headerlink" title="/cmd"></a>/cmd</h4><p>Main applications for this project. (e.g., <code>/cmd/todo-app</code>)</p>
<h4 id="internal"><a href="#internal" class="headerlink" title="/internal"></a>/internal</h4><p>Private application and library code. (e.go., <code>/internal/app/todo</code>, <code>internal/pkg/lib</code>).</p>
<h4 id="pkg"><a href="#pkg" class="headerlink" title="/pkg"></a>/pkg</h4><p>Library code that’s ok to use by external application (e.g., <code>pkg/utils</code>).</p>
<h4 id="pb"><a href="#pb" class="headerlink" title="/pb"></a>/pb</h4><p>It’s protobuf for this project.</p>
<p>You can generate <code>protobuf</code> in <code>Makefile</code>.</p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="meta"><span class="meta-keyword">.PHONY</span>: gen-pb</span></span><br><span class="line"><span class="section">gen-pb:</span></span><br><span class="line">	@protoc --go_out=paths=source_relative:. --go-grpc_out=paths=source_relative:. ./pb/*.proto</span><br><span class="line">	@echo Successfully generated proto</span><br></pre></td></tr></table></figure>

<h3 id="Service-application-directories"><a href="#Service-application-directories" class="headerlink" title="Service application directories"></a>Service application directories</h3><h4 id="api"><a href="#api" class="headerlink" title="/api"></a>/api</h4><p>OpenAPI/Swagger specs.</p>
<p>You can generate <code>Swagger</code> spec in <code>Makefile</code>.</p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="meta"><span class="meta-keyword">.PHONY</span>: gen-swagger</span></span><br><span class="line"><span class="section">gen-swagger:</span></span><br><span class="line">	@swag init -g cmd/<span class="variable">$(APP_NAME)</span>/main.go --parseInternal -o api/docs</span><br></pre></td></tr></table></figure>

<h4 id="web"><a href="#web" class="headerlink" title="/web"></a>/web</h4><p>Web application specific components: static web assets, server side templates and SPAs.</p>
<h3 id="Common-application-directories"><a href="#Common-application-directories" class="headerlink" title="Common application directories"></a>Common application directories</h3><h4 id="configs"><a href="#configs" class="headerlink" title="/configs"></a>/configs</h4><p>Configuration file templates or default configs.</p>
<h4 id="scripts"><a href="#scripts" class="headerlink" title="/scripts"></a>/scripts</h4><p>Scripts to perform various build, install, analysis, etc. operations.</p>
<h4 id="deployments"><a href="#deployments" class="headerlink" title="/deployments"></a>/deployments</h4><p>IaaS, PaaS, system and container orchestration deployment configurations and templates (docker-compose, kubernetes/helm, mesos, terraform, bosh).</p>
<h4 id="test"><a href="#test" class="headerlink" title="/test"></a>/test</h4><p>Additional external test apps and test data. For example, you can have <code>/test/testdata</code>.</p>
<h3 id="Other-directories"><a href="#Other-directories" class="headerlink" title="Other directories"></a>Other directories</h3><h4 id="docs"><a href="#docs" class="headerlink" title="/docs"></a>/docs</h4><p>Design and user documents (in addition to your godoc generated documentation).</p>
<h4 id="examples"><a href="#examples" class="headerlink" title="/examples"></a>/examples</h4><p>Examples for your applications and/or public libraries.</p>
<h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><p>You can view my complete open source repository.</p>
<p><a href="https://github.com/blackhorseya/todo-app">Todo APP</a></p>
]]></content>
      <tags>
        <tag>howto</tag>
        <tag>golang</tag>
      </tags>
  </entry>
  <entry>
    <title>Installing kubernetes on-premise with kubespray</title>
    <url>/posts/installing-kubernetes-on-premise-with-kubespray/</url>
    <content><![CDATA[<p>可以參考官方提供的<a href="https://kubespray.io/#/docs/comparisons">比較</a></p>
<h2 id="Clone-Kubespray"><a href="#Clone-Kubespray" class="headerlink" title="Clone Kubespray"></a>Clone Kubespray</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/kubernetes-sigs/kubespray.git</span><br></pre></td></tr></table></figure>

<p>you can checkout by tag name</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git checkout v2.14.1</span><br></pre></td></tr></table></figure>

<p>or checkout <code>release</code> branch</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git checkout release-2.14</span><br></pre></td></tr></table></figure>

<h2 id="Install-dependencies"><a href="#Install-dependencies" class="headerlink" title="Install dependencies"></a>Install dependencies</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo pip3 install -r requirements.txt</span><br></pre></td></tr></table></figure>

<h2 id="Building-your-own-inventory"><a href="#Building-your-own-inventory" class="headerlink" title="Building your own inventory"></a>Building your own inventory</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">CLUSTER_NAME=mycluster</span><br><span class="line"></span><br><span class="line"><span class="comment"># copy sample inventory to your cluster</span></span><br><span class="line">cp -rfp inventory/sample inventory/<span class="variable">$&#123;CLUSTER_NAME&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># declare your node ips</span></span><br><span class="line"><span class="built_in">declare</span> -a IPS=(10.10.1.3 10.10.1.4 10.10.1.5)</span><br><span class="line"></span><br><span class="line"><span class="comment"># build your inventory</span></span><br><span class="line">CONFIG_FILE=inventory/<span class="variable">$&#123;CLUSTER_NAME&#125;</span>/hosts.yml python3 contrib/inventory_builder/inventory.py <span class="variable">$&#123;IPS[@]&#125;</span></span><br></pre></td></tr></table></figure>

<p>你可以在 <code>inventory/$&#123;CLUSTER_NAME&#125;/hosts.yml</code> 看到你的 <code>inventory</code></p>
<h2 id="Configure-your-cluster"><a href="#Configure-your-cluster" class="headerlink" title="Configure your cluster"></a>Configure your cluster</h2><p>你可以配置你的 <code>cluster</code> 在 <code>inventory/$&#123;CLUSTER_NAME&#125;/group_vars</code> 裡，詳細內容可以<a href="https://github.com/kubernetes-sigs/kubespray/blob/master/docs/vars.md">參考</a></p>
<h2 id="Starting-custom-deployment"><a href="#Starting-custom-deployment" class="headerlink" title="Starting custom deployment"></a>Starting custom deployment</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ansible-playbook -i inventory/<span class="variable">$&#123;CLUSTER_NAME&#125;</span>/hosts.yml cluster.yml -b --private-key=~/.ssh/private_key</span><br></pre></td></tr></table></figure>

<h3 id="Adding-nodes"><a href="#Adding-nodes" class="headerlink" title="Adding nodes"></a>Adding nodes</h3><ul>
<li>Add the new work nodes to your inventory</li>
<li>Run the <code>ansible-playbook</code> command with <code>scale.yml</code></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ansible-playbook -i inventory/<span class="variable">$&#123;CLUSTER_NAME&#125;</span>/hosts.yml scale.yml -b --private-key=~/.ssh/private_key</span><br></pre></td></tr></table></figure>

<h3 id="Remove-nodes"><a href="#Remove-nodes" class="headerlink" title="Remove nodes"></a>Remove nodes</h3><p>Use <code>--extra-vars &quot;node=node1,node2&quot;</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ansible-playbook -i inventory/<span class="variable">$&#123;CLUSTER_NAME&#125;</span>/hosts.yml remove-node.yml -b \</span><br><span class="line">  --extra-vars <span class="string">&quot;node=node1,node2&quot;</span> \</span><br><span class="line">  --private-key=~/.ssh/private_key</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>kubernetes</tag>
        <tag>kubespray</tag>
      </tags>
  </entry>
  <entry>
    <title>The evolution of container management</title>
    <url>/posts/the-evolution-of-container-management/</url>
    <content><![CDATA[<div class="note primary"><p>本文以 <code>世紀帝國2</code> 中的時代為例，<code>封建時代</code>、<code>城堡時代</code>、<code>帝王時代</code><br>為什麼沒有 <code>黑暗時代</code> 呢？因為會用 <code>Docker</code> 先贏一半</p>
</div>

<h2 id="封建時代"><a href="#封建時代" class="headerlink" title="封建時代"></a>封建時代</h2><p>只使用 <code>Docker</code> 在 instances 中運行服務並且利用 <code>reverse proxy</code> forward 到相應的 instance</p>
<h3 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h3><p>在 instance 上用 <code>Docker</code> 運行 <code>nginx</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d -p 8080:80 --name=test-nginx nginx:alpine</span><br></pre></td></tr></table></figure>

<h3 id="Apache"><a href="#Apache" class="headerlink" title="Apache"></a>Apache</h3><p>在 ingress instance 上運行 <code>Apache</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># rewrite http to https</span><br><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">    ServerName ngx.seancheng.space</span><br><span class="line"></span><br><span class="line">    # Logging</span><br><span class="line">    LogLevel warn</span><br><span class="line">    CustomLog &quot;|/usr/sbin/rotatelogs -l /var/log/httpd/ngx.seancheng.space-access-%Y%m%d.log 604800&quot; combined</span><br><span class="line">    ErrorLog &quot;|/usr/sbin/rotatelogs -l /var/log/httpd/ngx.seancheng.space-error-%Y%m%d.log 604800&quot;</span><br><span class="line"></span><br><span class="line">    RewriteEngine On</span><br><span class="line">    RewriteCond %&#123;HTTPS&#125; off</span><br><span class="line">    RewriteRule (.*) https://%&#123;SERVER_NAME&#125;$1 [R,L]</span><br><span class="line">    RequestHeader set X-Forwarded-Proto &quot;https&quot;</span><br><span class="line">    RequestHeader set X-Forwarded-Port &quot;443&quot;</span><br><span class="line">&lt;/Virtualhost&gt;</span><br><span class="line"></span><br><span class="line"># forward https to nginx&#x27;s instance</span><br><span class="line">&lt;VirtualHost *:443&gt;</span><br><span class="line">    ServerName ngx.seancheng.space</span><br><span class="line"></span><br><span class="line">    # Logging</span><br><span class="line">    LogLevel warn</span><br><span class="line">    CustomLog &quot;|/usr/sbin/rotatelogs -l /var/log/httpd/ngx.seancheng.space-ssl-access-%Y%m%d.log 604800&quot; combined</span><br><span class="line">    ErrorLog &quot;|/usr/sbin/rotatelogs -l /var/log/httpd/ngx.seancheng.space-ssl-error-%Y%m%d.log 604800&quot;</span><br><span class="line"></span><br><span class="line">    # SSL Certification</span><br><span class="line">    ## using cf origin wildcard certificate</span><br><span class="line">    SSLEngine On</span><br><span class="line">    SSLCertificateFile /root/cf/seancheng.space/origin.crt</span><br><span class="line">    SSLCertificateKeyFile /root/cf/seancheng.space/private.key</span><br><span class="line"></span><br><span class="line">    # Headers</span><br><span class="line">    Header always set Strict-Transport-Security &quot;max-age=63072000;includeSubdomains;&quot;</span><br><span class="line">    Header always set X-Frame-Options DENY</span><br><span class="line">    Header set X-Content-Type-Options &quot;nosniff&quot;</span><br><span class="line">    RequestHeader set X-Forwarded-Proto &quot;https&quot;</span><br><span class="line">    RequestHeader set X-Forwarded-Port &quot;443&quot;</span><br><span class="line"></span><br><span class="line">    AllowEncodedSlashes NoDecode</span><br><span class="line">    &lt;IfModule mod_headers.c&gt;</span><br><span class="line">        Header set X-XSS-Protection &quot;1; mode=block&quot;</span><br><span class="line">    &lt;/IfModule&gt;</span><br><span class="line"></span><br><span class="line">    ProxyRequests Off</span><br><span class="line">    &lt;Proxy *&gt;</span><br><span class="line">        Order allow,deny</span><br><span class="line">        Allow from all</span><br><span class="line">    &lt;/Proxy&gt;</span><br><span class="line"></span><br><span class="line">    ProxyPreserveHost On</span><br><span class="line">    ProxyPass / http://192.168.28.240:8080/</span><br><span class="line">    ProxyPassReverse / http://192.168.28.240:8080/</span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure>

<h3 id="Cons"><a href="#Cons" class="headerlink" title="Cons"></a>Cons</h3><ol>
<li>container 不能擴容，因為 8080 port 已被佔用，雖然可以不指定 expose’s port，但是就會變得要用另外的方法知道 expose’s port</li>
<li>reverse-proxy 需要明確知道 service 的 ip 和 port</li>
<li>當服務多的時候，就要各自設定 apache conf，很蠢</li>
</ol>
<h2 id="城堡時代"><a href="#城堡時代" class="headerlink" title="城堡時代"></a>城堡時代</h2><p>使用 <code>Docker swarm</code> 在 instances 上部署服務並透過 <code>Traefik</code> forward 到相應的容器</p>
<h3 id="Docker-swarm"><a href="#Docker-swarm" class="headerlink" title="Docker swarm"></a>Docker swarm</h3><p>使用 <a href="https://docs.docker.com/engine/swarm/">Docker swarm</a> 部署服務</p>
<h4 id="Init-docker-swarm"><a href="#Init-docker-swarm" class="headerlink" title="Init docker swarm"></a>Init docker swarm</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker swarm init</span><br></pre></td></tr></table></figure>

<h4 id="Create-a-network-for-ingress"><a href="#Create-a-network-for-ingress" class="headerlink" title="Create a network for ingress"></a>Create a network for ingress</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker network create -d overlay endpoint</span><br></pre></td></tr></table></figure>

<h4 id="Create-a-nginx-service"><a href="#Create-a-nginx-service" class="headerlink" title="Create a nginx service"></a>Create a nginx service</h4><p>run <code>nginx</code> with <code>docker swarm</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker stack deploy -c stack.yml test-nginx</span><br></pre></td></tr></table></figure>

<h5 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h5><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># stack.yml</span></span><br><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.8&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">app:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">nginx:alpine</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">endpoint</span></span><br><span class="line">    <span class="attr">healthcheck:</span></span><br><span class="line">      <span class="attr">test:</span> [<span class="string">&quot;CMD&quot;</span>, <span class="string">&quot;curl&quot;</span>, <span class="string">&quot;-f&quot;</span>, <span class="string">&quot;http://localhost&quot;</span>]</span><br><span class="line">      <span class="attr">interval:</span> <span class="string">10s</span></span><br><span class="line">      <span class="attr">timeout:</span> <span class="string">10s</span></span><br><span class="line">      <span class="attr">retries:</span> <span class="number">5</span></span><br><span class="line">      <span class="attr">start_period:</span> <span class="string">30s</span></span><br><span class="line">    <span class="attr">deploy:</span></span><br><span class="line">      <span class="attr">update_config:</span></span><br><span class="line">        <span class="attr">parallelism:</span> <span class="number">1</span></span><br><span class="line">        <span class="attr">delay:</span> <span class="string">10s</span></span><br><span class="line">        <span class="attr">failure_action:</span> <span class="string">rollback</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&quot;app=nginx&quot;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&quot;traefik.enable=true&quot;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&quot;traefik.http.routers.test-nginx.rule=Host(`ngx.seancheng.space`)&quot;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&quot;traefik.http.routers.test-nginx.tls=true&quot;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&quot;traefik.http.services.test-nginx.loadbalancer.server.port=80&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">endpoint:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h3 id="Traefik"><a href="#Traefik" class="headerlink" title="Traefik"></a>Traefik</h3><p>run <a href="https://traefik.io/">Traefik</a> with <code>docker swarm</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker stack deploy -c stack.yml traefik</span><br></pre></td></tr></table></figure>

<h4 id="Configuration-1"><a href="#Configuration-1" class="headerlink" title="Configuration"></a>Configuration</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># stack.yml</span></span><br><span class="line"><span class="attr">version:</span> <span class="string">&quot;3&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">app:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">traefik</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">endpoint</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;80:80&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;443:443&quot;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/run/docker.sock:/var/run/docker.sock:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./traefik.yml:/etc/traefik/traefik.yml</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./certs:/certs:ro</span></span><br><span class="line">    <span class="attr">labels:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;app=traefik&quot;</span></span><br><span class="line">    <span class="attr">deploy:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&quot;traefik.enable=true&quot;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&quot;traefik.http.routers.dashboard.rule=Host(`traefik.seancheng.space`) &amp;&amp; (PathPrefix(`/api`) || PathPrefix(`/dashboard`))&quot;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&quot;traefik.http.routers.dashboard.tls=true&quot;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&quot;traefik.http.routers.dashboard.service=api@internal&quot;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&quot;traefik.http.services.api@internal.loadbalancer.server.port=8080&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">whoami:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">containous/whoami</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">endpoint</span></span><br><span class="line">    <span class="attr">deploy:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&quot;traefik.enable=true&quot;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&quot;traefik.http.routers.whoami.service=whoami@docker&quot;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&quot;traefik.http.services.whoami.loadbalancer.server.port=80&quot;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">&quot;traefik.http.routers.whoami.rule=Host(`whoami`)&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">endpoint:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h3 id="Cons-1"><a href="#Cons-1" class="headerlink" title="Cons"></a>Cons</h3><ol>
<li>如果使用單節點的 <code>docker swarm</code> 又會有延伸的問題，instance 死掉或要進行調整還是會造成 service 的 downtime</li>
</ol>
<h2 id="帝王時代"><a href="#帝王時代" class="headerlink" title="帝王時代"></a>帝王時代</h2><p>利用 <code>Kubernetes</code> 達到容器管理，就不專注在 nodes 上了</p>
<p>// todo: kubernetes<br>未完待續</p>
]]></content>
      <tags>
        <tag>kubernetes</tag>
        <tag>docker</tag>
        <tag>docker-swarm</tag>
        <tag>traefik</tag>
        <tag>reverse-proxy</tag>
        <tag>apache</tag>
      </tags>
  </entry>
  <entry>
    <title>What is trunk-based development</title>
    <url>/posts/what-is-trunk-based-development/</url>
    <content><![CDATA[<h2 id="What-is"><a href="#What-is" class="headerlink" title="What is"></a>What is</h2><p>Trunk-based development(TBD) 是一種軟體開發策略，就像是 <code>git-flow</code>。<br>利用主幹開發可以完整的呈現軟體開發的歷程，像是在 master 上重現 bug。</p>
<p><img src="what_is_trunk.jpg" alt="what&#39;s trunk"></p>
<h2 id="Trunk-Based-Development-For-Smaller-Teams"><a href="#Trunk-Based-Development-For-Smaller-Teams" class="headerlink" title="Trunk-Based Development For Smaller Teams"></a>Trunk-Based Development For Smaller Teams</h2><p><img src="trunk1b.png" alt="workflow for smaller teams"></p>
<h2 id="Scaled-Trunk-Based-Development"><a href="#Scaled-Trunk-Based-Development" class="headerlink" title="Scaled Trunk-Based Development"></a>Scaled Trunk-Based Development</h2><p><img src="trunk1c.png" alt="workflow for scale"></p>
<h2 id="Key-Points"><a href="#Key-Points" class="headerlink" title="Key Points"></a>Key Points</h2><p>在這個策略有一些很重要的重點</p>
<h3 id="Developers"><a href="#Developers" class="headerlink" title="Developers"></a>Developers</h3><ul>
<li>一般而言，只能在 master 上 commit</li>
<li>確保每一個 commit 是可以正常運作的</li>
<li>準缺的拆分每個 commit</li>
</ul>
<h3 id="Release"><a href="#Release" class="headerlink" title="Release"></a>Release</h3><ul>
<li>release 時會從 master create a release branch 像是 release-1.1</li>
<li>一旦 release 後就不太會更動，除非是一些 bug fix</li>
<li>release branch 完成它的任務時就可以被砍掉了</li>
<li>所有 bug fix 都應該發生在 master 再使用 <code>cherry-pick</code> 到 release branch</li>
</ul>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>我覺得 TBD 對於 release 是非常友善的，但是很考驗 developers 的能力，像是拆分 commit 並確保每個 commit 是能正常的運行。相較 <code>git-flow</code> 不會出現 merge conflict。</p>
]]></content>
      <tags>
        <tag>software</tag>
        <tag>development</tag>
      </tags>
  </entry>
  <entry>
    <title>How to set up your Mac in an hour</title>
    <url>/posts/how-to-set-up-your-mac-in-an-hour/</url>
    <content><![CDATA[<h2 id="Brew-必要"><a href="#Brew-必要" class="headerlink" title="Brew (必要)"></a>Brew (必要)</h2><p><code>Brew</code> 是個套件管理工具。</p>
<h3 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h3><p>安裝的過程，如果缺少 <code>xcode</code> 會提示安裝</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/bin/ruby -e <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="使用-Homebrew-Bundle"><a href="#使用-Homebrew-Bundle" class="headerlink" title="使用 Homebrew Bundle"></a>使用 Homebrew Bundle</h3><h4 id="Dump"><a href="#Dump" class="headerlink" title="Dump"></a>Dump</h4><p>dump 已經安裝過的套件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew bundle dump --force</span><br></pre></td></tr></table></figure>

<h4 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h4><p>從 <code>Brewfile</code> 安裝套件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew bundle</span><br></pre></td></tr></table></figure>

<h4 id="範例-Brewfile"><a href="#範例-Brewfile" class="headerlink" title="範例 Brewfile"></a>範例 <code>Brewfile</code></h4><p>我常用的一些工具</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tap &quot;homebrew/bundle&quot;</span><br><span class="line">tap &quot;homebrew/cask&quot;</span><br><span class="line">tap &quot;homebrew/cask-fonts&quot;</span><br><span class="line">tap &quot;homebrew/core&quot;</span><br><span class="line">brew &quot;ansible&quot;</span><br><span class="line">brew &quot;antigen&quot;</span><br><span class="line">brew &quot;bat&quot;</span><br><span class="line">brew &quot;go&quot;</span><br><span class="line">brew &quot;helm&quot;</span><br><span class="line">brew &quot;htop&quot;</span><br><span class="line">brew &quot;kubernetes-cli&quot;</span><br><span class="line">brew &quot;kubeless&quot;</span><br><span class="line">brew &quot;mycli&quot;</span><br><span class="line">brew &quot;node&quot;</span><br><span class="line">brew &quot;tinc&quot;</span><br><span class="line">brew &quot;tree&quot;</span><br><span class="line">brew &quot;watch&quot;</span><br><span class="line">brew &quot;wget&quot;</span><br><span class="line">brew &quot;yarn&quot;</span><br><span class="line">brew &quot;zsh&quot;</span><br><span class="line">brew &quot;zsh-completions&quot;</span><br><span class="line">cask &quot;alfred&quot;</span><br><span class="line">cask &quot;appcleaner&quot;</span><br><span class="line">cask &quot;docker&quot;</span><br><span class="line">cask &quot;dotnet-sdk&quot;</span><br><span class="line">cask &quot;font-fira-code&quot;</span><br><span class="line">cask &quot;font-sourcecodepro-nerd-font&quot;</span><br><span class="line">cask &quot;google-chrome&quot;</span><br><span class="line">cask &quot;intellij-idea&quot;</span><br><span class="line">cask &quot;istat-menus&quot;</span><br><span class="line">cask &quot;iterm2&quot;</span><br><span class="line">cask &quot;karabiner-elements&quot;</span><br><span class="line">cask &quot;keka&quot;</span><br><span class="line">cask &quot;pock&quot;</span><br><span class="line">cask &quot;rider&quot;</span><br><span class="line">cask &quot;smartgit&quot;</span><br><span class="line">cask &quot;tuntap&quot;</span><br><span class="line">cask &quot;visual-studio-code&quot;</span><br></pre></td></tr></table></figure>

<h2 id="美化-Terminal"><a href="#美化-Terminal" class="headerlink" title="美化 Terminal"></a>美化 <code>Terminal</code></h2><p>我常用的組合</p>
<ul>
<li>iTerm2: 取代原生的 <code>Terminal</code></li>
<li>zsh: 跟 <code>bash</code> 一樣的東西，有很多擴充套件可以用，參考 <a href="https://github.com/unixorn/awesome-zsh-plugins">awesome-zsh-plugins</a></li>
<li>oh-my-zsh: <code>zsh</code> 的一個框架</li>
<li>antigen: <code>zsh</code> 的擴充套件管理框架</li>
</ul>
<h3 id="安裝必要套件"><a href="#安裝必要套件" class="headerlink" title="安裝必要套件"></a>安裝必要套件</h3><p><code>font-fira-code</code> 可以連字</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew cask install iterm2</span><br><span class="line">brew install zsh antigen</span><br><span class="line">brew tap homebrew/cask-fonts</span><br><span class="line">brew cask install font-fira-code font-sourcecodepro-nerd-font</span><br></pre></td></tr></table></figure>

<p>設定 <code>zsh</code> 為啟動的 shell</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo sh -c <span class="string">&quot;echo <span class="subst">$(which zsh)</span> &gt;&gt; /etc/shells&quot;</span></span><br><span class="line">chsh -s $(<span class="built_in">which</span> zsh)</span><br></pre></td></tr></table></figure>

<h3 id="設定-iTerm2"><a href="#設定-iTerm2" class="headerlink" title="設定 iTerm2"></a>設定 iTerm2</h3><p>iTerm2 的主題是使用 <code>Tomorrow Night Eighties</code>，其他主題可以到這裡找 <a href="https://iterm2colorschemes.com/">Iterm2-color-schemes</a><br>在 iTerm2 中導入個人設定, 打開 <code>Perference</code> -&gt; <code>Profiles</code> -&gt; <code>Other Actions...</code> -&gt; <code>Import JSON Profiles...</code> -&gt; 選擇要導入的設定</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;Ansi 3 Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="number">0.80000000000000004</span>,</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="number">0.40000000000000002</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Tags&quot;</span> : [</span><br><span class="line"></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">&quot;Ansi 12 Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="number">0.59999999999999998</span>,</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="number">0.40000000000000002</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="number">0.80000000000000004</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Ansi 7 Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="number">0.99997437000274658</span>,</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="number">0.99999129772186279</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Draw Powerline Glyphs&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;Bold Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="number">0.80000000000000004</span>,</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="number">0.80000000000000004</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="number">0.80000000000000004</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Ansi 8 Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Ansi 9 Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="number">0.46666666670000001</span>,</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="number">0.94901960780000005</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="number">0.47843137250000001</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Horizontal Spacing&quot;</span> : <span class="number">1</span>,</span><br><span class="line">  <span class="attr">&quot;Rows&quot;</span> : <span class="number">25</span>,</span><br><span class="line">  <span class="attr">&quot;Default Bookmark&quot;</span> : <span class="string">&quot;No&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;Ansi 5 Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="number">0.59999999999999998</span>,</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="number">0.80000000000000004</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="number">0.80000000000000004</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Cursor Guide Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="number">0.70213186740875244</span>,</span><br><span class="line">    <span class="attr">&quot;Color Space&quot;</span> : <span class="string">&quot;sRGB&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;Alpha Component&quot;</span> : <span class="number">0.25</span>,</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="number">0.9268307089805603</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Non-ASCII Anti Aliased&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;Use Bright Bold&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;Ansi 10 Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="number">0.80000000000000004</span>,</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="number">0.59999999999999998</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="number">0.59999999999999998</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Ambiguous Double Width&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;Jobs to Ignore&quot;</span> : [</span><br><span class="line">    <span class="string">&quot;rlogin&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ssh&quot;</span>,</span><br><span class="line">    <span class="string">&quot;slogin&quot;</span>,</span><br><span class="line">    <span class="string">&quot;telnet&quot;</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">&quot;Ansi 15 Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="number">0.99997437000274658</span>,</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="number">0.99999129772186279</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Foreground Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="number">0.80000000000000004</span>,</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="number">0.80000000000000004</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="number">0.80000000000000004</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Working Directory&quot;</span> : <span class="string">&quot;\/Users\/doggy&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;Blinking Cursor&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;Disable Window Resizing&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;Sync Title&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;Prompt Before Closing 2&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;BM Growl&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;Mouse Reporting&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;Command&quot;</span> : <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;Description&quot;</span> : <span class="string">&quot;Default&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;Screen&quot;</span> : <span class="number">-1</span>,</span><br><span class="line">  <span class="attr">&quot;Selection Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="number">0.31764705882352939</span>,</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="number">0.31764705882352939</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="number">0.31764705882352939</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Columns&quot;</span> : <span class="number">80</span>,</span><br><span class="line">  <span class="attr">&quot;Idle Code&quot;</span> : <span class="number">0</span>,</span><br><span class="line">  <span class="attr">&quot;Ansi 13 Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="number">0.59999999999999998</span>,</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="number">0.80000000000000004</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="number">0.80000000000000004</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Custom Command&quot;</span> : <span class="string">&quot;No&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;ASCII Anti Aliased&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;Non Ascii Font&quot;</span> : <span class="string">&quot;Monaco 12&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;Vertical Spacing&quot;</span> : <span class="number">1</span>,</span><br><span class="line">  <span class="attr">&quot;Use Bold Font&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;Option Key Sends&quot;</span> : <span class="number">0</span>,</span><br><span class="line">  <span class="attr">&quot;Selected Text Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="number">0.80000000000000004</span>,</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="number">0.80000000000000004</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="number">0.80000000000000004</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Background Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="number">0.1764705882352941</span>,</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="number">0.1764705882352941</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="number">0.1764705882352941</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Character Encoding&quot;</span> : <span class="number">4</span>,</span><br><span class="line">  <span class="attr">&quot;Ansi 11 Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="number">0.80000000000000004</span>,</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="number">0.40000000000000002</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Thin Strokes&quot;</span> : <span class="number">1</span>,</span><br><span class="line">  <span class="attr">&quot;Use Italic Font&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;Unlimited Scrollback&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;Keyboard Map&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;0xf728-0x80000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;d&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf702-0x280000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;b&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf70d-0x20000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[21;2~&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0x7f-0x80000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">11</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;0x1b 0x7f&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf708-0x20000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[15;2~&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0x33-0x40000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">11</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;0x1b&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf703-0x260000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[1;6C&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf729-0x20000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[1;2H&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf702-0x260000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[1;6D&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0x38-0x40000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">11</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;0x7f&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf72b-0x40000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[1;5F&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf70c-0x20000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[20;2~&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf701-0x260000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[1;6B&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0x32-0x40000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">11</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;0x00&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf707-0x20000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[1;2S&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf703-0x240000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[1;5C&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf700-0x260000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[1;6A&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf702-0x240000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[1;5D&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf703-0x300000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">11</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;0x5&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0x37-0x40000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">11</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;0x1f&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0x3-0x200000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">11</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;0xd&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf701-0x240000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[1;5B&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf702-0x300000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">11</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;0x1&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf703-0x220000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[1;2C&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf739-0x0&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">13</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf70b-0x20000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[19;2~&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf728-0x0&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">11</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;0x4&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf706-0x20000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[1;2R&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf700-0x240000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[1;5A&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf702-0x220000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[1;2D&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0x36-0x40000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">11</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;0x1e&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf70f-0x20000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[24;2~&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf701-0x220000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[1;2B&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf70a-0x20000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[18;2~&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf729-0x40000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[1;5H&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf72b-0x20000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[1;2F&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf700-0x220000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[1;2A&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0x30-0x200000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">12</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;0&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf705-0x20000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[1;2Q&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0x31-0x200000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">12</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;1&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0x33-0x200000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">12</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;3&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0x35-0x40000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">11</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;0x1d&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0x34-0x200000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">12</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;4&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0x32-0x200000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">12</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;2&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0x35-0x200000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">12</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;5&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0x36-0x200000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">12</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;6&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0x37-0x200000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">12</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;7&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0x2d-0x40000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">11</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;0x1f&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0x38-0x200000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">12</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;8&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0x2a-0x200000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">12</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;*&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0x39-0x200000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">12</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;9&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0x2b-0x200000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">12</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;+&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf70e-0x20000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[23;2~&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0x2e-0x200000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">12</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;.&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0x2d-0x200000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">12</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;-&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf709-0x20000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[17;2~&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0x7f-0x100000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">11</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;0x15&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0x2f-0x200000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">12</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;\/&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf704-0x20000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;[1;2P&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0x34-0x40000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">11</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;0x1c&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;0xf703-0x280000&quot;</span> : &#123;</span><br><span class="line">      <span class="attr">&quot;Action&quot;</span> : <span class="number">10</span>,</span><br><span class="line">      <span class="attr">&quot;Text&quot;</span> : <span class="string">&quot;f&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Window Type&quot;</span> : <span class="number">0</span>,</span><br><span class="line">  <span class="attr">&quot;Cursor Type&quot;</span> : <span class="number">2</span>,</span><br><span class="line">  <span class="attr">&quot;Background Image Location&quot;</span> : <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;Blur&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;Badge Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;Color Space&quot;</span> : <span class="string">&quot;sRGB&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;Alpha Component&quot;</span> : <span class="number">0.5</span>,</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="number">0.1491314172744751</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Scrollback Lines&quot;</span> : <span class="number">1000</span>,</span><br><span class="line">  <span class="attr">&quot;Send Code When Idle&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;Close Sessions On End&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;Terminal Type&quot;</span> : <span class="string">&quot;xterm-256color&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;Visual Bell&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;Flashing Bell&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;Silence Bell&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;Ansi 14 Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="number">0.80000000000000004</span>,</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="number">0.40000000000000002</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="number">0.80000000000000004</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;ASCII Ligatures&quot;</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">&quot;Name&quot;</span> : <span class="string">&quot;Default&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;Cursor Text Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="number">0.1764705882</span>,</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="number">0.1764705882</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="number">0.1764705882</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Shortcut&quot;</span> : <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;Cursor Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="number">0.80000000000000004</span>,</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="number">0.80000000000000004</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="number">0.80000000000000004</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Ansi 0 Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Guid&quot;</span> : <span class="string">&quot;DA94C0E2-635D-4C95-B3D4-4FA2BE019BCE&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;Ansi 1 Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="number">0.46666666666666667</span>,</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="number">0.94901960784313721</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="number">0.47843137254901957</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Link Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;Color Space&quot;</span> : <span class="string">&quot;sRGB&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="number">0.73423302173614502</span>,</span><br><span class="line">    <span class="attr">&quot;Alpha Component&quot;</span> : <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="number">0.35916060209274292</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Transparency&quot;</span> : <span class="number">0</span>,</span><br><span class="line">  <span class="attr">&quot;Ansi 2 Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="number">0.80000000000000004</span>,</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="number">0.59999999999999998</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="number">0.59999999999999998</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Use Non-ASCII Font&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">&quot;Ansi 6 Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="number">0.80000000000000004</span>,</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="number">0.40000000000000002</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="number">0.80000000000000004</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Normal Font&quot;</span> : <span class="string">&quot;SauceCodeProNerdFontComplete-Medium 14&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;Custom Directory&quot;</span> : <span class="string">&quot;No&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;Ansi 4 Color&quot;</span> : &#123;</span><br><span class="line">    <span class="attr">&quot;Green Component&quot;</span> : <span class="number">0.59999999999999998</span>,</span><br><span class="line">    <span class="attr">&quot;Red Component&quot;</span> : <span class="number">0.40000000000000002</span>,</span><br><span class="line">    <span class="attr">&quot;Blue Component&quot;</span> : <span class="number">0.80000000000000004</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;Right Option Key Sends&quot;</span> : <span class="number">0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="設定-zsh"><a href="#設定-zsh" class="headerlink" title="設定 zsh"></a>設定 zsh</h3><p><code>zsh</code> 的設定會在根目錄中的 <code>.zshrc</code>。<br>這裡使用的主題是 <a href="https://github.com/romkatv/powerlevel10k">powerlevel10k</a>, 並且我有把 <code>env</code> 和 <code>aliases</code> 的設定拆開來</p>
<div class="tabs" id="zsh-settings"><ul class="nav-tabs"><li class="tab active"><a href="#zsh-settings-1">.zshrc</a></li><li class="tab"><a href="#zsh-settings-2">.zsh_aliases</a></li><li class="tab"><a href="#zsh-settings-3">.zsh_env</a></li></ul><div class="tab-content"><div class="tab-pane active" id="zsh-settings-1"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># If you come from bash you might have to change your $PATH.</span></span><br><span class="line"><span class="comment"># export PATH=$HOME/bin:/usr/local/bin:$PATH</span></span><br><span class="line"></span><br><span class="line">fpath=(~/.zsh/completion <span class="variable">$fpath</span>)</span><br><span class="line"><span class="built_in">autoload</span> -Uz compinit &amp;&amp; compinit -i</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> &lt;(kubectl completion zsh)</span><br><span class="line"></span><br><span class="line"><span class="comment"># import antigen</span></span><br><span class="line"><span class="built_in">source</span> /usr/<span class="built_in">local</span>/share/antigen/antigen.zsh</span><br><span class="line"></span><br><span class="line"><span class="comment"># Load the oh-my-zsh&#x27;s library.</span></span><br><span class="line">antigen use oh-my-zsh</span><br><span class="line"></span><br><span class="line"><span class="comment"># Load theme</span></span><br><span class="line">antigen theme romkatv/powerlevel10k</span><br><span class="line">ZSH_THEME=<span class="string">&quot;powerlevel10k/powerlevel10k&quot;</span></span><br><span class="line">POWERLEVEL9K_MODE=<span class="string">&quot;nerdfont-complete&quot;</span></span><br><span class="line">POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(ssh context dir dir_writable newline os_icon vcs)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Bundles from the default repo (robbyrussell&#x27;s oh-my-zsh).</span></span><br><span class="line">antigen bundle osx</span><br><span class="line">antigen bundle brew</span><br><span class="line">antigen bundle brew-cask</span><br><span class="line">antigen bundle common-aliases</span><br><span class="line">antigen bundle colored-man</span><br><span class="line">antigen bundle extract</span><br><span class="line">antigen bundle git</span><br><span class="line">antigen bundle gitfast</span><br><span class="line">antigen bundle git-extras</span><br><span class="line">antigen bundle safe-paste</span><br><span class="line">antigen bundle docker</span><br><span class="line">antigen bundle docker-compose</span><br><span class="line">antigen bundle rsync</span><br><span class="line">antigen bundle golang</span><br><span class="line">antigen bundle terraform</span><br><span class="line">antigen bundle kubectl</span><br><span class="line"></span><br><span class="line">antigen bundle ssh-agent</span><br><span class="line">antigen bundle zsh-users/zsh-autosuggestions</span><br><span class="line">antigen bundle zsh-users/zsh-syntax-highlighting</span><br><span class="line">antigen bundle zsh-users/zsh-completions</span><br><span class="line">antigen bundle unixorn/autoupdate-antigen.zshplugin</span><br><span class="line">antigen bundle zsh-users/zsh-history-substring-search</span><br><span class="line"></span><br><span class="line"><span class="comment"># Tell antigen that you&#x27;re done.</span></span><br><span class="line">antigen apply</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set list of themes to pick from when loading at random</span></span><br><span class="line"><span class="comment"># Setting this variable when ZSH_THEME=random will cause zsh to load</span></span><br><span class="line"><span class="comment"># a theme from this variable instead of looking in ~/.oh-my-zsh/themes/</span></span><br><span class="line"><span class="comment"># If set to an empty array, this variable will have no effect.</span></span><br><span class="line"><span class="comment"># ZSH_THEME_RANDOM_CANDIDATES=( &quot;robbyrussell&quot; &quot;agnoster&quot; )</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line to use case-sensitive completion.</span></span><br><span class="line"><span class="comment"># CASE_SENSITIVE=&quot;true&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line to use hyphen-insensitive completion.</span></span><br><span class="line"><span class="comment"># Case-sensitive completion must be off. _ and - will be interchangeable.</span></span><br><span class="line"><span class="comment"># HYPHEN_INSENSITIVE=&quot;true&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line to disable bi-weekly auto-update checks.</span></span><br><span class="line"><span class="comment"># DISABLE_AUTO_UPDATE=&quot;true&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line to automatically update without prompting.</span></span><br><span class="line"><span class="comment"># DISABLE_UPDATE_PROMPT=&quot;true&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line to change how often to auto-update (in days).</span></span><br><span class="line"><span class="comment"># export UPDATE_ZSH_DAYS=13</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line if pasting URLs and other text is messed up.</span></span><br><span class="line"><span class="comment"># DISABLE_MAGIC_FUNCTIONS=true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line to disable colors in ls.</span></span><br><span class="line"><span class="comment"># DISABLE_LS_COLORS=&quot;true&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line to disable auto-setting terminal title.</span></span><br><span class="line"><span class="comment"># DISABLE_AUTO_TITLE=&quot;true&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line to enable command auto-correction.</span></span><br><span class="line"><span class="comment"># ENABLE_CORRECTION=&quot;true&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line to display red dots whilst waiting for completion.</span></span><br><span class="line"><span class="comment"># COMPLETION_WAITING_DOTS=&quot;true&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line if you want to disable marking untracked files</span></span><br><span class="line"><span class="comment"># under VCS as dirty. This makes repository status check for large repositories</span></span><br><span class="line"><span class="comment"># much, much faster.</span></span><br><span class="line"><span class="comment"># DISABLE_UNTRACKED_FILES_DIRTY=&quot;true</span></span><br><span class="line"><span class="comment"># Uncomment the following line if you want to change the command execution time</span></span><br><span class="line"><span class="comment"># stamp shown in the history command output.</span></span><br><span class="line"><span class="comment"># You can set one of the optional three formats:</span></span><br><span class="line"><span class="comment"># &quot;mm/dd/yyyy&quot;|&quot;dd.mm.yyyy&quot;|&quot;yyyy-mm-dd&quot;</span></span><br><span class="line"><span class="comment"># or set a custom format using the strftime function format specifications,</span></span><br><span class="line"><span class="comment"># see &#x27;man strftime&#x27; for details.</span></span><br><span class="line"><span class="comment"># HIST_STAMPS=&quot;mm/dd/yyyy&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Would you like to use another custom folder than $ZSH/custom?</span></span><br><span class="line"><span class="comment"># ZSH_CUSTOM=/path/to/new-custom-folder</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Which plugins would you like to load?</span></span><br><span class="line"><span class="comment"># Standard plugins can be found in ~/.oh-my-zsh/plugins/*</span></span><br><span class="line"><span class="comment"># Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/</span></span><br><span class="line"><span class="comment"># Example format: plugins=(rails git textmate ruby lighthouse)</span></span><br><span class="line"><span class="comment"># Add wisely, as too many plugins slow down shell startup.</span></span><br><span class="line"><span class="comment"># plugins=(git zsh-syntax-highlighting zsh-autosuggestions docker docker-compose brew rsync go terraform)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># User configuration</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># export MANPATH=&quot;/usr/local/man:$MANPATH&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># You may need to manually set your language environment</span></span><br><span class="line"><span class="comment"># export LANG=en_US.UTF-8</span></span><br><span class="line">[ -f ~/.zsh_env ] &amp;&amp; <span class="built_in">source</span> ~/.zsh_env</span><br><span class="line">[ -f ~/.zsh_aliases ] &amp;&amp; <span class="built_in">source</span> ~/.zsh_aliases</span><br><span class="line"></span><br><span class="line"><span class="comment"># Preferred editor for local and remote sessions</span></span><br><span class="line"><span class="comment"># if [[ -n $SSH_CONNECTION ]]; then</span></span><br><span class="line"><span class="comment">#   export EDITOR=&#x27;vim&#x27;</span></span><br><span class="line"><span class="comment"># else</span></span><br><span class="line"><span class="comment">#   export EDITOR=&#x27;mvim&#x27;</span></span><br><span class="line"><span class="comment"># fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Compilation flags</span></span><br><span class="line"><span class="comment"># export ARCHFLAGS=&quot;-arch x86_64&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set personal aliases, overriding those provided by oh-my-zsh libs,</span></span><br><span class="line"><span class="comment"># plugins, and themes. Aliases can be placed here, though oh-my-zsh</span></span><br><span class="line"><span class="comment"># users are encouraged to define aliases within the ZSH_CUSTOM folder.</span></span><br><span class="line"><span class="comment"># For a full list of active aliases, run `alias`.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Example aliases</span></span><br><span class="line"><span class="comment"># alias zshconfig=&quot;mate ~/.zshrc&quot;</span></span><br><span class="line"><span class="comment"># alias ohmyzsh=&quot;mate ~/.oh-my-zsh&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ignore ctrl+d close session</span></span><br><span class="line"><span class="built_in">set</span> -o ignoreeof</span><br><span class="line"><span class="comment"># export IGNOREEOF=10</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># zsh parameter completion for the dotnet CLI</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_dotnet_zsh_complete</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">local</span> completions=(<span class="string">&quot;<span class="subst">$(dotnet complete <span class="string">&quot;<span class="variable">$words</span>&quot;</span>)</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">  reply=( <span class="string">&quot;<span class="variable">$&#123;(ps:\n:)completions&#125;</span>&quot;</span> )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">compctl</span> -K _dotnet_zsh_complete dotnet</span><br><span class="line"></span><br><span class="line"><span class="built_in">bindkey</span> <span class="string">&#x27;^[[A&#x27;</span> history-substring-search-up</span><br><span class="line"><span class="built_in">bindkey</span> <span class="string">&#x27;^[[B&#x27;</span> history-substring-search-down</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="zsh-settings-2"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># tool aliases</span></span><br><span class="line"><span class="built_in">alias</span> cat=bat</span><br><span class="line"><span class="built_in">alias</span> nano=vim</span><br><span class="line"></span><br><span class="line"><span class="comment"># quick open rc</span></span><br><span class="line"><span class="built_in">alias</span> vimrc=<span class="string">&#x27;$&#123;=EDITOR&#125; ~/.vimrc&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> myclirc=<span class="string">&#x27;$&#123;=EDITOR&#125; ~/.myclirc&#x27;</span></span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="zsh-settings-3"><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Path</span></span><br><span class="line"><span class="built_in">export</span> PATH=/usr/<span class="built_in">local</span>/sbin:<span class="variable">$PATH</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Go</span></span><br><span class="line"><span class="built_in">export</span> GOPATH=~/go</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$GOROOT</span>/bin:<span class="variable">$GOPATH</span>/bin</span><br><span class="line"><span class="comment">#export GO111MODULE=on</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Etcd</span></span><br><span class="line"><span class="built_in">export</span> ETCDCTL_API=3</span><br><span class="line"></span><br><span class="line"><span class="comment"># Editor</span></span><br><span class="line"><span class="built_in">export</span> EDITOR=vim</span><br><span class="line"></span><br><span class="line"><span class="comment"># Python</span></span><br><span class="line"><span class="built_in">export</span> PATH=/usr/<span class="built_in">local</span>/opt/python/libexec/bin:<span class="variable">$PATH</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Latex</span></span><br><span class="line"><span class="built_in">export</span> PATH=/Library/TeX/texbin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure></div></div></div>

<h2 id="常用工具"><a href="#常用工具" class="headerlink" title="常用工具"></a>常用工具</h2><h3 id="套件管理工具"><a href="#套件管理工具" class="headerlink" title="套件管理工具"></a>套件管理工具</h3><ul>
<li><a href="https://brew.sh/index_zh-tw">Brew</a>: macOS 缺少套件的管理工具</li>
</ul>
<h3 id="SDKs"><a href="#SDKs" class="headerlink" title="SDKs"></a>SDKs</h3><ul>
<li><a href="https://github.com/AdoptOpenJDK/homebrew-openjdk">OpenJDK</a>: java sdk</li>
<li><a href="https://github.com/golang">Go</a>: golang</li>
</ul>
<h3 id="IDEs"><a href="#IDEs" class="headerlink" title="IDEs"></a>IDEs</h3><ul>
<li><a href="https://www.jetbrains.com/idea/">IntelliJ</a></li>
<li><a href="https://www.jetbrains.com/rider/">Rider</a>: 方便寫 dotnet core</li>
<li><a href="https://code.visualstudio.com/">Visual Studio Code</a></li>
<li><a href="https://www.syntevo.com/smartgit/">SmartGit</a></li>
</ul>
<h3 id="生產力工具"><a href="#生產力工具" class="headerlink" title="生產力工具"></a>生產力工具</h3><ul>
<li><a href="https://www.mycli.net/">mycli</a>: 好用版的 mysql cli</li>
<li><a href="https://pqrs.org/osx/karabiner/">karabiner</a>: 自定義鍵盤快捷鍵、按鍵、巨集</li>
<li><a href="https://bjango.com/mac/istatmenus/">istat</a>: 在 menu bar 顯示各式各樣的資訊</li>
<li><a href="https://www.alfredapp.com/">alfred</a>: 強化版 Spotlight</li>
<li><a href="https://www.latex-project.org/">Latex</a>: 寫文件用的</li>
</ul>
<h3 id="通用工具"><a href="#通用工具" class="headerlink" title="通用工具"></a>通用工具</h3><ul>
<li><a href="https://www.keka.io/zh-tw/">Keka</a>: 解壓縮工具</li>
<li><a href="https://freemacsoft.net/appcleaner/">AppCleaner</a>: 刪東西工具</li>
</ul>
<h3 id="字型"><a href="#字型" class="headerlink" title="字型"></a>字型</h3><ul>
<li><a href="https://github.com/tonsky/FiraCode/releases">FiraCode</a>: 可以連字</li>
<li><a href="https://github.com/ryanoasis/nerd-fonts/blob/master/patched-fonts/SourceCodePro/Regular/complete/Sauce%20Code%20Pro%20Nerd%20Font%20Complete%20Mono%20Windows%20Compatible.ttf">Sauce Code Pro Nerd Font Complete</a>: source code pro nerd font</li>
</ul>
]]></content>
      <tags>
        <tag>mac</tag>
      </tags>
  </entry>
  <entry>
    <title>How to use Helm 3</title>
    <url>/posts/how-to-use-helm-3/</url>
    <content><![CDATA[<div class="note primary"><p>Helm 2 已經標記為 Legacy，也不推薦使用，所以本篇皆以 Helm 3 為例</p>
</div>

<h2 id="Installing-Helm"><a href="#Installing-Helm" class="headerlink" title="Installing Helm"></a>Installing Helm</h2><h3 id="On-Mac"><a href="#On-Mac" class="headerlink" title="On Mac"></a>On Mac</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install helm</span><br></pre></td></tr></table></figure>

<h3 id="Using-docker-compose"><a href="#Using-docker-compose" class="headerlink" title="Using docker-compose"></a>Using docker-compose</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="built_in">alias</span> helm=<span class="string">&#x27;docker run -e KUBECONFIG=&quot;/root/.kube/config:/root/.kube/some-other-context.yaml&quot; -ti --rm -v $(pwd):/apps -v ~/.kube:/root/.kube -v ~/.helm:/root/.helm alpine/helm&#x27;</span> &gt;&gt; ~/.bashrc</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure>

<h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><h3 id="Add-repo"><a href="#Add-repo" class="headerlink" title="Add repo"></a>Add repo</h3><p><code>stable</code> helm charts 已經有明確的<a href="https://github.com/helm/charts#deprecation-timeline">棄用時間</a>，所以儘量不要使用吧</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">helm repo add stable https://kubernetes-charts.storage.googleapis.com/</span><br><span class="line"></span><br><span class="line">helm repo update</span><br></pre></td></tr></table></figure>

<h3 id="Optional-Completion"><a href="#Optional-Completion" class="headerlink" title="(Optional) Completion"></a>(Optional) Completion</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">helm completion zsh &gt; ~/.zsh/completion/_helm</span><br></pre></td></tr></table></figure>

<h2 id="How-to-use"><a href="#How-to-use" class="headerlink" title="How to use"></a>How to use</h2><p><code>Helm 3</code> 的 command 特地做得跟 <code>kubectl</code> 很像，像是 <code>--kubeconfig</code> 和 <code>--kube-context</code>，所以會 <code>kubectl</code> 應該很好上手</p>
<h3 id="Search-repo"><a href="#Search-repo" class="headerlink" title="Search repo"></a>Search repo</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">helm search repo nginx</span><br></pre></td></tr></table></figure>

<h3 id="Show-chart-values"><a href="#Show-chart-values" class="headerlink" title="Show chart values"></a>Show chart values</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">helm show values bitnami/nginx</span><br><span class="line"><span class="comment"># or save values.yaml</span></span><br><span class="line">helm show values bitnami/nginx &gt; values.yaml</span><br></pre></td></tr></table></figure>

<h3 id="List-installed-chart"><a href="#List-installed-chart" class="headerlink" title="List installed chart"></a>List installed chart</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">helm list</span><br><span class="line"><span class="comment"># or all namespaces</span></span><br><span class="line">helm list -A</span><br></pre></td></tr></table></figure>

<h3 id="Install-and-upgrade-chart"><a href="#Install-and-upgrade-chart" class="headerlink" title="Install and upgrade chart"></a>Install and upgrade chart</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">helm --namespace=<span class="variable">$&#123;NS&#125;</span> install <span class="variable">$&#123;NAME&#125;</span> bitnami/nginx -f values.yaml</span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">helm --namespace=<span class="variable">$&#123;NS&#125;</span> upgrade --install <span class="variable">$&#123;NAME&#125;</span> bitnami/nginx -f values.yaml</span><br><span class="line"><span class="comment"># or with variable</span></span><br><span class="line">helm --namespace=<span class="variable">$&#123;NS&#125;</span> upgrade --install <span class="variable">$&#123;NAME&#125;</span> bitnami/nginx --<span class="built_in">set</span> <span class="string">&quot;ingress.enabled=true&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="Uninstall-chart"><a href="#Uninstall-chart" class="headerlink" title="Uninstall chart"></a>Uninstall chart</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># uninstall alias uninstall, del, delete, un</span></span><br><span class="line">helm --namespace=<span class="variable">$&#123;NS&#125;</span> uninstall <span class="variable">$&#123;NAME&#125;</span></span><br></pre></td></tr></table></figure>

<h2 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h2><p>以 <code>bitnami/nginx</code> 為例</p>
<ol>
<li><p>using <code>helm show values bitnami/nginx &gt; values.yaml</code> to download <code>values.yaml</code> </p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">## Global Docker image parameters</span></span><br><span class="line"><span class="comment">## Please, note that this will override the image parameters, including dependencies, configured to use the global value</span></span><br><span class="line"><span class="comment">## Current available global Docker image parameters: imageRegistry and imagePullSecrets</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="comment"># global:</span></span><br><span class="line"><span class="comment">#   imageRegistry: myRegistryName</span></span><br><span class="line"><span class="comment">#   imagePullSecrets:</span></span><br><span class="line"><span class="comment">#     - myRegistryKeySecretName</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Bitnami NGINX image version</span></span><br><span class="line"><span class="comment">## ref: https://hub.docker.com/r/bitnami/nginx/tags/</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">image:</span></span><br><span class="line">  <span class="attr">registry:</span> <span class="string">docker.io</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">bitnami/nginx</span></span><br><span class="line">  <span class="attr">tag:</span> <span class="number">1.19</span><span class="number">.3</span><span class="string">-debian-10-r7</span></span><br><span class="line">  <span class="comment">## Specify a imagePullPolicy</span></span><br><span class="line">  <span class="comment">## Defaults to &#x27;Always&#x27; if image tag is &#x27;latest&#x27;, else set to &#x27;IfNotPresent&#x27;</span></span><br><span class="line">  <span class="comment">## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">pullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">  <span class="comment">## Optionally specify an array of imagePullSecrets.</span></span><br><span class="line">  <span class="comment">## Secrets must be manually created in the namespace.</span></span><br><span class="line">  <span class="comment">## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/</span></span><br><span class="line">  <span class="comment">## E.g.:</span></span><br><span class="line">  <span class="comment">## pullSecrets:</span></span><br><span class="line">  <span class="comment">##   - myRegistryKeySecretName</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">pullSecrets:</span> []</span><br><span class="line">  <span class="comment">## Set to true if you would like to see extra information on logs</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">debug:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## String to partially override nginx.fullname template (will maintain the release name)</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="comment"># nameOverride:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## String to fully override nginx.fullname template</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="comment"># fullnameOverride:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Kubernetes Cluster Domain</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">clusterDomain:</span> <span class="string">cluster.local</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Extra objects to deploy (value evaluated as a template)</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">extraDeploy:</span> []</span><br><span class="line"></span><br><span class="line"><span class="comment">## Add labels to all the deployed resources</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">commonLabels:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">## Add annotations to all the deployed resources</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">commonAnnotations:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">## Command and args for running the container (set to default if not set). Use array form</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="comment"># command:</span></span><br><span class="line"><span class="comment"># args:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Additional environment variables to set</span></span><br><span class="line"><span class="comment">## E.g:</span></span><br><span class="line"><span class="comment">## extraEnvVars:</span></span><br><span class="line"><span class="comment">##   - name: FOO</span></span><br><span class="line"><span class="comment">##     value: BAR</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">extraEnvVars:</span> []</span><br><span class="line"></span><br><span class="line"><span class="comment">## ConfigMap with extra environment variables</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="comment"># extraEnvVarsCM:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Secret with extra environment variables</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="comment"># extraEnvVarsSecret:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Get the server static content from a git repository</span></span><br><span class="line"><span class="comment">## <span class="doctag">NOTE:</span> This will override staticSiteConfigmap and staticSitePVC</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">cloneStaticSiteFromGit:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment">## Bitnami Git image version</span></span><br><span class="line">  <span class="comment">## ref: https://hub.docker.com/r/bitnami/git/tags/</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">image:</span></span><br><span class="line">    <span class="attr">registry:</span> <span class="string">docker.io</span></span><br><span class="line">    <span class="attr">repository:</span> <span class="string">bitnami/git</span></span><br><span class="line">    <span class="attr">tag:</span> <span class="number">2.28</span><span class="number">.0</span><span class="string">-debian-10-r64</span></span><br><span class="line">    <span class="comment">## Specify a imagePullPolicy</span></span><br><span class="line">    <span class="comment">## Defaults to &#x27;Always&#x27; if image tag is &#x27;latest&#x27;, else set to &#x27;IfNotPresent&#x27;</span></span><br><span class="line">    <span class="comment">## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images</span></span><br><span class="line">    <span class="comment">##</span></span><br><span class="line">    <span class="attr">pullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">    <span class="comment">## Optionally specify an array of imagePullSecrets.</span></span><br><span class="line">    <span class="comment">## Secrets must be manually created in the namespace.</span></span><br><span class="line">    <span class="comment">## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/</span></span><br><span class="line">    <span class="comment">##</span></span><br><span class="line">    <span class="comment"># pullSecrets:</span></span><br><span class="line">    <span class="comment">#   - myRegistryKeySecretName</span></span><br><span class="line">  <span class="comment">## Repository to clone static content from</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="comment"># repository:</span></span><br><span class="line">  <span class="comment">## Branch inside the git repository</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="comment"># branch:</span></span><br><span class="line">  <span class="comment">## Interval for sidecar container pull from the repository</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">interval:</span> <span class="number">60</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Custom server block to be added to NGINX configuration</span></span><br><span class="line"><span class="comment">## PHP-FPM example server block:</span></span><br><span class="line"><span class="comment">## serverBlock: |-</span></span><br><span class="line"><span class="comment">##   server &#123;</span></span><br><span class="line"><span class="comment">##     listen 0.0.0.0:8080;</span></span><br><span class="line"><span class="comment">##     root /app;</span></span><br><span class="line"><span class="comment">##     location / &#123;</span></span><br><span class="line"><span class="comment">##       index index.html index.php;</span></span><br><span class="line"><span class="comment">##     &#125;</span></span><br><span class="line"><span class="comment">##     location ~ \.php$ &#123;</span></span><br><span class="line"><span class="comment">##       fastcgi_pass phpfpm-server:9000;</span></span><br><span class="line"><span class="comment">##       fastcgi_index index.php;</span></span><br><span class="line"><span class="comment">##       include fastcgi.conf;</span></span><br><span class="line"><span class="comment">##     &#125;</span></span><br><span class="line"><span class="comment">##   &#125;</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="comment"># serverBlock:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## ConfigMap with custom server block to be added to NGINX configuration</span></span><br><span class="line"><span class="comment">## <span class="doctag">NOTE:</span> This will override serverBlock</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="comment"># existingServerBlockConfigmap:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Name of existing ConfigMap with the server static site content</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="comment"># staticSiteConfigmap</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Name of existing PVC with the server static site content</span></span><br><span class="line"><span class="comment">## <span class="doctag">NOTE:</span> This will override staticSiteConfigmap</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="comment"># staticSitePVC</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Number of replicas to deploy</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">replicaCount:</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Pod extra labels</span></span><br><span class="line"><span class="comment">## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">podLabels:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">## Pod annotations</span></span><br><span class="line"><span class="comment">## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">podAnnotations:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">## Pod affinity preset</span></span><br><span class="line"><span class="comment">## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity</span></span><br><span class="line"><span class="comment">## Allowed values: soft, hard</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">podAffinityPreset:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Pod anti-affinity preset</span></span><br><span class="line"><span class="comment">## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity</span></span><br><span class="line"><span class="comment">## Allowed values: soft, hard</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">podAntiAffinityPreset:</span> <span class="string">soft</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Node affinity preset</span></span><br><span class="line"><span class="comment">## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity</span></span><br><span class="line"><span class="comment">## Allowed values: soft, hard</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">nodeAffinityPreset:</span></span><br><span class="line">  <span class="comment">## Node affinity type</span></span><br><span class="line">  <span class="comment">## Allowed values: soft, hard</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="comment">## Node label key to match</span></span><br><span class="line">  <span class="comment">## E.g.</span></span><br><span class="line">  <span class="comment">## key: &quot;kubernetes.io/e2e-az-name&quot;</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">key:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="comment">## Node label values to match</span></span><br><span class="line">  <span class="comment">## E.g.</span></span><br><span class="line">  <span class="comment">## values:</span></span><br><span class="line">  <span class="comment">##   - e2e-az1</span></span><br><span class="line">  <span class="comment">##   - e2e-az2</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">values:</span> []</span><br><span class="line"></span><br><span class="line"><span class="comment">## Affinity for pod assignment</span></span><br><span class="line"><span class="comment">## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity</span></span><br><span class="line"><span class="comment">## <span class="doctag">Note:</span> podAffinityPreset, podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it&#x27;s set</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">affinity:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">## Node labels for pod assignment. Evaluated as a template.</span></span><br><span class="line"><span class="comment">## Ref: https://kubernetes.io/docs/user-guide/node-selection/</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">nodeSelector:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">## Tolerations for pod assignment. Evaluated as a template.</span></span><br><span class="line"><span class="comment">## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">tolerations:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">## NGINX pods&#x27; Security Context.</span></span><br><span class="line"><span class="comment">## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">podSecurityContext:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">runAsUser:</span> <span class="number">1001</span></span><br><span class="line">  <span class="attr">runAsNonRoot:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment">## sysctl settings</span></span><br><span class="line">  <span class="comment">## Example:</span></span><br><span class="line">  <span class="comment">## sysctls:</span></span><br><span class="line">  <span class="comment">## - name: net.core.somaxconn</span></span><br><span class="line">  <span class="comment">##   value: &quot;10000&quot;</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">sysctls:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">## NGINX Core containers&#x27; Security Context (only main container).</span></span><br><span class="line"><span class="comment">## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">containerSecurityContext:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">fsGroup:</span> <span class="number">1001</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Configures the ports NGINX listens on</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">containerPorts:</span></span><br><span class="line">  <span class="attr">http:</span> <span class="number">8080</span></span><br><span class="line">  <span class="comment"># https: 8443</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## NGINX containers&#x27; resource requests and limits</span></span><br><span class="line"><span class="comment">## ref: http://kubernetes.io/docs/user-guide/compute-resources/</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">resources:</span></span><br><span class="line">  <span class="comment"># We usually recommend not to specify default resources and to leave this as a conscious</span></span><br><span class="line">  <span class="comment"># choice for the user. This also increases chances charts run on environments with little</span></span><br><span class="line">  <span class="comment"># resources, such as Minikube. If you do want to specify resources, uncomment the following</span></span><br><span class="line">  <span class="comment"># lines, adjust them as necessary, and remove the curly braces after &#x27;resources:&#x27;.</span></span><br><span class="line">  <span class="attr">limits:</span> &#123;&#125;</span><br><span class="line">  <span class="comment">#   cpu: 100m</span></span><br><span class="line">  <span class="comment">#   memory: 128Mi</span></span><br><span class="line">  <span class="attr">requests:</span> &#123;&#125;</span><br><span class="line">  <span class="comment">#   cpu: 100m</span></span><br><span class="line">  <span class="comment">#   memory: 128Mi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## NGINX containers&#x27; liveness and readiness probes.</span></span><br><span class="line"><span class="comment">## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">livenessProbe:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">initialDelaySeconds:</span> <span class="number">30</span></span><br><span class="line">  <span class="attr">timeoutSeconds:</span> <span class="number">5</span></span><br><span class="line">  <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">failureThreshold:</span> <span class="number">6</span></span><br><span class="line">  <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">readinessProbe:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">initialDelaySeconds:</span> <span class="number">5</span></span><br><span class="line">  <span class="attr">timeoutSeconds:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">periodSeconds:</span> <span class="number">5</span></span><br><span class="line">  <span class="attr">failureThreshold:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Custom Liveness probe</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">customLivenessProbe:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">## Custom Rediness probe</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">customReadinessProbe:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">## Autoscaling parameters</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">autoscaling:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># minReplicas: 1</span></span><br><span class="line">  <span class="comment"># maxReplicas: 10</span></span><br><span class="line">  <span class="comment"># targetCPU: 50</span></span><br><span class="line">  <span class="comment"># targetMemory: 50</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Array to add extra volumes (evaluated as a template)</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">extraVolumes:</span> []</span><br><span class="line"></span><br><span class="line"><span class="comment">## Array to add extra mounts (normally used with extraVolumes, evaluated as a template)</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">extraVolumeMounts:</span> []</span><br><span class="line"></span><br><span class="line"><span class="comment">## NGINX Service properties</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">service:</span></span><br><span class="line">  <span class="comment">## Service type</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">LoadBalancer</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## HTTP Port</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## HTTPS Port</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">httpsPort:</span> <span class="number">443</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## Specify the nodePort(s) value(s) for the LoadBalancer and NodePort service types.</span></span><br><span class="line">  <span class="comment">## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">nodePorts:</span></span><br><span class="line">    <span class="attr">http:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="attr">https:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## Target port reference value for the Loadbalancer service types can be specified explicitly.</span></span><br><span class="line">  <span class="comment">## Listeners for the Loadbalancer can be custom mapped to the http or https service.</span></span><br><span class="line">  <span class="comment">## Example: Mapping the https listener to targetPort http [http: https]</span></span><br><span class="line">  <span class="attr">targetPort:</span></span><br><span class="line">    <span class="attr">http:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">https:</span> <span class="string">https</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## Set the LoadBalancer service type to internal only.</span></span><br><span class="line">  <span class="comment">## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="comment"># loadBalancerIP:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## Provide any additional annotations which may be required. This can be used to</span></span><br><span class="line">  <span class="comment">## set the LoadBalancer service type to internal only.</span></span><br><span class="line">  <span class="comment">## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">annotations:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">## Enable client source IP preservation</span></span><br><span class="line">  <span class="comment">## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">externalTrafficPolicy:</span> <span class="string">Cluster</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## LDAP Auth Daemon Properties</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="comment">## Daemon that will proxy LDAP requests</span></span><br><span class="line"><span class="comment">## between NGINX and a given LDAP Server</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">ldapDaemon:</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## Bitnami NGINX LDAP Auth Daemon image</span></span><br><span class="line">  <span class="comment">## ref: https://hub.docker.com/r/bitnami/nginx-ldap-auth-daemon/tags/</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">image:</span></span><br><span class="line">    <span class="attr">registry:</span> <span class="string">docker.io</span></span><br><span class="line">    <span class="attr">repository:</span> <span class="string">bitnami/nginx-ldap-auth-daemon</span></span><br><span class="line">    <span class="attr">tag:</span> <span class="number">0.20200116</span><span class="number">.0</span><span class="string">-debian-10-r141</span></span><br><span class="line">    <span class="attr">pullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## LDAP Daemon port</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8888</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## LDAP Auth Daemon Configuration</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="comment">## These different properties define the form of requests performed</span></span><br><span class="line">  <span class="comment">## against the given LDAP server</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="comment">## BEWARE THAT THESE VALUES WILL BE IGNORED IF A CUSTOM LDAP SERVER BLOCK</span></span><br><span class="line">  <span class="comment">## ALREADY SPECIFIES THEM.</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">ldapConfig:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">## LDAP URI where to query the server</span></span><br><span class="line">    <span class="comment">## Must follow the pattern -&gt; ldap[s]:/&lt;hostname&gt;:&lt;port&gt;</span></span><br><span class="line">    <span class="attr">uri:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">## LDAP search base DN</span></span><br><span class="line">    <span class="attr">baseDN:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">## LDAP bind DN</span></span><br><span class="line">    <span class="attr">bindDN:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">## LDAP bind Password</span></span><br><span class="line">    <span class="attr">bindPassword:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">## LDAP search filter</span></span><br><span class="line">    <span class="attr">filter:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">## LDAP auth realm</span></span><br><span class="line">    <span class="attr">httpRealm:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">## LDAP cookie name</span></span><br><span class="line">    <span class="attr">httpCookieName:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## NGINX Configuration File containing the directives (that define</span></span><br><span class="line">  <span class="comment">## how LDAP requests are performed) and tells NGINX to use the LDAP Daemon</span></span><br><span class="line">  <span class="comment">## as proxy. Besides, it defines the routes that will require of LDAP auth</span></span><br><span class="line">  <span class="comment">## in order to be accessed.</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="comment">## If LDAP directives are provided, they will take precedence over</span></span><br><span class="line">  <span class="comment">## the ones specified in ldapConfig.</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="comment">## This will be evaluated as a template.</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">nginxServerBlock:</span> <span class="string">|-</span></span><br><span class="line"><span class="string">    server &#123;</span></span><br><span class="line"><span class="string">    listen 0.0.0.0:&#123;&#123; .Values.containerPorts.http &#125;&#125;;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="comment"># You can provide a special subPath or the root</span></span><br><span class="line">    <span class="string">location</span> <span class="string">=</span> <span class="string">/</span> &#123;</span><br><span class="line">        <span class="string">auth_request</span> <span class="string">/auth-proxy;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="string">location</span> <span class="string">=</span> <span class="string">/auth-proxy</span> &#123;</span><br><span class="line">        <span class="string">internal;</span></span><br><span class="line"></span><br><span class="line">        <span class="string">proxy_pass</span> <span class="string">http://127.0.0.1:<span class="template-variable">&#123;&#123; .Values.ldapDaemon.port &#125;&#125;</span></span><span class="string">;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">###############################################################</span></span><br><span class="line">        <span class="comment"># YOU SHOULD CHANGE THE FOLLOWING TO YOUR LDAP CONFIGURATION  #</span></span><br><span class="line">        <span class="comment">###############################################################</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># URL and port for connecting to the LDAP server</span></span><br><span class="line">        <span class="string">proxy_set_header</span> <span class="string">X-Ldap-URL</span> <span class="string">&quot;ldap://YOUR_LDAP_SERVER_IP:YOUR_LDAP_SERVER_PORT&quot;</span><span class="string">;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># Base DN</span></span><br><span class="line">        <span class="string">proxy_set_header</span> <span class="string">X-Ldap-BaseDN</span> <span class="string">&quot;dc=example,dc=org&quot;</span><span class="string">;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># Bind DN</span></span><br><span class="line">        <span class="string">proxy_set_header</span> <span class="string">X-Ldap-BindDN</span> <span class="string">&quot;cn=admin,dc=example,dc=org&quot;</span><span class="string">;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># Bind password</span></span><br><span class="line">        <span class="string">proxy_set_header</span> <span class="string">X-Ldap-BindPass</span> <span class="string">&quot;adminpassword&quot;</span><span class="string">;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## Use an existing Secret holding an NGINX Configuration file that</span></span><br><span class="line">  <span class="comment">## configures LDAP requests. (will be evaluated as a template)</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="comment">## If provided, both nginxServerBlock and ldapConfig properties are ignored.</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">existingNginxServerBlockSecret:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## LDAP Auth Daemon containers&#x27; liveness and readiness probes.</span></span><br><span class="line">  <span class="comment">## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">livenessProbe:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">initialDelaySeconds:</span> <span class="number">30</span></span><br><span class="line">    <span class="attr">timeoutSeconds:</span> <span class="number">5</span></span><br><span class="line">    <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">    <span class="attr">failureThreshold:</span> <span class="number">6</span></span><br><span class="line">    <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">readinessProbe:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">initialDelaySeconds:</span> <span class="number">5</span></span><br><span class="line">    <span class="attr">timeoutSeconds:</span> <span class="number">3</span></span><br><span class="line">    <span class="attr">periodSeconds:</span> <span class="number">5</span></span><br><span class="line">    <span class="attr">failureThreshold:</span> <span class="number">3</span></span><br><span class="line">    <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## Custom Liveness probe</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">customLivenessProbe:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">## Custom Rediness probe</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">customReadinessProbe:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">## Ingress paramaters</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">ingress:</span></span><br><span class="line">  <span class="comment">## Set to true to enable ingress record generation</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## Set this to true in order to add the corresponding annotations for cert-manager</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">certManager:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## When the ingress is enabled, a host pointing to this will be created</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">hostname:</span> <span class="string">example.local</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## Ingress annotations done as key:value pairs</span></span><br><span class="line">  <span class="comment">## For a full list of possible ingress annotations, please see</span></span><br><span class="line">  <span class="comment">## ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="comment">## If certManager is set to true, annotation kubernetes.io/tls-acme: &quot;true&quot; will automatically be set</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">annotations:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">## Enable TLS configuration for the hostname defined at ingress.hostname parameter</span></span><br><span class="line">  <span class="comment">## TLS certificates will be retrieved from a TLS secret with name: &#123;&#123;- printf &quot;%s-tls&quot; .Values.ingress.hostname &#125;&#125;</span></span><br><span class="line">  <span class="comment">## You can use the ingress.secrets parameter to create this TLS secret, relay on cert-manager to create it, or</span></span><br><span class="line">  <span class="comment">## let the chart create self-signed certificates for you</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">tls:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## The list of additional hostnames to be covered with this ingress record.</span></span><br><span class="line">  <span class="comment">## Most likely the hostname above will be enough, but in the event more hosts are needed, this is an array</span></span><br><span class="line">  <span class="comment">## E.g.</span></span><br><span class="line">  <span class="comment">## extraHosts:</span></span><br><span class="line">  <span class="comment">##   - name: example.local</span></span><br><span class="line">  <span class="comment">##     path: /</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">extraHosts:</span> []</span><br><span class="line"></span><br><span class="line">  <span class="comment">## The tls configuration for additional hostnames to be covered with this ingress record.</span></span><br><span class="line">  <span class="comment">## see: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls</span></span><br><span class="line">  <span class="comment">## E.g.</span></span><br><span class="line">  <span class="comment">## extraTls:</span></span><br><span class="line">  <span class="comment">##   - hosts:</span></span><br><span class="line">  <span class="comment">##       - example.local</span></span><br><span class="line">  <span class="comment">##     secretName: example.local-tls</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">extraTls:</span> []</span><br><span class="line"></span><br><span class="line">  <span class="comment">## If you&#x27;re providing your own certificates, please use this to add the certificates as secrets</span></span><br><span class="line">  <span class="comment">## key and certificate should start with -----BEGIN CERTIFICATE----- or -----BEGIN RSA PRIVATE KEY-----</span></span><br><span class="line">  <span class="comment">## name should line up with a secretName set further up</span></span><br><span class="line">  <span class="comment">## If it is not set and you&#x27;re using cert-manager, this is unneeded, as it will create the secret for you</span></span><br><span class="line">  <span class="comment">## If it is not set and you&#x27;re NOT using cert-manager either, self-signed certificates will be created</span></span><br><span class="line">  <span class="comment">## It is also possible to create and manage the certificates outside of this helm chart</span></span><br><span class="line">  <span class="comment">## Please see README.md for more information</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="comment">## E.g.</span></span><br><span class="line">  <span class="comment">## secrets:</span></span><br><span class="line">  <span class="comment">##   - name: example.local-tls</span></span><br><span class="line">  <span class="comment">##     key:</span></span><br><span class="line">  <span class="comment">##     certificate:</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">secrets:</span> []</span><br><span class="line"></span><br><span class="line"><span class="comment">## Health Ingress parameters</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">healthIngress:</span></span><br><span class="line">  <span class="comment">## Set to true to enable health ingress record generation</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## Set this to true in order to add the corresponding annotations for cert-manager</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">certManager:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## When the health ingress is enabled, a host pointing to this will be created</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">hostname:</span> <span class="string">example.local</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## Health Ingress annotations done as key:value pairs</span></span><br><span class="line">  <span class="comment">## For a full list of possible ingress annotations, please see</span></span><br><span class="line">  <span class="comment">## ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="comment">## If certManager is set to true, annotation kubernetes.io/tls-acme: &quot;true&quot; will automatically be set</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">annotations:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">## Enable TLS configuration for the hostname defined at healthIngress.hostname parameter</span></span><br><span class="line">  <span class="comment">## TLS certificates will be retrieved from a TLS secret with name: &#123;&#123;- printf &quot;%s-tls&quot; .Values.healthIngress.hostname &#125;&#125;</span></span><br><span class="line">  <span class="comment">## You can use the healthIngress.secrets parameter to create this TLS secret, relay on cert-manager to create it, or</span></span><br><span class="line">  <span class="comment">## let the chart create self-signed certificates for you</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">tls:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## The list of additional hostnames to be covered with this health ingress record.</span></span><br><span class="line">  <span class="comment">## Most likely the hostname above will be enough, but in the event more hosts are needed, this is an array</span></span><br><span class="line">  <span class="comment">## E.g.</span></span><br><span class="line">  <span class="comment">## extraHosts:</span></span><br><span class="line">  <span class="comment">##   - name: example.local</span></span><br><span class="line">  <span class="comment">##     path: /</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">extraHosts:</span> []</span><br><span class="line"></span><br><span class="line">  <span class="comment">## The tls configuration for additional hostnames to be covered with this health ingress record.</span></span><br><span class="line">  <span class="comment">## see: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls</span></span><br><span class="line">  <span class="comment">## E.g.</span></span><br><span class="line">  <span class="comment">## extraTls:</span></span><br><span class="line">  <span class="comment">##   - hosts:</span></span><br><span class="line">  <span class="comment">##       - example.local</span></span><br><span class="line">  <span class="comment">##     secretName: example.local-tls</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">extraTls:</span> []</span><br><span class="line"></span><br><span class="line">  <span class="comment">## If you&#x27;re providing your own certificates, please use this to add the certificates as secrets</span></span><br><span class="line">  <span class="comment">## key and certificate should start with -----BEGIN CERTIFICATE----- or -----BEGIN RSA PRIVATE KEY-----</span></span><br><span class="line">  <span class="comment">## name should line up with a secretName set further up</span></span><br><span class="line">  <span class="comment">## If it is not set and you&#x27;re using cert-manager, this is unneeded, as it will create the secret for you</span></span><br><span class="line">  <span class="comment">## If it is not set and you&#x27;re NOT using cert-manager either, self-signed certificates will be created</span></span><br><span class="line">  <span class="comment">## It is also possible to create and manage the certificates outside of this helm chart</span></span><br><span class="line">  <span class="comment">## Please see README.md for more information</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="comment">## E.g.</span></span><br><span class="line">  <span class="comment">## secrets:</span></span><br><span class="line">  <span class="comment">##   - name: example.local-tls</span></span><br><span class="line">  <span class="comment">##     key:</span></span><br><span class="line">  <span class="comment">##     certificate:</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">secrets:</span> []</span><br><span class="line"></span><br><span class="line"><span class="comment">## Prometheus Exporter / Metrics</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="attr">metrics:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## Bitnami NGINX Prometheus Exporter image</span></span><br><span class="line">  <span class="comment">## ref: https://hub.docker.com/r/bitnami/nginx-exporter/tags/</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">image:</span></span><br><span class="line">    <span class="attr">registry:</span> <span class="string">docker.io</span></span><br><span class="line">    <span class="attr">repository:</span> <span class="string">bitnami/nginx-exporter</span></span><br><span class="line">    <span class="attr">tag:</span> <span class="number">0.8</span><span class="number">.0</span><span class="string">-debian-10-r98</span></span><br><span class="line">    <span class="attr">pullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">    <span class="comment">## Optionally specify an array of imagePullSecrets.</span></span><br><span class="line">    <span class="comment">## Secrets must be manually created in the namespace.</span></span><br><span class="line">    <span class="comment">## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/</span></span><br><span class="line">    <span class="comment">##</span></span><br><span class="line">    <span class="comment"># pullSecrets:</span></span><br><span class="line">    <span class="comment">#   - myRegistryKeySecretName</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## Prometheus exporter pods&#x27; annotation and labels</span></span><br><span class="line">  <span class="comment">## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">podAnnotations:</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">## Prometheus exporter service parameters</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">service:</span></span><br><span class="line">    <span class="comment">## NGINX Prometheus exporter port</span></span><br><span class="line">    <span class="comment">##</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">9113</span></span><br><span class="line">    <span class="comment">## Annotations for the Prometheus exporter service</span></span><br><span class="line">    <span class="comment">##</span></span><br><span class="line">    <span class="attr">annotations:</span></span><br><span class="line">      <span class="attr">prometheus.io/scrape:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">      <span class="attr">prometheus.io/port:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123; .Values.metrics.service.port &#125;&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## NGINX Prometheus exporter resource requests and limits</span></span><br><span class="line">  <span class="comment">## ref: http://kubernetes.io/docs/user-guide/compute-resources/</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">    <span class="comment"># We usually recommend not to specify default resources and to leave this as a conscious</span></span><br><span class="line">    <span class="comment"># choice for the user. This also increases chances charts run on environments with little</span></span><br><span class="line">    <span class="comment"># resources, such as Minikube. If you do want to specify resources, uncomment the following</span></span><br><span class="line">    <span class="comment"># lines, adjust them as necessary, and remove the curly braces after &#x27;resources:&#x27;.</span></span><br><span class="line">    <span class="attr">limits:</span> &#123;&#125;</span><br><span class="line">    <span class="comment">#   cpu: 100m</span></span><br><span class="line">    <span class="comment">#   memory: 128Mi</span></span><br><span class="line">    <span class="attr">requests:</span> &#123;&#125;</span><br><span class="line">    <span class="comment">#   cpu: 100m</span></span><br><span class="line">    <span class="comment">#   memory: 128Mi</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">## Prometheus Operator ServiceMonitor configuration</span></span><br><span class="line">  <span class="comment">##</span></span><br><span class="line">  <span class="attr">serviceMonitor:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment">## Namespace in which Prometheus is running</span></span><br><span class="line">    <span class="comment">##</span></span><br><span class="line">    <span class="comment"># namespace: monitoring</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">## Interval at which metrics should be scraped.</span></span><br><span class="line">    <span class="comment">## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint</span></span><br><span class="line">    <span class="comment">##</span></span><br><span class="line">    <span class="comment"># interval: 10s</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">## Timeout after which the scrape is ended</span></span><br><span class="line">    <span class="comment">## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint</span></span><br><span class="line">    <span class="comment">##</span></span><br><span class="line">    <span class="comment"># scrapeTimeout: 10s</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">## ServiceMonitor selector labels</span></span><br><span class="line">    <span class="comment">## ref: https://github.com/bitnami/charts/tree/master/bitnami/prometheus-operator#prometheus-configuration</span></span><br><span class="line">    <span class="comment">##</span></span><br><span class="line">    <span class="comment"># selector:</span></span><br><span class="line">    <span class="comment">#   prometheus: my-prometheus</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>install <code>bitnami/nginx</code> with values file</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">helm --namespace=default install test-server -f values.yaml </span><br></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
      <tags>
        <tag>howto</tag>
        <tag>kubernetes</tag>
        <tag>helm</tag>
      </tags>
  </entry>
</search>
